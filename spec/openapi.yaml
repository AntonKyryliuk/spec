securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
swagger: "2.0"
info:
  version: "2.4"
  title: Magento Community
host: localhost
basePath: /all
schemes:
  - https
tags:
  -
    name: storeStoreRepositoryV1
    description: Store repository interface
  -
    name: storeGroupRepositoryV1
    description: Group repository interface
  -
    name: storeWebsiteRepositoryV1
    description: Website repository interface
  -
    name: storeStoreConfigManagerV1
    description: Store config manager interface
  -
    name: directoryCurrencyInformationAcquirerV1
    description: Currency information acquirer interface
  -
    name: directoryCountryInformationAcquirerV1
    description: Country information acquirer interface
  -
    name: cmsPageRepositoryV1
    description: CMS page CRUD interface.
  -
    name: cmsBlockRepositoryV1
    description: CMS block CRUD interface.
  -
    name: backendModuleServiceV1
    description: Interface for module service.
  -
    name: eavAttributeSetRepositoryV1
    description: >
      Interface
      AttributeSetRepositoryInterface
  -
    name: eavAttributeSetManagementV1
    description: >
      Interface
      AttributeSetManagementInterface
  -
    name: customerGroupRepositoryV1
    description: Customer group CRUD interface
  -
    name: customerGroupManagementV1
    description: Interface for managing customer groups.
  -
    name: customerCustomerGroupConfigV1
    description: >
      Interface for system configuration
      operations for customer groups.
  -
    name: customerCustomerMetadataV1
    description: >
      Interface for retrieval information
      about customer attributes metadata.
  -
    name: customerAddressMetadataV1
    description: >
      Interface for retrieval information
      about customer address attributes
      metadata.
  -
    name: customerCustomerRepositoryV1
    description: Customer CRUD interface.
  -
    name: customerAccountManagementV1
    description: >
      Interface for managing customers
      accounts.
  -
    name: customerAddressRepositoryV1
    description: Customer address CRUD interface.
  -
    name: catalogProductRepositoryV1
    description: ""
  -
    name: catalogProductAttributeTypesListV1
    description: ""
  -
    name: catalogProductAttributeRepositoryV1
    description: >
      Interface RepositoryInterface must be
      implemented in new model
  -
    name: >
      catalogProductAttributeIsFilterableManagementV1
    description: "Intended to allow setting 'is_filterable' property for specific attribute as integer value via REST/SOAP API"
  -
    name: catalogCategoryAttributeRepositoryV1
    description: >
      Interface RepositoryInterface must be
      implemented in new model
  -
    name: >
      catalogCategoryAttributeOptionManagementV1
    description: >
      Interface RepositoryInterface must be
      implemented in new model
  -
    name: catalogProductTypeListV1
    description: ""
  -
    name: catalogAttributeSetRepositoryV1
    description: ""
  -
    name: catalogAttributeSetManagementV1
    description: ""
  -
    name: catalogProductAttributeManagementV1
    description: ""
  -
    name: catalogProductAttributeGroupRepositoryV1
    description: ""
  -
    name: >
      catalogProductAttributeOptionManagementV1
    description: ""
  -
    name: catalogProductAttributeOptionUpdateV1
    description: >
      Interface to update product attribute
      option
  -
    name: catalogProductMediaAttributeManagementV1
    description: ""
  -
    name: >
      catalogProductAttributeMediaGalleryManagementV1
    description: ""
  -
    name: catalogProductTierPriceManagementV1
    description: ""
  -
    name: catalogTierPriceStorageV1
    description: Tier prices storage.
  -
    name: catalogBasePriceStorageV1
    description: Base prices storage.
  -
    name: catalogCostStorageV1
    description: Product cost storage.
  -
    name: catalogSpecialPriceStorageV1
    description: >
      Special price storage presents efficient
      price API and is used to retrieve,
      update or delete special prices.
  -
    name: catalogCategoryRepositoryV1
    description: ""
  -
    name: catalogCategoryManagementV1
    description: ""
  -
    name: catalogCategoryListV1
    description: ""
  -
    name: catalogProductCustomOptionTypeListV1
    description: ""
  -
    name: catalogProductCustomOptionRepositoryV1
    description: ""
  -
    name: catalogProductLinkTypeListV1
    description: ""
  -
    name: catalogProductLinkManagementV1
    description: ""
  -
    name: catalogProductLinkRepositoryV1
    description: >
      Interface Product links handling
      interface
  -
    name: catalogCategoryLinkManagementV1
    description: ""
  -
    name: catalogCategoryLinkRepositoryV1
    description: ""
  -
    name: catalogProductWebsiteLinkRepositoryV1
    description: >
      Interface
      ProductWebsiteLinkRepositoryInterface
  -
    name: catalogProductRenderListV1
    description: >
      Interface which provides product renders
      information for products.
  -
    name: twoFactorAuthAdminTokenServiceV1
    description: >
      Obtain basic information about the user
      required to setup or use 2fa
  -
    name: integrationCustomerTokenServiceV1
    description: >
      Interface providing token generation for
      Customers
  -
    name: catalogInventoryStockRegistryV1
    description: Interface StockRegistryInterface
  -
    name: searchV1
    description: Search API for all requests
  -
    name: quoteCartRepositoryV1
    description: Interface CartRepositoryInterface
  -
    name: quoteCartManagementV1
    description: Interface CartManagementInterface
  -
    name: quoteGuestCartRepositoryV1
    description: >
      Cart Repository interface for guest
      carts.
  -
    name: quoteGuestCartManagementV1
    description: >
      Cart Management interface for guest
      carts.
  -
    name: quoteShippingMethodManagementV1
    description: >
      Interface
      ShippingMethodManagementInterface
  -
    name: quoteShipmentEstimationV1
    description: Interface ShipmentManagementInterface
  -
    name: quoteGuestShippingMethodManagementV1
    description: >
      Shipping method management interface for
      guest carts.
  -
    name: quoteGuestShipmentEstimationV1
    description: >
      Interface
      GuestShipmentEstimationInterface
  -
    name: quoteCartItemRepositoryV1
    description: Interface CartItemRepositoryInterface
  -
    name: quoteGuestCartItemRepositoryV1
    description: >
      Cart Item repository interface for guest
      carts.
  -
    name: quotePaymentMethodManagementV1
    description: >
      Interface
      PaymentMethodManagementInterface
  -
    name: quoteGuestPaymentMethodManagementV1
    description: >
      Payment method management interface for
      guest carts.
  -
    name: quoteBillingAddressManagementV1
    description: >
      Interface
      BillingAddressManagementInterface
  -
    name: quoteGuestBillingAddressManagementV1
    description: >
      Billing address management interface for
      guest carts.
  -
    name: quoteCouponManagementV1
    description: Coupon management service interface.
  -
    name: quoteGuestCouponManagementV1
    description: >
      Coupon management interface for guest
      carts.
  -
    name: quoteCartTotalRepositoryV1
    description: Interface CartTotalRepositoryInterface
  -
    name: quoteGuestCartTotalManagementV1
    description: >
      Bundled API to collect totals for cart
      based on shipping/payment methods and
      additional data.
  -
    name: quoteGuestCartTotalRepositoryV1
    description: >
      Cart totals repository interface for
      guest carts.
  -
    name: quoteCartTotalManagementV1
    description: >
      Bundled API to collect totals for cart
      based on shipping/payment methods and
      additional data.
  -
    name: twoFactorAuthTfaV1
    description: 2FA configuration manager.
  -
    name: twoFactorAuthUserConfigManagerV1
    description: User configuration manager
  -
    name: twoFactorAuthTfatActionsV1
    description: >
      Actions the user can perform using the
      pre-2fa token (tfat)
  -
    name: twoFactorAuthGoogleConfigureV1
    description: Represents the google provider
  -
    name: twoFactorAuthGoogleAuthenticateV1
    description: Represents google authentication
  -
    name: twoFactorAuthAuthyConfigureV1
    description: Represents the authy provider
  -
    name: twoFactorAuthAuthyAuthenticateV1
    description: >
      Represents the authy provider
      authentication
  -
    name: twoFactorAuthU2fKeyConfigureV1
    description: >
      Represent configuration for u2f key
      provider
  -
    name: twoFactorAuthU2fKeyAuthenticateV1
    description: >
      Represent Authentication for u2f key
      provider
  -
    name: twoFactorAuthDuoConfigureV1
    description: >
      Represents configuration for the duo
      security provider
  -
    name: twoFactorAuthDuoAuthenticateV1
    description: >
      Represents authentication for the duo
      security provider
  -
    name: salesOrderRepositoryV1
    description: >
      Order repository interface. An order is
      a document that a web store issues to a
      customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
  -
    name: salesOrderManagementV1
    description: >
      Order management interface. An order is
      a document that a web store issues to a
      customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
  -
    name: salesOrderAddressRepositoryV1
    description: >
      Order address repository interface. An
      order is a document that a web store
      issues to a customer. Magento generates
      a sales order that lists the product
      items, billing and shipping addresses,
      and shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
  -
    name: salesOrderItemRepositoryV1
    description: >
      Order item repository interface. An
      order is a document that a web store
      issues to a customer. Magento generates
      a sales order that lists the product
      items, billing and shipping addresses,
      and shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
  -
    name: salesInvoiceRepositoryV1
    description: >
      Invoice repository interface. An invoice
      is a record of the receipt of payment
      for an order.
  -
    name: salesInvoiceManagementV1
    description: >
      Invoice management interface. An invoice
      is a record of the receipt of payment
      for an order.
  -
    name: salesInvoiceCommentRepositoryV1
    description: >
      Invoice comment repository interface. An
      invoice is a record of the receipt of
      payment for an order. An invoice can
      include comments that detail the invoice
      history.
  -
    name: salesRefundInvoiceV1
    description: Interface RefundInvoiceInterface
  -
    name: salesCreditmemoManagementV1
    description: >
      Credit memo add comment interface. After
      a customer places and pays for an order
      and an invoice has been issued, the
      merchant can create a credit memo to
      refund all or part of the amount paid
      for any returned or undelivered items.
      The memo restores funds to the customer
      account so that the customer can make
      future purchases.
  -
    name: salesCreditmemoRepositoryV1
    description: >
      Credit memo repository interface. After
      a customer places and pays for an order
      and an invoice has been issued, the
      merchant can create a credit memo to
      refund all or part of the amount paid
      for any returned or undelivered items.
      The memo restores funds to the customer
      account so that the customer can make
      future purchases.
  -
    name: salesCreditmemoCommentRepositoryV1
    description: >
      Credit memo comment repository
      interface. After a customer places and
      pays for an order and an invoice has
      been issued, the merchant can create a
      credit memo to refund all or part of the
      amount paid for any returned or
      undelivered items. The memo restores
      funds to the customer account so that
      the customer can make future purchases.
      A credit memo usually includes comments
      that detail why the credit memo amount
      was credited to the customer.
  -
    name: salesRefundOrderV1
    description: Interface RefundOrderInterface
  -
    name: salesShipmentRepositoryV1
    description: >
      Shipment repository interface. A
      shipment is a delivery package that
      contains products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package.
  -
    name: salesShipmentManagementV1
    description: >
      Shipment management interface. A
      shipment is a delivery package that
      contains products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package.
  -
    name: salesShipmentCommentRepositoryV1
    description: >
      Shipment comment repository interface. A
      shipment is a delivery package that
      contains products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package. A shipment
      document can contain comments.
  -
    name: salesShipmentTrackRepositoryV1
    description: >
      Shipment track repository interface. A
      shipment is a delivery package that
      contains products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package.
  -
    name: salesShipOrderV1
    description: Class ShipOrderInterface
  -
    name: salesTransactionRepositoryV1
    description: >
      Transaction repository interface. A
      transaction is an interaction between a
      merchant and a customer such as a
      purchase, a credit, a refund, and so on.
  -
    name: salesInvoiceOrderV1
    description: Class InvoiceOrderInterface
  -
    name: >
      checkoutGuestShippingInformationManagementV1
    description: >
      Interface for managing guest shipping
      address information
  -
    name: checkoutShippingInformationManagementV1
    description: >
      Interface for managing customer shipping
      address information
  -
    name: checkoutTotalsInformationManagementV1
    description: Interface for quote totals calculation
  -
    name: >
      checkoutGuestTotalsInformationManagementV1
    description: >
      Interface for guest quote totals
      calculation
  -
    name: >
      checkoutGuestPaymentInformationManagementV1
    description: >
      Interface for managing guest payment
      information
  -
    name: checkoutPaymentInformationManagementV1
    description: >
      Interface for managing quote payment
      information
  -
    name: configurableProductLinkManagementV1
    description: >
      Manage children products of configurable
      product
  -
    name: >
      configurableProductConfigurableProductManagementV1
    description: >
      Interface
      ConfigurableProductManagementInterface
  -
    name: configurableProductOptionRepositoryV1
    description: Manage options of configurable product
  -
    name: analyticsLinkProviderV1
    description: >
      Provides link to file with collected
      report data.
  -
    name: downloadableLinkRepositoryV1
    description: Interface LinkRepositoryInterface
  -
    name: downloadableSampleRepositoryV1
    description: Interface SampleRepositoryInterface
  -
    name: bundleProductLinkManagementV1
    description: Interface for Management of ProductLink
  -
    name: bundleProductOptionRepositoryV1
    description: >
      Interface
      ProductOptionRepositoryInterface
  -
    name: bundleProductOptionTypeListV1
    description: Interface ProductOptionTypeListInterface
  -
    name: bundleProductOptionManagementV1
    description: Option manager for bundle products
  -
    name: giftMessageCartRepositoryV1
    description: Interface CartRepositoryInterface
  -
    name: giftMessageItemRepositoryV1
    description: Interface ItemRepositoryInterface
  -
    name: giftMessageGuestCartRepositoryV1
    description: Interface GuestCartRepositoryInterface
  -
    name: giftMessageGuestItemRepositoryV1
    description: Interface GuestItemRepositoryInterface
  -
    name: liqpayMagentoLiqPayLiqPayCallbackV1
    description: ""
  -
    name: inventoryApiSourceRepositoryV1
    description: "In Magento 2 Repository considered as an implementation of Facade pattern which provides a simplified interface to a larger body of code responsible for Domain Entity management The main intention is to make API more readable and reduce dependencies of business logic code on the inner workings of a module, since most code uses the facade, thus allowing more flexibility in developing the system Along with this such approach helps to segregate two responsibilities: 1. Repository now could be considered as an API - Interface for usage (calling) in the business logic 2. Separate class-commands to which Repository proxies initial call (like, Get Save GetList Delete) could be    considered as SPI - Interfaces that you should extend and implement to customize current behaviour There is no delete method. It is related to that Source can't be deleted due to we don't want miss data related to Sources (like as order information). But Source can be disabled Used fully qualified namespaces in annotations for proper work of WebApi request parser"
  -
    name: >
      inventoryApiGetSourcesAssignedToStockOrderedByPriorityV1
    description: >
      Retrieve sources related to current
      stock ordered by priority Used fully
      qualified namespaces in annotations for
      proper work of WebApi request parser
  -
    name: inventoryApiStockRepositoryV1
    description: 'In Magento 2 Repository considered as an implementation of Facade pattern which provides a simplified interface to a larger body of code responsible for Domain Entity management The main intention is to make API more readable and reduce dependencies of business logic code on the inner workings of a module, since most code uses the facade, thus allowing more flexibility in developing the system Along with this such approach helps to segregate two responsibilities: 1. Repository now could be considered as an API - Interface for usage (calling) in the business logic 2. Separate class-commands to which Repository proxies initial call (like, Get Save GetList Delete) could be    considered as SPI - Interfaces that you should extend and implement to customize current behaviour Used fully qualified namespaces in annotations for proper work of WebApi request parser'
  -
    name: inventoryApiGetStockSourceLinksV1
    description: >
      Find StockSourceLink list by
      SearchCriteria API Used fully qualified
      namespaces in annotations for proper
      work of WebApi request parser
  -
    name: inventoryApiStockSourceLinksSaveV1
    description: >
      Service method for stock source links
      save multiple Performance efficient API
      Used fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
  -
    name: inventoryApiStockSourceLinksDeleteV1
    description: >
      Service method for stock source links
      delete multiple Performance efficient
      API Used fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
  -
    name: inventoryApiSourceItemRepositoryV1
    description: 'In Magento 2 Repository considered as an implementation of Facade pattern which provides a simplified interface to a larger body of code responsible for Domain Entity management The main intention is to make API more readable and reduce dependencies of business logic code on the inner workings of a module, since most code uses the facade, thus allowing more flexibility in developing the system Along with this such approach helps to segregate two responsibilities: 1. Repository now could be considered as an API - Interface for usage (calling) in the business logic 2. Separate class-commands to which Repository proxies initial call (like, Get Save GetList Delete) could be    considered as SPI - Interfaces that you should extend and implement to customize current behaviour The method save is absent, due to different semantic (save multiple)'
  -
    name: inventoryApiSourceItemsSaveV1
    description: >
      Service method for source items save
      multiple Performance efficient API Used
      fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
  -
    name: inventoryApiSourceItemsDeleteV1
    description: >
      Service method for source items delete
      multiple Performance efficient API Used
      fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
  -
    name: inventoryCatalogApiBulkSourceAssignV1
    description: Perform bulk product source assignment
  -
    name: inventoryCatalogApiBulkSourceUnassignV1
    description: >
      Perform bulk product source
      un-assignment
  -
    name: >
      inventoryCatalogApiBulkInventoryTransferV1
    description: Perform bulk product inventory transfer
  -
    name: >
      inventoryCatalogApiBulkPartialInventoryTransferV1
    description: >
      Transfer Inventory between sources.
      Moves specified items from origin source
      to destination source.
  -
    name: >
      inventoryDistanceBasedSourceSelectionApiGetDistanceProviderCodeV1
    description: Get selected distance provider code
  -
    name: >
      inventoryDistanceBasedSourceSelectionApiGetDistanceV1
    description: >
      Get distance between two LatLngRequest
      points
  -
    name: >
      inventoryDistanceBasedSourceSelectionApiGetLatLngFromAddressV1
    description: >
      Get latitude and longitude object from
      address
  -
    name: >
      inventoryDistanceBasedSourceSelectionApiGetLatsLngsFromAddressV1
    description: >
      Get all available latitude and longitude
      objects from address interface.
  -
    name: >
      inventoryExportStockApiExportStockSalableQtyV1
    description: "Interface for ExportStockSalableQty provides product's salable qty information by search criteria"
  -
    name: >
      inventoryExportStockApiExportStockIndexDataV1
    description: >
      Class ExportStockIndexData provides
      stock index export based on raw data
      contained in the stock index.
  -
    name: inventorySalesApiGetProductSalableQtyV1
    description: >
      Service which returns Quantity of
      products available to be sold by Product
      SKU and Stock Id. This service
      calculates the salable qty taking into
      account existing reservations for given
      sku and stock id and subtracting min qty
      (a.k.a. "Out-of-Stock Threshold")
  -
    name: inventorySalesApiIsProductSalableV1
    description: >
      Service which detects whether Product is
      salable for a given Stock (stock data +
      reservations)
  -
    name: inventorySalesApiAreProductsSalableV1
    description: >
      Service which detects whether products
      are salable for given stock (stock data
      + reservations).
  -
    name: >
      inventorySalesApiIsProductSalableForRequestedQtyV1
    description: >
      Service which detects whether a certain
      Qty of Product is salable for a given
      Stock (stock data + reservations)
  -
    name: >
      inventorySalesApiAreProductsSalableForRequestedQtyV1
    description: >
      Service which detects whether a given
      products quantities are salable for a
      given stock (stock data + reservations).
  -
    name: inventorySalesApiStockResolverV1
    description: >
      The stock resolver is responsible for
      getting the linked stock for a certain
      sales channel
  -
    name: >
      inventoryInStorePickupApiGetPickupLocationsV1
    description: >
      Get Pickup Locations filtered by
      provided Search Request. Pickup Location
      entities are Immutable object and can
      not be changed after creation. All
      modification of Pickup Location must be
      done through @see
      \Magento\InventoryApi\Api\SourceRepositoryInterface
  -
    name: >
      inventorySourceSelectionApiGetSourceSelectionAlgorithmListV1
    description: >
      Returns the list of Data Interfaces
      which represent registered SSA in the
      system
  -
    name: >
      inventorySourceSelectionApiSourceSelectionServiceV1
    description: >
      Returns source selection algorithm
      result for given Inventory Request
  -
    name: >
      inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1
    description: >
      Send an email to the customer that order
      is ready to be picked up.
  -
    name: >
      inventoryLowQuantityNotificationApiGetSourceItemConfigurationV1
    description: "Get the source item configuration Firstly try to load Source Item configuration if configuration isn't exist then load global configuration value Used fully qualified namespaces in annotations for proper work of WebApi request parser"
  -
    name: >
      inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1
    description: >
      Save the source item configuration Used
      fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
  -
    name: >
      inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1
    description: Delete the source item configuration
  -
    name: salesRuleRuleRepositoryV1
    description: Sales rule CRUD interface
  -
    name: salesRuleCouponRepositoryV1
    description: Coupon CRUD interface
  -
    name: salesRuleCouponManagementV1
    description: Coupon management interface
  -
    name: >
      checkoutAgreementsCheckoutAgreementsRepositoryV1
    description: >
      Interface
      CheckoutAgreementsRepositoryInterface
  -
    name: >
      checkoutAgreementsCheckoutAgreementsListV1
    description: >
      Interface for retrieving list of
      checkout agreements. Extended variation
      of
      CheckoutAgreementsRepositoryInterface::getList
      with possibility to get results
      according search filters without
      predefined limitations.
  -
    name: taxTaxRateRepositoryV1
    description: Tax rate CRUD interface.
  -
    name: taxTaxRuleRepositoryV1
    description: Tax rule CRUD interface.
  -
    name: taxTaxClassRepositoryV1
    description: Tax class CRUD interface.
  -
    name: asynchronousOperationsBulkStatusV1
    description: >
      Interface BulkStatusInterface. Bulk
      summary data with list of operations
      items short data.
  -
    name: >
      asynchronousOperationsOperationRepositoryV1
    description: >
      Bulk operation item repository
      interface. An bulk is a group of queue
      messages. An bulk operation item is a
      queue message.
  -
    name: amastyAcartBlacklistRepositoryV1
    description: Email blacklist CRUD interface
  -
    name: >
      amastyAiContentGeneratorEntityContentResolverV1
    description: ""
  -
    name: amastyBannersLiteUploadFileV1
    description: ""
  -
    name: amastyGdprRequestV1
    description: ""
  -
    name: >
      amastyConditionsNegotiableTotalsInformationManagementV1
    description: >
      Interface for quote totals calculation
      from negotiable checkout
  -
    name: amastyCouponsGetCouponsByCartIdV1
    description: Get Coupons List by cartId/quoteId.
  -
    name: amastyCouponsApplyCouponsToCartV1
    description: >
      Apply Coupons List to cart by
      cartId/quoteId.
  -
    name: amastyCouponsGuestGetCouponsByCartIdV1
    description: Get Coupons List by cartId.
  -
    name: amastyCouponsApplyCouponsToGuestCartV1
    description: Apply Coupons List to cart by cartId.
  -
    name: amastyXsearchSearchV1
    description: ""
  -
    name: >
      amastyImportExportCoreProfileProfileManagerV1
    description: ""
  -
    name: amastyFaqQuestionRepositoryV1
    description: ""
  -
    name: amastyFaqCategoryRepositoryV1
    description: ""
  -
    name: amastyFaqTagRepositoryV1
    description: ""
  -
    name: >
      amastyShopbyBaseDataFilterSettingRepositoryV1
    description: ""
  -
    name: amastyMWishlistWishlistRepositoryV1
    description: ""
  -
    name: amastyMWishlistWishlistItemRepositoryV1
    description: ""
  -
    name: amastyOrderarchiveArchiveProcessorV1
    description: Interface for Order Archive Management
  -
    name: amastyReportsRuleRepositoryV1
    description: ""
  -
    name: amastyRewardsCheckoutRewardsManagementV1
    description: ""
  -
    name: >
      amastyRewardsCatalogHighlightManagementV1
    description: ""
  -
    name: amastyRewardsGuestHighlightManagementV1
    description: ""
  -
    name: >
      amastyRewardsCheckoutHighlightManagementV1
    description: ""
  -
    name: amastyRewardsCustomerBalanceRepositoryV1
    description: ""
  -
    name: amastyRewardsRewardsRepositoryV1
    description: ""
  -
    name: amastyRewardsRewardsProviderV1
    description: Interface RewardsProviderInterface
  -
    name: amastyRewardsRuleRepositoryV1
    description: Interface RuleRepositoryInterface
  -
    name: amastyShopbyPagePageRepositoryV1
    description: ""
  -
    name: >
      biotusAPIWebsiteDataSyncProductDataManagementV1
    description: Interface ProductDataManagementInterface
  -
    name: >
      biotusAPIWebsiteDataSyncGetInfoAttributesManagementV1
    description: >
      Interface
      GetInfoAttributesManagementInterface
  -
    name: biotusAmastyFaqAnswerV1
    description: ""
  -
    name: biotusAmastyFaqQuestionV1
    description: ""
  -
    name: biotusAmastyFaqCustomerQuestionsV1
    description: ""
  -
    name: biotusAmastyFaqSupportV1
    description: ""
  -
    name: biotusAmastyGdprAccountV1
    description: ""
  -
    name: >
      biotusAmastyGroupAssignCustomerProgramsV1
    description: ""
  -
    name: >
      biotusCatalogUpdateManagerBonusesManagementV1
    description: >
      Interface
      UpdateManagerBonusesManagementInterface
  -
    name: >
      biotusCatalogUpdateWarehousesManagementV1
    description: >
      Interface
      UpdateWarehousesManagementInterface
  -
    name: biotusCatalogCategoryFiltersV1
    description: ""
  -
    name: biotusCatalogCategorySortByV1
    description: ""
  -
    name: biotusCatalogPromotionV1
    description: ""
  -
    name: biotusCatalogLoadPricesManagementV1
    description: ""
  -
    name: biotusCatalogProductPriceV1
    description: ""
  -
    name: biotusCatalogCategoryV1
    description: ""
  -
    name: biotusAmastyShopbyBrandBrandsV1
    description: ""
  -
    name: >
      biotusAmastySocialLoginCreateSocialLoginAccessTokenManagementV1
    description: ""
  -
    name: biotusAmastySocialLoginAccountV1
    description: ""
  -
    name: biotusAmastySocialLoginLoginV1
    description: ""
  -
    name: biotusAmastyXsearchPopularV1
    description: ""
  -
    name: biotusAmastyXsearchSearchV1
    description: ""
  -
    name: biotusAnalyticsPaymentOrderV1
    description: ""
  -
    name: biotusBestsellerBestsellersV1
    description: ""
  -
    name: biotusBlogPostsManagementV1
    description: ""
  -
    name: biotusBrandsPopularV1
    description: ""
  -
    name: biotusAmastyMostviewedProductBundleV1
    description: ""
  -
    name: biotusCheckoutIsAccountManagementV1
    description: Interface IsAccountManagementInterface
  -
    name: biotusCheckoutCheckoutConfigManagementV1
    description: ""
  -
    name: biotusCmsDeliveryV1
    description: ""
  -
    name: >
      biotusCommentsFlushReviewsOrderManagementV1
    description: ""
  -
    name: >
      biotusConsultationConsultationManagementV1
    description: ""
  -
    name: biotusEsputnikContactsV1
    description: ""
  -
    name: biotusEsputnikMessagesV1
    description: ""
  -
    name: biotusDiseaseDiseaseManagementV1
    description: ""
  -
    name: biotusGenderGenderChangeManagementV1
    description: ""
  -
    name: biotusShippingLoadPriceManagementV1
    description: Interface LoadPriceManagementInterface
  -
    name: biotusShippingAddressesV1
    description: ""
  -
    name: lofMarketPlaceSellersRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSalesRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSalesInvoicesRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerRatingsRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerMessageRepositoryV1
    description: ""
  -
    name: lofMarketPlaceMessageRepositoryV1
    description: ""
  -
    name: lofMarketPlaceAdminMessageRepositoryV1
    description: ""
  -
    name: lofMarketPlaceUpdateStockRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSettingRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerProductV1
    description: ""
  -
    name: lofMarketPlaceSellerProductManagementV1
    description: ""
  -
    name: >
      lofMarketPlaceAmountTransactionRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerVacationRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerGroupRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellersManagementV1
    description: ""
  -
    name: lofMarketPlaceWithdrawalRepositoryV1
    description: ""
  -
    name: lofMarketPlacePaymentRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerProductsRepositoryV1
    description: ""
  -
    name: >
      lofMarketPlaceSellersFrontendRepositoryV1
    description: ""
  -
    name: lofMarketPlaceSellerReviewRepositoryV1
    description: ""
  -
    name: >
      lofMarketPlaceSubmitSellerReviewRepositoryV1
    description: ""
  -
    name: >
      lofMarketPlaceCustomerMessageRepositoryV1
    description: ""
  -
    name: biotusSmsSmsManagementV1
    description: Interface SmsManagementInterface
  -
    name: biotusSalesPaymentOrderManagementV1
    description: ""
  -
    name: biotusSalesCustomerOrdersV1
    description: ""
  -
    name: biotusSalesManagement1cV1
    description: ""
  -
    name: biotusSalesWayForPayV1
    description: ""
  -
    name: biotusSalesOrderV1
    description: ""
  -
    name: biotusSalesRequisiteV1
    description: ""
  -
    name: >
      biotusMarketplaceSplitOrderShippingEstimateManagementV1
    description: >
      Interface
      ShippingEstimateManagementInterface
  -
    name: >
      biotusMarketplaceSplitOrderGetItemsManagementV1
    description: ""
  -
    name: biotusMultiflatratesStoreV1
    description: ""
  -
    name: biotusNotificationFlushManagementV1
    description: Interface FlushManagementInterface
  -
    name: biotusOrderSyncOrderImportServiceV1
    description: Interface OrderImportServiceInterface
  -
    name: biotusOrderSyncOrderUpdateServiceV1
    description: Interface OrderUpdateServiceInterface
  -
    name: biotusParserGetDataParserManagementV1
    description: ""
  -
    name: >
      biotusPromoRuleApplyProductsRuleManagementV1
    description: ""
  -
    name: >
      biotusPuritanApiGetInfoProductsManagementV1
    description: >
      Interface
      GetInfoProductsManagementInterface
  -
    name: biotusCustomerConfirmPhoneManagementV1
    description: >
      Interface
      ConfirmPhoneManagementInterface
  -
    name: biotusCustomerAuthenticationManagementV1
    description: ""
  -
    name: biotusCustomerNewsletterV1
    description: ""
  -
    name: biotusCustomerPasswordManagementV1
    description: ""
  -
    name: biotusRewardsCustomerProgramsV1
    description: ""
  -
    name: biotusReviewsVideoManagementV1
    description: Interface VideoManagementInterface
  -
    name: biotusReviewsReviewImagesManagementV1
    description: >
      Interface
      ReviewImagesManagementInterface
  -
    name: biotusReviewsReviewV1
    description: ""
  -
    name: biotusReviewsCustomerReviewsV1
    description: ""
  -
    name: biotusRefProgramV1
    description: ""
  -
    name: biotusRefProgramOfflineStoresV1
    description: ""
  -
    name: biotusSliderV1
    description: ""
  -
    name: >
      biotusQuickOfflineOrderSearchCustomerManagementV1
    description: >
      Interface
      SearchCustomerManagementInterface
  -
    name: >
      biotusQuickOfflineOrderSearchProductsManagementV1
    description: >
      Interface
      SearchProductsManagementInterface
  -
    name: >
      biotusQuickOfflineOrderProcessOrderManagementV1
    description: >
      Interface
      ProcessOrderManagementInterface
  -
    name: biotusTelegramTelegramPromoRepositoryV1
    description: ""
  -
    name: >
      biotusTelegramTelegramProductsRepositoryV1
    description: ""
  -
    name: >
      biotusTelegramTelegramCustomerRepositoryV1
    description: ""
  -
    name: >
      biotusTelegramTelegramCustomerAddressRepositoryV1
    description: ""
  -
    name: >
      biotusTelegramTelegramRewardsRepositoryV1
    description: ""
  -
    name: biotusTelegramTelegramOrderRepositoryV1
    description: ""
  -
    name: biotusStockBiotusStockManagementV1
    description: Interface BiotusStockManagementInterface
  -
    name: biotusStockUpcUpdateManagementV1
    description: Interface UpcUpdateManagementInterface
  -
    name: biotusStockMassStockUpdateManagementV1
    description: >
      Interface
      MassStockUpdateManagementInterface
  -
    name: biotusStockMultiStockManagementV1
    description: Interface MultiStockManagementInterface
  -
    name: biotusV2checkoutSaveManagementV1
    description: ""
  -
    name: >
      biotusV2checkoutRequestApiLogManagementV1
    description: ""
  -
    name: biotusV2checkoutGetItemsManagementV1
    description: ""
  -
    name: >
      biotusOrderStatusExtendPeriodOrderManagementV1
    description: >
      Interface
      ExtendPeriodOrderManagementInterface
  -
    name: >
      biotusOrderStatusChangeStatusManagementV1
    description: >
      Interface
      ChangeStatusManagementInterface
  -
    name: >
      hyvaOrderCancellationWebapiOrderCancellationV1
    description: ""
  -
    name: mageWorxOrderEditorGetImageManagementV1
    description: ""
  -
    name: mageplazaSmtpCheckoutManagementV1
    description: Interface for update item information
paths:
  /V1/store/storeViews:
    get:
      tags:
        - storeStoreRepositoryV1
      description: Retrieve list of all stores
      operationId: GetV1StoreStoreViews
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/store-data-store-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/store/storeGroups:
    get:
      tags:
        - storeGroupRepositoryV1
      description: Retrieve list of all groups
      operationId: GetV1StoreStoreGroups
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/store-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/store/websites:
    get:
      tags:
        - storeWebsiteRepositoryV1
      description: Retrieve list of all websites
      operationId: GetV1StoreWebsites
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/store-data-website-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/store/storeConfigs:
    get:
      tags:
        - storeStoreConfigManagerV1
      description: ""
      operationId: GetV1StoreStoreConfigs
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeCodes
          in: query
          type: array
          items:
            type: string
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/store-data-store-config-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/directory/currency:
    get:
      tags:
        - directoryCurrencyInformationAcquirerV1
      description: Get currency information for the store.
      operationId: GetV1DirectoryCurrency
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/directory-data-currency-information-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/directory/countries:
    get:
      tags:
        - directoryCountryInformationAcquirerV1
      description: >
        Get all countries and regions
        information for the store.
      operationId: GetV1DirectoryCountries
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/directory-data-country-information-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/directory/countries/{countryId}:
    get:
      tags:
        - directoryCountryInformationAcquirerV1
      description: >
        Get country and region information for
        the store.
      operationId: GetV1DirectoryCountriesCountryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: countryId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/directory-data-country-information-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsPage/{pageId}:
    get:
      tags:
        - cmsPageRepositoryV1
      description: Retrieve page.
      operationId: GetV1CmsPagePageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: pageId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-page-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - cmsPageRepositoryV1
      description: Delete page by ID.
      operationId: DeleteV1CmsPagePageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: pageId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsPage/search:
    get:
      tags:
        - cmsPageRepositoryV1
      description: >
        Retrieve pages matching the specified
        criteria.
      operationId: GetV1CmsPageSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-page-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsPage:
    post:
      tags:
        - cmsPageRepositoryV1
      description: Save page.
      operationId: PostV1CmsPage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CmsPageBody
          in: body
          schema:
            required:
              - page
            properties:
              page:
                $ref: '#/definitions/cms-data-page-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-page-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsPage/{id}:
    put:
      tags:
        - cmsPageRepositoryV1
      description: Save page.
      operationId: PutV1CmsPageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1CmsPageIdBody
          in: body
          schema:
            required:
              - page
            properties:
              page:
                $ref: '#/definitions/cms-data-page-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-page-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsBlock/{blockId}:
    get:
      tags:
        - cmsBlockRepositoryV1
      description: Retrieve block.
      operationId: GetV1CmsBlockBlockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: blockId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-block-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - cmsBlockRepositoryV1
      description: Delete block by ID.
      operationId: DeleteV1CmsBlockBlockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: blockId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsBlock/search:
    get:
      tags:
        - cmsBlockRepositoryV1
      description: >
        Retrieve blocks matching the specified
        criteria.
      operationId: GetV1CmsBlockSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-block-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsBlock:
    post:
      tags:
        - cmsBlockRepositoryV1
      description: Save block.
      operationId: PostV1CmsBlock
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CmsBlockBody
          in: body
          schema:
            required:
              - block
            properties:
              block:
                $ref: '#/definitions/cms-data-block-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-block-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/cmsBlock/{id}:
    put:
      tags:
        - cmsBlockRepositoryV1
      description: Save block.
      operationId: PutV1CmsBlockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1CmsBlockIdBody
          in: body
          schema:
            required:
              - block
            properties:
              block:
                $ref: '#/definitions/cms-data-block-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/cms-data-block-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/modules:
    get:
      tags:
        - backendModuleServiceV1
      description: Returns an array of enabled modules
      operationId: GetV1Modules
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/eav/attribute-sets/list:
    get:
      tags:
        - eavAttributeSetRepositoryV1
      description: 'Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1EavAttributesetsList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/eav/attribute-sets/{attributeSetId}:
    get:
      tags:
        - eavAttributeSetRepositoryV1
      description: >
        Retrieve attribute set information based
        on given ID
      operationId: GetV1EavAttributesetsAttributeSetId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - eavAttributeSetRepositoryV1
      description: Remove attribute set by given ID
      operationId: DeleteV1EavAttributesetsAttributeSetId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - eavAttributeSetRepositoryV1
      description: Save attribute set data
      operationId: PutV1EavAttributesetsAttributeSetId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: string
          required: true
        -
          name: PutV1EavAttributesetsAttributeSetIdBody
          in: body
          schema:
            required:
              - attributeSet
            properties:
              attributeSet:
                $ref: '#/definitions/eav-data-attribute-set-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/eav/attribute-sets:
    post:
      tags:
        - eavAttributeSetManagementV1
      description: Create attribute set from data
      operationId: PostV1EavAttributesets
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1EavAttributesetsBody
          in: body
          schema:
            required:
              - entityTypeCode
              - attributeSet
              - skeletonId
            properties:
              entityTypeCode:
                type: string
              attributeSet:
                $ref: '#/definitions/eav-data-attribute-set-interface'
              skeletonId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups/{id}:
    get:
      tags:
        - customerGroupRepositoryV1
      description: Get customer group by group ID.
      operationId: GetV1CustomerGroupsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - customerGroupRepositoryV1
      description: Save customer group.
      operationId: PutV1CustomerGroupsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1CustomerGroupsIdBody
          in: body
          schema:
            required:
              - group
            properties:
              group:
                $ref: '#/definitions/customer-data-group-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - customerGroupRepositoryV1
      description: Delete customer group by ID.
      operationId: DeleteV1CustomerGroupsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups/search:
    get:
      tags:
        - customerGroupRepositoryV1
      description: 'Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1CustomerGroupsSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-group-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups:
    post:
      tags:
        - customerGroupRepositoryV1
      description: Save customer group.
      operationId: PostV1CustomerGroups
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CustomerGroupsBody
          in: body
          schema:
            required:
              - group
            properties:
              group:
                $ref: '#/definitions/customer-data-group-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups/default/{storeId}:
    get:
      tags:
        - customerGroupManagementV1
      description: Get default customer group.
      operationId: GetV1CustomerGroupsDefaultStoreId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups/default:
    get:
      tags:
        - customerGroupManagementV1
      description: Get default customer group.
      operationId: GetV1CustomerGroupsDefault
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups/{id}/permissions:
    get:
      tags:
        - customerGroupManagementV1
      description: Check if customer group can be deleted.
      operationId: GetV1CustomerGroupsIdPermissions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customerGroups/default/{id}:
    put:
      tags:
        - customerCustomerGroupConfigV1
      description: Set system default customer group.
      operationId: PutV1CustomerGroupsDefaultId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customer/attribute/{attributeCode}:
    get:
      tags:
        - customerCustomerMetadataV1
      description: Retrieve attribute metadata.
      operationId: >
        GetV1AttributeMetadataCustomerAttributeAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customer/form/{formCode}:
    get:
      tags:
        - customerCustomerMetadataV1
      description: >
        Retrieve all attributes filtered by form
        code
      operationId: >
        GetV1AttributeMetadataCustomerFormFormCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: formCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customer:
    get:
      tags:
        - customerCustomerMetadataV1
      description: Get all attribute metadata.
      operationId: GetV1AttributeMetadataCustomer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customer/custom:
    get:
      tags:
        - customerCustomerMetadataV1
      description: >
        Get custom attributes metadata for the
        given data interface.
      operationId: GetV1AttributeMetadataCustomerCustom
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: dataInterfaceName
          in: query
          type: string
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customerAddress/attribute/{attributeCode}:
    get:
      tags:
        - customerAddressMetadataV1
      description: Retrieve attribute metadata.
      operationId: >
        GetV1AttributeMetadataCustomerAddressAttributeAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customerAddress/form/{formCode}:
    get:
      tags:
        - customerAddressMetadataV1
      description: >
        Retrieve all attributes filtered by form
        code
      operationId: >
        GetV1AttributeMetadataCustomerAddressFormFormCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: formCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customerAddress:
    get:
      tags:
        - customerAddressMetadataV1
      description: Get all attribute metadata.
      operationId: GetV1AttributeMetadataCustomerAddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/attributeMetadata/customerAddress/custom:
    get:
      tags:
        - customerAddressMetadataV1
      description: >
        Get custom attributes metadata for the
        given data interface.
      operationId: >
        GetV1AttributeMetadataCustomerAddressCustom
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: dataInterfaceName
          in: query
          type: string
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/customer-data-attribute-metadata-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}:
    get:
      tags:
        - customerCustomerRepositoryV1
      description: Get customer by Customer ID.
      operationId: GetV1CustomersCustomerId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - customerCustomerRepositoryV1
      description: Create or update a customer.
      operationId: PutV1CustomersCustomerId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: string
          required: true
        -
          name: PutV1CustomersCustomerIdBody
          in: body
          schema:
            required:
              - customer
            properties:
              customer:
                $ref: '#/definitions/customer-data-customer-interface'
              passwordHash:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - customerCustomerRepositoryV1
      description: Delete customer by Customer ID.
      operationId: DeleteV1CustomersCustomerId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/me:
    put:
      tags:
        - customerCustomerRepositoryV1
      description: Create or update a customer.
      operationId: PutV1CustomersMe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CustomersMeBody
          in: body
          schema:
            required:
              - customer
            properties:
              customer:
                $ref: '#/definitions/customer-data-customer-interface'
              passwordHash:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - customerCustomerRepositoryV1
      description: Get customer by Customer ID.
      operationId: GetV1CustomersMe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/search:
    get:
      tags:
        - customerCustomerRepositoryV1
      description: 'Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1CustomersSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers:
    post:
      tags:
        - customerAccountManagementV1
      description: >
        Create customer account. Perform
        necessary business operations like
        sending email.
      operationId: PostV1Customers
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CustomersBody
          in: body
          schema:
            required:
              - customer
            properties:
              customer:
                $ref: '#/definitions/customer-data-customer-interface'
              password:
                type: string
              redirectUrl:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/me/activate:
    put:
      tags:
        - customerAccountManagementV1
      description: >
        Activate a customer account using a key
        that was sent in a confirmation email.
      operationId: PutV1CustomersMeActivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CustomersMeActivateBody
          in: body
          schema:
            required:
              - confirmationKey
            properties:
              confirmationKey:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{email}/activate:
    put:
      tags:
        - customerAccountManagementV1
      description: >
        Activate a customer account using a key
        that was sent in a confirmation email.
      operationId: PutV1CustomersEmailActivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: email
          in: path
          type: string
          required: true
        -
          name: PutV1CustomersEmailActivateBody
          in: body
          schema:
            required:
              - confirmationKey
            properties:
              confirmationKey:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-customer-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/me/password:
    put:
      tags:
        - customerAccountManagementV1
      description: Change customer password.
      operationId: PutV1CustomersMePassword
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CustomersMePasswordBody
          in: body
          schema:
            required:
              - currentPassword
              - newPassword
            properties:
              currentPassword:
                type: string
              newPassword:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}:
    get:
      tags:
        - customerAccountManagementV1
      description: Check if password reset token is valid.
      operationId: >
        GetV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkToken
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
          description: >
            If null is given then a customer will be
            matched by the RP token.
        -
          name: resetPasswordLinkToken
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: True if the token is valid
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/password:
    put:
      tags:
        - customerAccountManagementV1
      description: >
        Send an email to the customer with a
        password reset link.
      operationId: PutV1CustomersPassword
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CustomersPasswordBody
          in: body
          schema:
            required:
              - email
              - template
            properties:
              email:
                type: string
              template:
                type: string
              websiteId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/resetPassword:
    post:
      tags:
        - customerAccountManagementV1
      description: Reset customer password.
      operationId: PostV1CustomersResetPassword
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CustomersResetPasswordBody
          in: body
          schema:
            required:
              - email
              - resetToken
              - newPassword
            properties:
              email:
                type: string
                description: >
                  If empty value given then the customer
                  will be matched by the RP token.
              resetToken:
                type: string
              newPassword:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}/confirm:
    get:
      tags:
        - customerAccountManagementV1
      description: Gets the account confirmation status.
      operationId: GetV1CustomersCustomerIdConfirm
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/confirm:
    post:
      tags:
        - customerAccountManagementV1
      description: Resend confirmation email.
      operationId: PostV1CustomersConfirm
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CustomersConfirmBody
          in: body
          schema:
            required:
              - email
              - websiteId
            properties:
              email:
                type: string
              websiteId:
                type: integer
              redirectUrl:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/validate:
    put:
      tags:
        - customerAccountManagementV1
      description: Validate customer data.
      operationId: PutV1CustomersValidate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CustomersValidateBody
          in: body
          schema:
            required:
              - customer
            properties:
              customer:
                $ref: '#/definitions/customer-data-customer-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-validation-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}/permissions/readonly:
    get:
      tags:
        - customerAccountManagementV1
      description: Check if customer can be deleted.
      operationId: >
        GetV1CustomersCustomerIdPermissionsReadonly
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/isEmailAvailable:
    post:
      tags:
        - customerAccountManagementV1
      description: >
        Check if given email is associated with
        a customer account in given website.
      operationId: PostV1CustomersIsEmailAvailable
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CustomersIsEmailAvailableBody
          in: body
          schema:
            required:
              - customerEmail
            properties:
              customerEmail:
                type: string
              websiteId:
                type: integer
                description: >
                  If not set, will use the current
                  websiteId
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/me/billingAddress:
    get:
      tags:
        - customerAccountManagementV1
      description: >
        Retrieve default billing address for the
        given customerId.
      operationId: GetV1CustomersMeBillingAddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}/billingAddress:
    get:
      tags:
        - customerAccountManagementV1
      description: >
        Retrieve default billing address for the
        given customerId.
      operationId: GetV1CustomersCustomerIdBillingAddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/me/shippingAddress:
    get:
      tags:
        - customerAccountManagementV1
      description: >
        Retrieve default shipping address for
        the given customerId.
      operationId: GetV1CustomersMeShippingAddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}/shippingAddress:
    get:
      tags:
        - customerAccountManagementV1
      description: >
        Retrieve default shipping address for
        the given customerId.
      operationId: GetV1CustomersCustomerIdShippingAddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/addresses/{addressId}:
    get:
      tags:
        - customerAddressRepositoryV1
      description: Retrieve customer address.
      operationId: GetV1CustomersAddressesAddressId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: addressId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/customer-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/addresses/{addressId}:
    delete:
      tags:
        - customerAddressRepositoryV1
      description: Delete customer address by ID.
      operationId: DeleteV1AddressesAddressId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: addressId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products:
    post:
      tags:
        - catalogProductRepositoryV1
      description: Create product
      operationId: PostV1Products
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsBody
          in: body
          schema:
            required:
              - product
            properties:
              product:
                $ref: '#/definitions/catalog-data-product-interface'
              saveOptions:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - catalogProductRepositoryV1
      description: Get product list
      operationId: GetV1Products
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}:
    put:
      tags:
        - catalogProductRepositoryV1
      description: Create product
      operationId: PutV1ProductsSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsSkuBody
          in: body
          schema:
            required:
              - product
            properties:
              product:
                $ref: '#/definitions/catalog-data-product-interface'
              saveOptions:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - catalogProductRepositoryV1
      description: ""
      operationId: DeleteV1ProductsSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: Will returned True if deleted
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - catalogProductRepositoryV1
      description: Get info about product by product SKU
      operationId: GetV1ProductsSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: editMode
          in: query
          type: boolean
          required: false
        -
          name: storeId
          in: query
          type: integer
          required: false
        -
          name: forceReload
          in: query
          type: boolean
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes/types:
    get:
      tags:
        - catalogProductAttributeTypesListV1
      description: Retrieve list of product attribute types
      operationId: GetV1ProductsAttributesTypes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-attribute-type-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes/{attributeCode}:
    get:
      tags:
        - catalogProductAttributeRepositoryV1
      description: Retrieve specific attribute
      operationId: GetV1ProductsAttributesAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogProductAttributeRepositoryV1
      description: Save attribute data
      operationId: PutV1ProductsAttributesAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsAttributesAttributeCodeBody
          in: body
          schema:
            required:
              - attribute
            properties:
              attribute:
                $ref: '#/definitions/catalog-data-product-attribute-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - catalogProductAttributeRepositoryV1
      description: Delete Attribute by id
      operationId: DeleteV1ProductsAttributesAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes:
    get:
      tags:
        - catalogProductAttributeRepositoryV1
      description: Retrieve all attributes for entity type
      operationId: GetV1ProductsAttributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-attribute-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - catalogProductAttributeRepositoryV1
      description: Save attribute data
      operationId: PostV1ProductsAttributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsAttributesBody
          in: body
          schema:
            required:
              - attribute
            properties:
              attribute:
                $ref: '#/definitions/catalog-data-product-attribute-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes/{attributeCode}/is-filterable:
    get:
      tags:
        - >
          catalogProductAttributeIsFilterableManagementV1
      description: "Retrieve 'is_filterable' property for specific attribute as integer"
      operationId: >
        GetV1ProductsAttributesAttributeCodeIsfilterable
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes/{attributeCode}/is-filterable/{isFilterable}:
    put:
      tags:
        - >
          catalogProductAttributeIsFilterableManagementV1
      description: "Set 'is_filterable' property for specific attribute as integer"
      operationId: >
        PutV1ProductsAttributesAttributeCodeIsfilterableIsFilterable
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
        -
          name: isFilterable
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/attributes/{attributeCode}:
    get:
      tags:
        - catalogCategoryAttributeRepositoryV1
      description: Retrieve specific attribute
      operationId: GetV1CategoriesAttributesAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/attributes:
    get:
      tags:
        - catalogCategoryAttributeRepositoryV1
      description: Retrieve all attributes for entity type
      operationId: GetV1CategoriesAttributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-attribute-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/attributes/{attributeCode}/options:
    get:
      tags:
        - >
          catalogCategoryAttributeOptionManagementV1
      description: Retrieve list of attribute options
      operationId: >
        GetV1CategoriesAttributesAttributeCodeOptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/eav-data-attribute-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/types:
    get:
      tags:
        - catalogProductTypeListV1
      description: Retrieve available product types
      operationId: GetV1ProductsTypes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-type-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/sets/list:
    get:
      tags:
        - catalogAttributeSetRepositoryV1
      description: Retrieve list of Attribute Sets
      operationId: GetV1ProductsAttributesetsSetsList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/{attributeSetId}:
    get:
      tags:
        - catalogAttributeSetRepositoryV1
      description: >
        Retrieve attribute set information based
        on given ID
      operationId: GetV1ProductsAttributesetsAttributeSetId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - catalogAttributeSetRepositoryV1
      description: Remove attribute set by given ID
      operationId: >
        DeleteV1ProductsAttributesetsAttributeSetId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogAttributeSetRepositoryV1
      description: Save attribute set data
      operationId: PutV1ProductsAttributesetsAttributeSetId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: string
          required: true
        -
          name: >
            PutV1ProductsAttributesetsAttributeSetIdBody
          in: body
          schema:
            required:
              - attributeSet
            properties:
              attributeSet:
                $ref: '#/definitions/eav-data-attribute-set-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets:
    post:
      tags:
        - catalogAttributeSetManagementV1
      description: Create attribute set from data
      operationId: PostV1ProductsAttributesets
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsAttributesetsBody
          in: body
          schema:
            required:
              - attributeSet
              - skeletonId
            properties:
              attributeSet:
                $ref: '#/definitions/eav-data-attribute-set-interface'
              skeletonId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-set-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/{attributeSetId}/attributes:
    get:
      tags:
        - catalogProductAttributeManagementV1
      description: >
        Retrieve related attributes based on
        given attribute set ID
      operationId: >
        GetV1ProductsAttributesetsAttributeSetIdAttributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/attributes:
    post:
      tags:
        - catalogProductAttributeManagementV1
      description: Assign attribute to attribute set
      operationId: PostV1ProductsAttributesetsAttributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1ProductsAttributesetsAttributesBody
          in: body
          schema:
            required:
              - attributeSetId
              - attributeGroupId
              - attributeCode
              - sortOrder
            properties:
              attributeSetId:
                type: integer
              attributeGroupId:
                type: integer
              attributeCode:
                type: string
              sortOrder:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}:
    delete:
      tags:
        - catalogProductAttributeManagementV1
      description: Remove attribute from attribute set
      operationId: >
        DeleteV1ProductsAttributesetsAttributeSetIdAttributesAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: string
          required: true
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/groups/list:
    get:
      tags:
        - catalogProductAttributeGroupRepositoryV1
      description: Retrieve list of attribute groups
      operationId: GetV1ProductsAttributesetsGroupsList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-group-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/groups:
    post:
      tags:
        - catalogProductAttributeGroupRepositoryV1
      description: Save attribute group
      operationId: PostV1ProductsAttributesetsGroups
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsAttributesetsGroupsBody
          in: body
          schema:
            required:
              - group
            properties:
              group:
                $ref: '#/definitions/eav-data-attribute-group-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/{attributeSetId}/groups:
    put:
      tags:
        - catalogProductAttributeGroupRepositoryV1
      description: Save attribute group
      operationId: >
        PutV1ProductsAttributesetsAttributeSetIdGroups
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetId
          in: path
          type: string
          required: true
        -
          name: >
            PutV1ProductsAttributesetsAttributeSetIdGroupsBody
          in: body
          schema:
            required:
              - group
            properties:
              group:
                $ref: '#/definitions/eav-data-attribute-group-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/eav-data-attribute-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attribute-sets/groups/{groupId}:
    delete:
      tags:
        - catalogProductAttributeGroupRepositoryV1
      description: Remove attribute group by id
      operationId: >
        DeleteV1ProductsAttributesetsGroupsGroupId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: groupId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes/{attributeCode}/options:
    get:
      tags:
        - >
          catalogProductAttributeOptionManagementV1
      description: Retrieve list of attribute options
      operationId: >
        GetV1ProductsAttributesAttributeCodeOptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/eav-data-attribute-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - >
          catalogProductAttributeOptionManagementV1
      description: Add option to attribute
      operationId: >
        PostV1ProductsAttributesAttributeCodeOptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
        -
          name: >
            PostV1ProductsAttributesAttributeCodeOptionsBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/eav-data-attribute-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/attributes/{attributeCode}/options/{optionId}:
    delete:
      tags:
        - >
          catalogProductAttributeOptionManagementV1
      description: Delete option from attribute
      operationId: >
        DeleteV1ProductsAttributesAttributeCodeOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogProductAttributeOptionUpdateV1
      description: Update attribute option
      operationId: >
        PutV1ProductsAttributesAttributeCodeOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
        -
          name: >
            PutV1ProductsAttributesAttributeCodeOptionsOptionIdBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/eav-data-attribute-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/media/types/{attributeSetName}:
    get:
      tags:
        - catalogProductMediaAttributeManagementV1
      description: >
        Retrieve the list of media attributes
        (fronted input type is media_image)
        assigned to the given attribute set.
      operationId: GetV1ProductsMediaTypesAttributeSetName
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeSetName
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: list of media attributes
            items:
              $ref: '#/definitions/catalog-data-product-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/media/{entryId}:
    get:
      tags:
        - >
          catalogProductAttributeMediaGalleryManagementV1
      description: Return information about gallery entry
      operationId: GetV1ProductsSkuMediaEntryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: entryId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-attribute-media-gallery-entry-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - >
          catalogProductAttributeMediaGalleryManagementV1
      description: Update gallery entry
      operationId: PutV1ProductsSkuMediaEntryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: entryId
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsSkuMediaEntryIdBody
          in: body
          schema:
            required:
              - entry
            properties:
              entry:
                $ref: '#/definitions/catalog-data-product-attribute-media-gallery-entry-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - >
          catalogProductAttributeMediaGalleryManagementV1
      description: Remove gallery entry
      operationId: DeleteV1ProductsSkuMediaEntryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: entryId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/media:
    post:
      tags:
        - >
          catalogProductAttributeMediaGalleryManagementV1
      description: Create new gallery entry
      operationId: PostV1ProductsSkuMedia
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PostV1ProductsSkuMediaBody
          in: body
          schema:
            required:
              - entry
            properties:
              entry:
                $ref: '#/definitions/catalog-data-product-attribute-media-gallery-entry-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: gallery entry ID
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - >
          catalogProductAttributeMediaGalleryManagementV1
      description: >
        Retrieve the list of gallery entries
        associated with given product
      operationId: GetV1ProductsSkuMedia
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-attribute-media-gallery-entry-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/group-prices/{customerGroupId}/tiers:
    get:
      tags:
        - catalogProductTierPriceManagementV1
      description: Get tier price of product
      operationId: >
        GetV1ProductsSkuGrouppricesCustomerGroupIdTiers
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: customerGroupId
          in: path
          type: string
          required: true
          description: "'all' can be used to specify 'ALL GROUPS'"
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-tier-price-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}:
    post:
      tags:
        - catalogProductTierPriceManagementV1
      description: Create tier price for product
      operationId: >
        PostV1ProductsSkuGrouppricesCustomerGroupIdTiersQtyPricePrice
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: customerGroupId
          in: path
          type: string
          required: true
          description: "'all' can be used to specify 'ALL GROUPS'"
        -
          name: price
          in: path
          type: number
          required: true
        -
          name: qty
          in: path
          type: number
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}:
    delete:
      tags:
        - catalogProductTierPriceManagementV1
      description: Remove tier price from product
      operationId: >
        DeleteV1ProductsSkuGrouppricesCustomerGroupIdTiersQty
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: customerGroupId
          in: path
          type: string
          required: true
          description: "'all' can be used to specify 'ALL GROUPS'"
        -
          name: qty
          in: path
          type: number
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/tier-prices-information:
    post:
      tags:
        - catalogTierPriceStorageV1
      description: >
        Return product prices. In case of at
        least one of skus is not found exception
        will be thrown.
      operationId: PostV1ProductsTierpricesinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsTierpricesinformationBody
          in: body
          schema:
            required:
              - skus
            properties:
              skus:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-tier-price-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/tier-prices:
    post:
      tags:
        - catalogTierPriceStorageV1
      description: 'Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.'
      operationId: PostV1ProductsTierprices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsTierpricesBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-tier-price-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogTierPriceStorageV1
      description: 'Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.'
      operationId: PutV1ProductsTierprices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1ProductsTierpricesBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-tier-price-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/tier-prices-delete:
    post:
      tags:
        - catalogTierPriceStorageV1
      description: 'Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.'
      operationId: PostV1ProductsTierpricesdelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsTierpricesdeleteBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-tier-price-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/base-prices-information:
    post:
      tags:
        - catalogBasePriceStorageV1
      description: >
        Return product prices. In case of at
        least one of skus is not found exception
        will be thrown.
      operationId: PostV1ProductsBasepricesinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsBasepricesinformationBody
          in: body
          schema:
            required:
              - skus
            properties:
              skus:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-base-price-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/base-prices:
    post:
      tags:
        - catalogBasePriceStorageV1
      description: 'Add or update product prices. Input item should correspond \Magento\Catalog\Api\Data\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.'
      operationId: PostV1ProductsBaseprices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsBasepricesBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-base-price-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/cost-information:
    post:
      tags:
        - catalogCostStorageV1
      description: >
        Return product prices. In case of at
        least one of skus is not found exception
        will be thrown.
      operationId: PostV1ProductsCostinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsCostinformationBody
          in: body
          schema:
            required:
              - skus
            properties:
              skus:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-cost-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/cost:
    post:
      tags:
        - catalogCostStorageV1
      description: 'Add or update product cost. Input item should correspond to \Magento\Catalog\Api\Data\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.'
      operationId: PostV1ProductsCost
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsCostBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-cost-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/cost-delete:
    post:
      tags:
        - catalogCostStorageV1
      description: >
        Delete product cost. In case of at least
        one of skus is not found exception will
        be thrown. If error occurred during the
        delete exception will be thrown.
      operationId: PostV1ProductsCostdelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsCostdeleteBody
          in: body
          schema:
            required:
              - skus
            properties:
              skus:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: Will return True if deleted.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/special-price-information:
    post:
      tags:
        - catalogSpecialPriceStorageV1
      description: "Return product's special price. In case of at least one of skus is not found exception will be thrown."
      operationId: PostV1ProductsSpecialpriceinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1ProductsSpecialpriceinformationBody
          in: body
          schema:
            required:
              - skus
            properties:
              skus:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-special-price-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/special-price:
    post:
      tags:
        - catalogSpecialPriceStorageV1
      description: "Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
      operationId: PostV1ProductsSpecialprice
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsSpecialpriceBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-special-price-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/special-price-delete:
    post:
      tags:
        - catalogSpecialPriceStorageV1
      description: "Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and  with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown."
      operationId: PostV1ProductsSpecialpricedelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsSpecialpricedeleteBody
          in: body
          schema:
            required:
              - prices
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-special-price-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-price-update-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/{categoryId}:
    delete:
      tags:
        - catalogCategoryRepositoryV1
      description: Delete category by identifier
      operationId: DeleteV1CategoriesCategoryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: Will returned True if deleted
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - catalogCategoryRepositoryV1
      description: Get info about category by category id
      operationId: GetV1CategoriesCategoryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: integer
          required: true
        -
          name: storeId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories:
    post:
      tags:
        - catalogCategoryRepositoryV1
      description: Create category service
      operationId: PostV1Categories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CategoriesBody
          in: body
          schema:
            required:
              - category
            properties:
              category:
                $ref: '#/definitions/catalog-data-category-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - catalogCategoryManagementV1
      description: Retrieve list of categories
      operationId: GetV1Categories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: rootCategoryId
          in: query
          type: integer
          required: false
        -
          name: depth
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-tree-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/{id}:
    put:
      tags:
        - catalogCategoryRepositoryV1
      description: Create category service
      operationId: PutV1CategoriesId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1CategoriesIdBody
          in: body
          schema:
            required:
              - category
            properties:
              category:
                $ref: '#/definitions/catalog-data-category-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/{categoryId}/move:
    put:
      tags:
        - catalogCategoryManagementV1
      description: Move category
      operationId: PutV1CategoriesCategoryIdMove
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: integer
          required: true
        -
          name: PutV1CategoriesCategoryIdMoveBody
          in: body
          schema:
            required:
              - parentId
            properties:
              parentId:
                type: integer
              afterId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/list:
    get:
      tags:
        - catalogCategoryListV1
      description: Get category list
      operationId: GetV1CategoriesList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-category-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/options/types:
    get:
      tags:
        - catalogProductCustomOptionTypeListV1
      description: Get custom option types
      operationId: GetV1ProductsOptionsTypes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-custom-option-type-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/options:
    get:
      tags:
        - catalogProductCustomOptionRepositoryV1
      description: >
        Get the list of custom options for a
        specific product
      operationId: GetV1ProductsSkuOptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-custom-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/options/{optionId}:
    get:
      tags:
        - catalogProductCustomOptionRepositoryV1
      description: Get custom option for a specific product
      operationId: GetV1ProductsSkuOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-custom-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - catalogProductCustomOptionRepositoryV1
      description: ""
      operationId: DeleteV1ProductsSkuOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/options:
    post:
      tags:
        - catalogProductCustomOptionRepositoryV1
      description: Save Custom Option
      operationId: PostV1ProductsOptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ProductsOptionsBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/catalog-data-product-custom-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-custom-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/options/{optionId}:
    put:
      tags:
        - catalogProductCustomOptionRepositoryV1
      description: Save Custom Option
      operationId: PutV1ProductsOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: optionId
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsOptionsOptionIdBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/catalog-data-product-custom-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-custom-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/links/types:
    get:
      tags:
        - catalogProductLinkTypeListV1
      description: >
        Retrieve information about available
        product link types
      operationId: GetV1ProductsLinksTypes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-link-type-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/links/{type}/attributes:
    get:
      tags:
        - catalogProductLinkTypeListV1
      description: >
        Provide a list of the product link type
        attributes
      operationId: GetV1ProductsLinksTypeAttributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: type
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-link-attribute-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/links/{type}:
    get:
      tags:
        - catalogProductLinkManagementV1
      description: >
        Provide the list of links for a specific
        product
      operationId: GetV1ProductsSkuLinksType
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: type
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-link-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/links:
    post:
      tags:
        - catalogProductLinkManagementV1
      description: Assign a product link to another product
      operationId: PostV1ProductsSkuLinks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PostV1ProductsSkuLinksBody
          in: body
          schema:
            required:
              - items
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/catalog-data-product-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogProductLinkRepositoryV1
      description: Save product link
      operationId: PutV1ProductsSkuLinks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsSkuLinksBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/catalog-data-product-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/links/{type}/{linkedProductSku}:
    delete:
      tags:
        - catalogProductLinkRepositoryV1
      description: ""
      operationId: >
        DeleteV1ProductsSkuLinksTypeLinkedProductSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: type
          in: path
          type: string
          required: true
        -
          name: linkedProductSku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/{categoryId}/products:
    get:
      tags:
        - catalogCategoryLinkManagementV1
      description: Get products assigned to category
      operationId: GetV1CategoriesCategoryIdProducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-category-product-link-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - catalogCategoryLinkRepositoryV1
      description: >
        Assign a product to the required
        category
      operationId: PostV1CategoriesCategoryIdProducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: string
          required: true
        -
          name: PostV1CategoriesCategoryIdProductsBody
          in: body
          schema:
            required:
              - productLink
            properties:
              productLink:
                $ref: '#/definitions/catalog-data-category-product-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: will returned True if assigned
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogCategoryLinkRepositoryV1
      description: >
        Assign a product to the required
        category
      operationId: PutV1CategoriesCategoryIdProducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: string
          required: true
        -
          name: PutV1CategoriesCategoryIdProductsBody
          in: body
          schema:
            required:
              - productLink
            properties:
              productLink:
                $ref: '#/definitions/catalog-data-category-product-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: will returned True if assigned
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/categories/{categoryId}/products/{sku}:
    delete:
      tags:
        - catalogCategoryLinkRepositoryV1
      description: >
        Remove the product assignment from the
        category by category id and sku
      operationId: DeleteV1CategoriesCategoryIdProductsSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: integer
          required: true
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: >
              will returned True if products
              successfully deleted
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/websites:
    post:
      tags:
        - catalogProductWebsiteLinkRepositoryV1
      description: Assign a product to the website
      operationId: PostV1ProductsSkuWebsites
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PostV1ProductsSkuWebsitesBody
          in: body
          schema:
            required:
              - productWebsiteLink
            properties:
              productWebsiteLink:
                $ref: '#/definitions/catalog-data-product-website-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: >
              will returned True if website
              successfully assigned to product
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - catalogProductWebsiteLinkRepositoryV1
      description: Assign a product to the website
      operationId: PutV1ProductsSkuWebsites
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsSkuWebsitesBody
          in: body
          schema:
            required:
              - productWebsiteLink
            properties:
              productWebsiteLink:
                $ref: '#/definitions/catalog-data-product-website-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: >
              will returned True if website
              successfully assigned to product
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/websites/{websiteId}:
    delete:
      tags:
        - catalogProductWebsiteLinkRepositoryV1
      description: >
        Remove the website assignment from the
        product by product sku
      operationId: DeleteV1ProductsSkuWebsitesWebsiteId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: websiteId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: >
              will returned True if website
              successfully unassigned from product
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products-render-info:
    get:
      tags:
        - catalogProductRenderListV1
      description: >
        Collect and retrieve the list of product
        render info. This info contains raw
        prices and formatted prices, product
        name, stock status, store_id, etc.
      operationId: GetV1Productsrenderinfo
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
        -
          name: storeId
          in: query
          type: integer
          required: true
        -
          name: currencyCode
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-render-search-results-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/integration/admin/token:
    post:
      tags:
        - twoFactorAuthAdminTokenServiceV1
      description: >
        Create access token for admin given the
        admin credentials.
      operationId: PostV1IntegrationAdminToken
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1IntegrationAdminTokenBody
          in: body
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: Token created
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/integration/customer/token:
    post:
      tags:
        - integrationCustomerTokenServiceV1
      description: >
        Create access token for admin given the
        customer credentials.
      operationId: PostV1IntegrationCustomerToken
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1IntegrationCustomerTokenBody
          in: body
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: Token created
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/integration/customer/revoke-customer-token:
    post:
      tags:
        - integrationCustomerTokenServiceV1
      description: Revoke token by customer id.
      operationId: >
        PostV1IntegrationCustomerRevokecustomertoken
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/stockItems/{productSku}:
    get:
      tags:
        - catalogInventoryStockRegistryV1
      description: ""
      operationId: GetV1StockItemsProductSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productSku
          in: path
          type: string
          required: true
        -
          name: scopeId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-inventory-data-stock-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{productSku}/stockItems/{itemId}:
    put:
      tags:
        - catalogInventoryStockRegistryV1
      description: ""
      operationId: PutV1ProductsProductSkuStockItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productSku
          in: path
          type: string
          required: true
        -
          name: itemId
          in: path
          type: string
          required: true
        -
          name: >
            PutV1ProductsProductSkuStockItemsItemIdBody
          in: body
          schema:
            required:
              - stockItem
            properties:
              stockItem:
                $ref: '#/definitions/catalog-inventory-data-stock-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/stockItems/lowStock/:
    get:
      tags:
        - catalogInventoryStockRegistryV1
      description: "Retrieves a list of SKU's with low inventory qty"
      operationId: GetV1StockItemsLowStock
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: scopeId
          in: query
          type: integer
          required: true
        -
          name: qty
          in: query
          type: number
          required: true
        -
          name: currentPage
          in: query
          type: integer
          required: false
        -
          name: pageSize
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-inventory-data-stock-item-collection-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/stockStatuses/{productSku}:
    get:
      tags:
        - catalogInventoryStockRegistryV1
      description: ""
      operationId: GetV1StockStatusesProductSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productSku
          in: path
          type: string
          required: true
        -
          name: scopeId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-inventory-data-stock-status-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/search:
    get:
      tags:
        - searchV1
      description: >
        Make Full Text Search and return found
        Documents
      operationId: GetV1Search
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[requestName]'
          in: query
          type: string
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/framework-search-search-result-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}:
    get:
      tags:
        - quoteCartRepositoryV1
      description: >
        Enables an administrative user to return
        information for a specified cart.
      operationId: GetV1CartsCartId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - quoteCartManagementV1
      description: >
        Assigns a specified customer to a
        specified shopping cart.
      operationId: PutV1CartsCartId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: PutV1CartsCartIdBody
          in: body
          schema:
            required:
              - customerId
              - storeId
            properties:
              customerId:
                type: integer
                description: The customer ID.
              storeId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/search:
    get:
      tags:
        - quoteCartRepositoryV1
      description: 'Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1CartsSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine:
    put:
      tags:
        - quoteCartRepositoryV1
      description: Save quote
      operationId: PutV1CartsMine
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CartsMineBody
          in: body
          schema:
            required:
              - quote
            properties:
              quote:
                $ref: '#/definitions/quote-data-cart-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - quoteCartManagementV1
      description: >
        Creates an empty cart and quote for a
        specified customer if customer does not
        have a cart yet.
      operationId: PostV1CartsMine
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: >
              new cart ID if customer did not have a
              cart or ID of the existing cart
              otherwise.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - quoteCartManagementV1
      description: >
        Returns information for the cart for a
        specified customer.
      operationId: GetV1CartsMine
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/:
    post:
      tags:
        - quoteCartManagementV1
      description: >
        Creates an empty cart and quote for a
        guest.
      operationId: PostV1Carts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Cart ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/{customerId}/carts:
    post:
      tags:
        - quoteCartManagementV1
      description: >
        Creates an empty cart and quote for a
        specified customer if customer does not
        have a cart yet.
      operationId: PostV1CustomersCustomerIdCarts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
          description: The customer ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: >
              new cart ID if customer did not have a
              cart or ID of the existing cart
              otherwise.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/order:
    put:
      tags:
        - quoteCartManagementV1
      description: Places an order for a specified cart.
      operationId: PutV1CartsMineOrder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CartsMineOrderBody
          in: body
          schema:
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/order:
    put:
      tags:
        - quoteCartManagementV1
      description: Places an order for a specified cart.
      operationId: PutV1CartsCartIdOrder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: PutV1CartsCartIdOrderBody
          in: body
          schema:
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}:
    get:
      tags:
        - quoteGuestCartRepositoryV1
      description: >
        Enable a guest user to return
        information for a specified cart.
      operationId: GetV1GuestcartsCartId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - quoteGuestCartManagementV1
      description: >
        Assign a specified customer to a
        specified shopping cart.
      operationId: PutV1GuestcartsCartId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: PutV1GuestcartsCartIdBody
          in: body
          schema:
            required:
              - storeId
            properties:
              storeId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts:
    post:
      tags:
        - quoteGuestCartManagementV1
      description: >
        Enable an customer or guest user to
        create an empty cart and quote for an
        anonymous customer.
      operationId: PostV1Guestcarts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: Cart ID.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/order:
    put:
      tags:
        - quoteGuestCartManagementV1
      description: Place an order for a specified cart.
      operationId: PutV1GuestcartsCartIdOrder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: PutV1GuestcartsCartIdOrderBody
          in: body
          schema:
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/shipping-methods:
    get:
      tags:
        - quoteShippingMethodManagementV1
      description: >
        Lists applicable shipping methods for a
        specified quote.
      operationId: GetV1CartsCartIdShippingmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The shopping cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods.
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/estimate-shipping-methods-by-address-id:
    post:
      tags:
        - quoteShippingMethodManagementV1
      description: Estimate shipping
      operationId: >
        PostV1CartsCartIdEstimateshippingmethodsbyaddressid
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The shopping cart ID.
        -
          name: >
            PostV1CartsCartIdEstimateshippingmethodsbyaddressidBody
          in: body
          schema:
            required:
              - addressId
            properties:
              addressId:
                type: integer
                description: The estimate address id
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods.
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/shipping-methods:
    get:
      tags:
        - quoteShippingMethodManagementV1
      description: >
        Lists applicable shipping methods for a
        specified quote.
      operationId: GetV1CartsMineShippingmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods.
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/estimate-shipping-methods-by-address-id:
    post:
      tags:
        - quoteShippingMethodManagementV1
      description: Estimate shipping
      operationId: >
        PostV1CartsMineEstimateshippingmethodsbyaddressid
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1CartsMineEstimateshippingmethodsbyaddressidBody
          in: body
          schema:
            required:
              - addressId
            properties:
              addressId:
                type: integer
                description: The estimate address id
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods.
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/estimate-shipping-methods:
    post:
      tags:
        - quoteShipmentEstimationV1
      description: >
        Estimate shipping by address and return
        list of available shipping methods
      operationId: PostV1CartsCartIdEstimateshippingmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1CartsCartIdEstimateshippingmethodsBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/estimate-shipping-methods:
    post:
      tags:
        - quoteShipmentEstimationV1
      description: >
        Estimate shipping by address and return
        list of available shipping methods
      operationId: PostV1CartsMineEstimateshippingmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1CartsMineEstimateshippingmethodsBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/shipping-methods:
    get:
      tags:
        - quoteGuestShippingMethodManagementV1
      description: >
        List applicable shipping methods for a
        specified quote.
      operationId: GetV1GuestcartsCartIdShippingmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The shopping cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods.
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/estimate-shipping-methods:
    post:
      tags:
        - quoteGuestShipmentEstimationV1
      description: >
        Estimate shipping by address and return
        list of available shipping methods
      operationId: >
        PostV1GuestcartsCartIdEstimateshippingmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1GuestcartsCartIdEstimateshippingmethodsBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: An array of shipping methods
            items:
              $ref: '#/definitions/quote-data-shipping-method-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/items:
    get:
      tags:
        - quoteCartItemRepositoryV1
      description: >
        Lists items that are assigned to a
        specified cart.
      operationId: GetV1CartsCartIdItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: Array of items.
            items:
              $ref: '#/definitions/quote-data-cart-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{quoteId}/items:
    post:
      tags:
        - quoteCartItemRepositoryV1
      description: Add/update the specified cart item.
      operationId: PostV1CartsQuoteIdItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: quoteId
          in: path
          type: string
          required: true
        -
          name: PostV1CartsQuoteIdItemsBody
          in: body
          schema:
            required:
              - cartItem
            properties:
              cartItem:
                $ref: '#/definitions/quote-data-cart-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/items/{itemId}:
    put:
      tags:
        - quoteCartItemRepositoryV1
      description: Add/update the specified cart item.
      operationId: PutV1CartsCartIdItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: itemId
          in: path
          type: string
          required: true
        -
          name: PutV1CartsCartIdItemsItemIdBody
          in: body
          schema:
            required:
              - cartItem
            properties:
              cartItem:
                $ref: '#/definitions/quote-data-cart-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - quoteCartItemRepositoryV1
      description: >
        Removes the specified item from the
        specified cart.
      operationId: DeleteV1CartsCartIdItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID of the item to be removed.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/items:
    get:
      tags:
        - quoteCartItemRepositoryV1
      description: >
        Lists items that are assigned to a
        specified cart.
      operationId: GetV1CartsMineItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: Array of items.
            items:
              $ref: '#/definitions/quote-data-cart-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - quoteCartItemRepositoryV1
      description: Add/update the specified cart item.
      operationId: PostV1CartsMineItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineItemsBody
          in: body
          schema:
            required:
              - cartItem
            properties:
              cartItem:
                $ref: '#/definitions/quote-data-cart-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/items/{itemId}:
    put:
      tags:
        - quoteCartItemRepositoryV1
      description: Add/update the specified cart item.
      operationId: PutV1CartsMineItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: itemId
          in: path
          type: string
          required: true
        -
          name: PutV1CartsMineItemsItemIdBody
          in: body
          schema:
            required:
              - cartItem
            properties:
              cartItem:
                $ref: '#/definitions/quote-data-cart-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - quoteCartItemRepositoryV1
      description: >
        Removes the specified item from the
        specified cart.
      operationId: DeleteV1CartsMineItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID of the item to be removed.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/items:
    get:
      tags:
        - quoteGuestCartItemRepositoryV1
      description: >
        List items that are assigned to a
        specified cart.
      operationId: GetV1GuestcartsCartIdItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: Array of items.
            items:
              $ref: '#/definitions/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - quoteGuestCartItemRepositoryV1
      description: Add/update the specified cart item.
      operationId: PostV1GuestcartsCartIdItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: PostV1GuestcartsCartIdItemsBody
          in: body
          schema:
            required:
              - cartItem
            properties:
              cartItem:
                $ref: '#/definitions/quote-data-cart-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/items/{itemId}:
    put:
      tags:
        - quoteGuestCartItemRepositoryV1
      description: Add/update the specified cart item.
      operationId: PutV1GuestcartsCartIdItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: itemId
          in: path
          type: string
          required: true
        -
          name: PutV1GuestcartsCartIdItemsItemIdBody
          in: body
          schema:
            required:
              - cartItem
            properties:
              cartItem:
                $ref: '#/definitions/quote-data-cart-item-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - quoteGuestCartItemRepositoryV1
      description: >
        Remove the specified item from the
        specified cart.
      operationId: DeleteV1GuestcartsCartIdItemsItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID of the item to be removed.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/selected-payment-method:
    get:
      tags:
        - quotePaymentMethodManagementV1
      description: >
        Returns the payment method for a
        specified shopping cart.
      operationId: GetV1CartsCartIdSelectedpaymentmethod
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-payment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - quotePaymentMethodManagementV1
      description: >
        Adds a specified payment method to a
        specified shopping cart.
      operationId: PutV1CartsCartIdSelectedpaymentmethod
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: >
            PutV1CartsCartIdSelectedpaymentmethodBody
          in: body
          schema:
            required:
              - method
            properties:
              method:
                $ref: '#/definitions/quote-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: redirect url or error message.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/payment-methods:
    get:
      tags:
        - quotePaymentMethodManagementV1
      description: 'Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1CartsCartIdPaymentmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: Array of payment methods.
            items:
              $ref: '#/definitions/quote-data-payment-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/selected-payment-method:
    get:
      tags:
        - quotePaymentMethodManagementV1
      description: >
        Returns the payment method for a
        specified shopping cart.
      operationId: GetV1CartsMineSelectedpaymentmethod
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-payment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - quotePaymentMethodManagementV1
      description: >
        Adds a specified payment method to a
        specified shopping cart.
      operationId: PutV1CartsMineSelectedpaymentmethod
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CartsMineSelectedpaymentmethodBody
          in: body
          schema:
            required:
              - method
            properties:
              method:
                $ref: '#/definitions/quote-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: redirect url or error message.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/payment-methods:
    get:
      tags:
        - quotePaymentMethodManagementV1
      description: 'Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1CartsMinePaymentmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: Array of payment methods.
            items:
              $ref: '#/definitions/quote-data-payment-method-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/selected-payment-method:
    get:
      tags:
        - quoteGuestPaymentMethodManagementV1
      description: >
        Return the payment method for a
        specified shopping cart.
      operationId: >
        GetV1GuestcartsCartIdSelectedpaymentmethod
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-payment-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - quoteGuestPaymentMethodManagementV1
      description: >
        Add a specified payment method to a
        specified shopping cart.
      operationId: >
        PutV1GuestcartsCartIdSelectedpaymentmethod
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: >
            PutV1GuestcartsCartIdSelectedpaymentmethodBody
          in: body
          schema:
            required:
              - method
            properties:
              method:
                $ref: '#/definitions/quote-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Payment method ID.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/payment-methods:
    get:
      tags:
        - quoteGuestPaymentMethodManagementV1
      description: 'List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1GuestcartsCartIdPaymentmethods
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            description: Array of payment methods.
            items:
              $ref: '#/definitions/quote-data-payment-method-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/billing-address:
    get:
      tags:
        - quoteBillingAddressManagementV1
      description: >
        Returns the billing address for a
        specified quote.
      operationId: GetV1CartsCartIdBillingaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - quoteBillingAddressManagementV1
      description: >
        Assigns a specified billing address to a
        specified cart.
      operationId: PostV1CartsCartIdBillingaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: PostV1CartsCartIdBillingaddressBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/quote-data-address-interface'
              useForShipping:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Address ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/billing-address:
    get:
      tags:
        - quoteBillingAddressManagementV1
      description: >
        Returns the billing address for a
        specified quote.
      operationId: GetV1CartsMineBillingaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - quoteBillingAddressManagementV1
      description: >
        Assigns a specified billing address to a
        specified cart.
      operationId: PostV1CartsMineBillingaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineBillingaddressBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/quote-data-address-interface'
              useForShipping:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Address ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/billing-address:
    get:
      tags:
        - quoteGuestBillingAddressManagementV1
      description: >
        Return the billing address for a
        specified quote.
      operationId: GetV1GuestcartsCartIdBillingaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-address-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - quoteGuestBillingAddressManagementV1
      description: >
        Assign a specified billing address to a
        specified cart.
      operationId: PostV1GuestcartsCartIdBillingaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: PostV1GuestcartsCartIdBillingaddressBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/quote-data-address-interface'
              useForShipping:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Address ID.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/coupons:
    get:
      tags:
        - quoteCouponManagementV1
      description: >
        Returns information for a coupon in a
        specified cart.
      operationId: GetV1CartsCartIdCoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: The coupon code data.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - quoteCouponManagementV1
      description: Deletes a coupon from a specified cart.
      operationId: DeleteV1CartsCartIdCoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/coupons/{couponCode}:
    put:
      tags:
        - quoteCouponManagementV1
      description: >
        Adds a coupon by code to a specified
        cart.
      operationId: PutV1CartsCartIdCouponsCouponCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: couponCode
          in: path
          type: string
          required: true
          description: The coupon code data.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/coupons:
    get:
      tags:
        - quoteCouponManagementV1
      description: >
        Returns information for a coupon in a
        specified cart.
      operationId: GetV1CartsMineCoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: The coupon code data.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - quoteCouponManagementV1
      description: Deletes a coupon from a specified cart.
      operationId: DeleteV1CartsMineCoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/coupons/{couponCode}:
    put:
      tags:
        - quoteCouponManagementV1
      description: >
        Adds a coupon by code to a specified
        cart.
      operationId: PutV1CartsMineCouponsCouponCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: couponCode
          in: path
          type: string
          required: true
          description: The coupon code data.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/coupons:
    get:
      tags:
        - quoteGuestCouponManagementV1
      description: >
        Return information for a coupon in a
        specified cart.
      operationId: GetV1GuestcartsCartIdCoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: The coupon code data.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - quoteGuestCouponManagementV1
      description: Delete a coupon from a specified cart.
      operationId: DeleteV1GuestcartsCartIdCoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/coupons/{couponCode}:
    put:
      tags:
        - quoteGuestCouponManagementV1
      description: >
        Add a coupon by code to a specified
        cart.
      operationId: PutV1GuestcartsCartIdCouponsCouponCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: couponCode
          in: path
          type: string
          required: true
          description: The coupon code data.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/totals:
    get:
      tags:
        - quoteCartTotalRepositoryV1
      description: >
        Returns quote totals data for a
        specified cart.
      operationId: GetV1CartsCartIdTotals
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/totals:
    get:
      tags:
        - quoteCartTotalRepositoryV1
      description: >
        Returns quote totals data for a
        specified cart.
      operationId: GetV1CartsMineTotals
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/collect-totals:
    put:
      tags:
        - quoteGuestCartTotalManagementV1
      description: >
        Set shipping/billing methods and
        additional data for cart and collect
        totals for guest.
      operationId: PutV1GuestcartsCartIdCollecttotals
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: PutV1GuestcartsCartIdCollecttotalsBody
          in: body
          schema:
            required:
              - paymentMethod
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
              shippingCarrierCode:
                type: string
                description: The carrier code.
              shippingMethodCode:
                type: string
                description: The shipping method code.
              additionalData:
                $ref: '#/definitions/quote-data-totals-additional-data-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/totals:
    get:
      tags:
        - quoteGuestCartTotalRepositoryV1
      description: >
        Return quote totals data for a specified
        cart.
      operationId: GetV1GuestcartsCartIdTotals
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/collect-totals:
    put:
      tags:
        - quoteCartTotalManagementV1
      description: >
        Set shipping/billing methods and
        additional data for cart and collect
        totals.
      operationId: PutV1CartsMineCollecttotals
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1CartsMineCollecttotalsBody
          in: body
          schema:
            required:
              - paymentMethod
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
              shippingCarrierCode:
                type: string
                description: The carrier code.
              shippingMethodCode:
                type: string
                description: The shipping method code.
              additionalData:
                $ref: '#/definitions/quote-data-totals-additional-data-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/installed-providers:
    get:
      tags:
        - twoFactorAuthTfaV1
      description: Get a list of providers
      operationId: GetV1TfaInstalledproviders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/two-factor-auth-provider-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/forced-providers:
    get:
      tags:
        - twoFactorAuthTfaV1
      description: Retrieve forced providers list
      operationId: GetV1TfaForcedproviders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/two-factor-auth-provider-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/user-providers/{userId}:
    get:
      tags:
        - twoFactorAuthTfaV1
      description: Get a user provider
      operationId: GetV1TfaUserprovidersUserId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: userId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/two-factor-auth-provider-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - twoFactorAuthTfaV1
      description: Set providers
      operationId: PutV1TfaUserprovidersUserId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: userId
          in: path
          type: integer
          required: true
        -
          name: PutV1TfaUserprovidersUserIdBody
          in: body
          schema:
            required:
              - providersCodes
            properties:
              providersCodes:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/providers-to-activate/{userId}:
    get:
      tags:
        - twoFactorAuthTfaV1
      description: >
        Returns a list of providers to
        configure/enroll
      operationId: GetV1TfaProviderstoactivateUserId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: userId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/two-factor-auth-provider-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/default-provider-code/{userId}:
    put:
      tags:
        - twoFactorAuthTfaV1
      description: Set default provider code
      operationId: PutV1TfaDefaultprovidercodeUserId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: userId
          in: path
          type: integer
          required: true
        -
          name: PutV1TfaDefaultprovidercodeUserIdBody
          in: body
          schema:
            required:
              - providerCode
            properties:
              providerCode:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - twoFactorAuthUserConfigManagerV1
      description: Get default provider
      operationId: GetV1TfaDefaultprovidercodeUserId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: userId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/tfat-user-providers:
    get:
      tags:
        - twoFactorAuthTfatActionsV1
      description: >
        Get the providers that the user is able
        to use for 2fa
      operationId: GetV1TfaTfatuserproviders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: tfaToken
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/two-factor-auth-provider-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/tfat-providers-to-activate:
    get:
      tags:
        - twoFactorAuthTfatActionsV1
      description: >
        Get the providers that the user still
        needs to configure
      operationId: GetV1TfaTfatproviderstoactivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: tfaToken
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/two-factor-auth-provider-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/google/configure:
    post:
      tags:
        - twoFactorAuthGoogleConfigureV1
      description: >
        Get the information required to
        configure google
      operationId: PostV1TfaProviderGoogleConfigure
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderGoogleConfigureBody
          in: body
          schema:
            required:
              - tfaToken
            properties:
              tfaToken:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/two-factor-auth-data-google-configure-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/google/activate:
    post:
      tags:
        - twoFactorAuthGoogleConfigureV1
      description: >
        Activate the provider and get an admin
        token
      operationId: PostV1TfaProviderGoogleActivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderGoogleActivateBody
          in: body
          schema:
            required:
              - tfaToken
              - otp
            properties:
              tfaToken:
                type: string
              otp:
                type: string
            type: object
            xml:
              name: request
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/google/authenticate:
    post:
      tags:
        - twoFactorAuthGoogleAuthenticateV1
      description: >
        Get an admin token by authenticating
        using google
      operationId: PostV1TfaProviderGoogleAuthenticate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderGoogleAuthenticateBody
          in: body
          schema:
            required:
              - username
              - password
              - otp
            properties:
              username:
                type: string
              password:
                type: string
              otp:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/authy/configure:
    post:
      tags:
        - twoFactorAuthAuthyConfigureV1
      description: >
        Get the information required to
        configure google
      operationId: PostV1TfaProviderAuthyConfigure
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderAuthyConfigureBody
          in: body
          schema:
            required:
              - tfaToken
              - deviceData
            properties:
              tfaToken:
                type: string
              deviceData:
                $ref: '#/definitions/two-factor-auth-data-authy-device-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/two-factor-auth-data-authy-registration-prompt-response-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/authy/activate:
    post:
      tags:
        - twoFactorAuthAuthyConfigureV1
      description: >
        Activate the provider and get an admin
        token
      operationId: PostV1TfaProviderAuthyActivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderAuthyActivateBody
          in: body
          schema:
            required:
              - tfaToken
              - otp
            properties:
              tfaToken:
                type: string
              otp:
                type: string
            type: object
            xml:
              name: request
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/authy/authenticate:
    post:
      tags:
        - twoFactorAuthAuthyAuthenticateV1
      description: Get an admin token using authy 2fa
      operationId: PostV1TfaProviderAuthyAuthenticate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderAuthyAuthenticateBody
          in: body
          schema:
            required:
              - username
              - password
              - otp
            properties:
              username:
                type: string
              password:
                type: string
              otp:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: $otp
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/authy/send-token/{via}:
    post:
      tags:
        - twoFactorAuthAuthyAuthenticateV1
      description: >
        Send a one time password to a device
        using authy
      operationId: PostV1TfaProviderAuthySendtokenVia
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: via
          in: path
          type: string
          required: true
        -
          name: PostV1TfaProviderAuthySendtokenViaBody
          in: body
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/authy/authenticate-onetouch:
    post:
      tags:
        - twoFactorAuthAuthyAuthenticateV1
      description: >
        Authenticate using the present one touch
        response and get an admin token
      operationId: >
        PostV1TfaProviderAuthyAuthenticateonetouch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1TfaProviderAuthyAuthenticateonetouchBody
          in: body
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/u2fkey/configure:
    post:
      tags:
        - twoFactorAuthU2fKeyConfigureV1
      description: >
        Get the information to initiate a
        WebAuthn registration ceremony
      operationId: PostV1TfaProviderU2fkeyConfigure
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderU2fkeyConfigureBody
          in: body
          schema:
            required:
              - tfaToken
            properties:
              tfaToken:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/two-factor-auth-data-u2f-web-authn-request-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/u2fkey/activate:
    post:
      tags:
        - twoFactorAuthU2fKeyConfigureV1
      description: Activate the provider and get a token
      operationId: PostV1TfaProviderU2fkeyActivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderU2fkeyActivateBody
          in: body
          schema:
            required:
              - tfaToken
              - publicKeyCredentialJson
            properties:
              tfaToken:
                type: string
              publicKeyCredentialJson:
                type: string
            type: object
            xml:
              name: request
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/u2fkey/authentication-challenge:
    post:
      tags:
        - twoFactorAuthU2fKeyAuthenticateV1
      description: >
        Get the information to initiate a
        WebAuthn registration ceremony
      operationId: >
        PostV1TfaProviderU2fkeyAuthenticationchallenge
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1TfaProviderU2fkeyAuthenticationchallengeBody
          in: body
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/two-factor-auth-data-u2f-web-authn-request-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/u2fkey/verify:
    post:
      tags:
        - twoFactorAuthU2fKeyAuthenticateV1
      description: >
        Authenticate with the provider and get a
        token
      operationId: PostV1TfaProviderU2fkeyVerify
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TfaProviderU2fkeyVerifyBody
          in: body
          schema:
            required:
              - username
              - password
              - publicKeyCredentialJson
            properties:
              username:
                type: string
              password:
                type: string
              publicKeyCredentialJson:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/duo_security/configure:
    post:
      tags:
        - twoFactorAuthDuoConfigureV1
      description: >
        Get the information required to
        configure duo
      operationId: PostV1TfaProviderDuo_securityConfigure
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1TfaProviderDuo_securityConfigureBody
          in: body
          schema:
            required:
              - tfaToken
            properties:
              tfaToken:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/two-factor-auth-data-duo-data-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/duo_security/activate:
    post:
      tags:
        - twoFactorAuthDuoConfigureV1
      description: >
        Activate the provider and get an admin
        token
      operationId: PostV1TfaProviderDuo_securityActivate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1TfaProviderDuo_securityActivateBody
          in: body
          schema:
            required:
              - tfaToken
              - signatureResponse
            properties:
              tfaToken:
                type: string
              signatureResponse:
                type: string
            type: object
            xml:
              name: request
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/duo_security/get-authentication-data:
    post:
      tags:
        - twoFactorAuthDuoAuthenticateV1
      description: >
        Get the information required to
        configure duo
      operationId: >
        PostV1TfaProviderDuo_securityGetauthenticationdata
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1TfaProviderDuo_securityGetauthenticationdataBody
          in: body
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/two-factor-auth-data-duo-data-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/tfa/provider/duo_security/authenticate:
    post:
      tags:
        - twoFactorAuthDuoAuthenticateV1
      description: Authenticate and get an admin token
      operationId: >
        PostV1TfaProviderDuo_securityAuthenticate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1TfaProviderDuo_securityAuthenticateBody
          in: body
          schema:
            required:
              - username
              - password
              - signatureResponse
            properties:
              username:
                type: string
              password:
                type: string
              signatureResponse:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}:
    get:
      tags:
        - salesOrderRepositoryV1
      description: Loads a specified order.
      operationId: GetV1OrdersId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders:
    get:
      tags:
        - salesOrderRepositoryV1
      description: 'Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1Orders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - salesOrderRepositoryV1
      description: >
        Performs persist operations for a
        specified order.
      operationId: PostV1Orders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1OrdersBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-order-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/create:
    put:
      tags:
        - salesOrderRepositoryV1
      description: >
        Performs persist operations for a
        specified order.
      operationId: PutV1OrdersCreate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1OrdersCreateBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-order-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}/statuses:
    get:
      tags:
        - salesOrderManagementV1
      description: Gets the status for a specified order.
      operationId: GetV1OrdersIdStatuses
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: Order status.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}/cancel:
    post:
      tags:
        - salesOrderManagementV1
      description: Cancels a specified order.
      operationId: PostV1OrdersIdCancel
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}/emails:
    post:
      tags:
        - salesOrderManagementV1
      description: Emails a user a specified order.
      operationId: PostV1OrdersIdEmails
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}/hold:
    post:
      tags:
        - salesOrderManagementV1
      description: Holds a specified order.
      operationId: PostV1OrdersIdHold
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}/unhold:
    post:
      tags:
        - salesOrderManagementV1
      description: >
        Releases a specified order from hold
        status.
      operationId: PostV1OrdersIdUnhold
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{id}/comments:
    post:
      tags:
        - salesOrderManagementV1
      description: Adds a comment to a specified order.
      operationId: PostV1OrdersIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
        -
          name: PostV1OrdersIdCommentsBody
          in: body
          schema:
            required:
              - statusHistory
            properties:
              statusHistory:
                $ref: '#/definitions/sales-data-order-status-history-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - salesOrderManagementV1
      description: Lists comments for a specified order.
      operationId: GetV1OrdersIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-status-history-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/{parent_id}:
    put:
      tags:
        - salesOrderAddressRepositoryV1
      description: >
        Performs persist operations for a
        specified order address.
      operationId: PutV1OrdersParent_id
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: parent_id
          in: path
          type: string
          required: true
        -
          name: PutV1OrdersParent_idBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-order-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/items/{id}:
    get:
      tags:
        - salesOrderItemRepositoryV1
      description: Loads a specified order item.
      operationId: GetV1OrdersItemsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The order item ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-item-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/orders/items:
    get:
      tags:
        - salesOrderItemRepositoryV1
      description: 'Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1OrdersItems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-order-item-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/{id}:
    get:
      tags:
        - salesInvoiceRepositoryV1
      description: Loads a specified invoice.
      operationId: GetV1InvoicesId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The invoice ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-invoice-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices:
    get:
      tags:
        - salesInvoiceRepositoryV1
      description: 'Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1Invoices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-invoice-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/:
    post:
      tags:
        - salesInvoiceRepositoryV1
      description: >
        Performs persist operations for a
        specified invoice.
      operationId: PostV1Invoices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InvoicesBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-invoice-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-invoice-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/{id}/comments:
    get:
      tags:
        - salesInvoiceManagementV1
      description: Lists comments for a specified invoice.
      operationId: GetV1InvoicesIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The invoice ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-invoice-comment-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/{id}/emails:
    post:
      tags:
        - salesInvoiceManagementV1
      description: Emails a user a specified invoice.
      operationId: PostV1InvoicesIdEmails
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The invoice ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/{id}/void:
    post:
      tags:
        - salesInvoiceManagementV1
      description: Voids a specified invoice.
      operationId: PostV1InvoicesIdVoid
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The invoice ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/{id}/capture:
    post:
      tags:
        - salesInvoiceManagementV1
      description: Sets invoice capture.
      operationId: PostV1InvoicesIdCapture
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoices/comments:
    post:
      tags:
        - salesInvoiceCommentRepositoryV1
      description: >
        Performs persist operations for a
        specified invoice comment.
      operationId: PostV1InvoicesComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InvoicesCommentsBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-invoice-comment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-invoice-comment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/invoice/{invoiceId}/refund:
    post:
      tags:
        - salesRefundInvoiceV1
      description: Create refund for invoice
      operationId: PostV1InvoiceInvoiceIdRefund
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: invoiceId
          in: path
          type: integer
          required: true
        -
          name: PostV1InvoiceInvoiceIdRefundBody
          in: body
          schema:
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/sales-data-creditmemo-item-creation-interface'
              isOnline:
                type: boolean
              notify:
                type: boolean
              appendComment:
                type: boolean
              comment:
                $ref: '#/definitions/sales-data-creditmemo-comment-creation-interface'
              arguments:
                $ref: '#/definitions/sales-data-creditmemo-creation-arguments-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/creditmemo/{id}/comments:
    get:
      tags:
        - salesCreditmemoManagementV1
      description: >
        Lists comments for a specified credit
        memo.
      operationId: GetV1CreditmemoIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The credit memo ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-creditmemo-comment-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - salesCreditmemoCommentRepositoryV1
      description: >
        Performs persist operations for a
        specified entity.
      operationId: PostV1CreditmemoIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PostV1CreditmemoIdCommentsBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-creditmemo-comment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-creditmemo-comment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/creditmemo/{id}:
    put:
      tags:
        - salesCreditmemoManagementV1
      description: Cancels a specified credit memo.
      operationId: PutV1CreditmemoId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The credit memo ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - salesCreditmemoRepositoryV1
      description: Loads a specified credit memo.
      operationId: GetV1CreditmemoId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The credit memo ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-creditmemo-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/creditmemo/{id}/emails:
    post:
      tags:
        - salesCreditmemoManagementV1
      description: Emails a user a specified credit memo.
      operationId: PostV1CreditmemoIdEmails
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The credit memo ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/creditmemo/refund:
    post:
      tags:
        - salesCreditmemoManagementV1
      description: >
        Prepare creditmemo to refund and save
        it.
      operationId: PostV1CreditmemoRefund
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CreditmemoRefundBody
          in: body
          schema:
            required:
              - creditmemo
            properties:
              creditmemo:
                $ref: '#/definitions/sales-data-creditmemo-interface'
              offlineRequested:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-creditmemo-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/creditmemos:
    get:
      tags:
        - salesCreditmemoRepositoryV1
      description: 'Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1Creditmemos
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-creditmemo-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/creditmemo:
    post:
      tags:
        - salesCreditmemoRepositoryV1
      description: >
        Performs persist operations for a
        specified credit memo.
      operationId: PostV1Creditmemo
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CreditmemoBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-creditmemo-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-creditmemo-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/order/{orderId}/refund:
    post:
      tags:
        - salesRefundOrderV1
      description: Create offline refund for order
      operationId: PostV1OrderOrderIdRefund
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: integer
          required: true
        -
          name: PostV1OrderOrderIdRefundBody
          in: body
          schema:
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/sales-data-creditmemo-item-creation-interface'
              notify:
                type: boolean
              appendComment:
                type: boolean
              comment:
                $ref: '#/definitions/sales-data-creditmemo-comment-creation-interface'
              arguments:
                $ref: '#/definitions/sales-data-creditmemo-creation-arguments-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/{id}:
    get:
      tags:
        - salesShipmentRepositoryV1
      description: Loads a specified shipment.
      operationId: GetV1ShipmentId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The shipment ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-shipment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipments:
    get:
      tags:
        - salesShipmentRepositoryV1
      description: 'Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1Shipments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-shipment-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/:
    post:
      tags:
        - salesShipmentRepositoryV1
      description: >
        Performs persist operations for a
        specified shipment.
      operationId: PostV1Shipment
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ShipmentBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-shipment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-shipment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/{id}/comments:
    get:
      tags:
        - salesShipmentManagementV1
      description: Lists comments for a specified shipment.
      operationId: GetV1ShipmentIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The shipment ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-shipment-comment-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - salesShipmentCommentRepositoryV1
      description: >
        Performs persist operations for a
        specified shipment comment.
      operationId: PostV1ShipmentIdComments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PostV1ShipmentIdCommentsBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-shipment-comment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-shipment-comment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/{id}/emails:
    post:
      tags:
        - salesShipmentManagementV1
      description: Emails user a specified shipment.
      operationId: PostV1ShipmentIdEmails
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The shipment ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/{id}/label:
    get:
      tags:
        - salesShipmentManagementV1
      description: Gets a specified shipment label.
      operationId: GetV1ShipmentIdLabel
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The shipment label ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: Shipment label.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/track:
    post:
      tags:
        - salesShipmentTrackRepositoryV1
      description: >
        Performs persist operations for a
        specified shipment track.
      operationId: PostV1ShipmentTrack
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ShipmentTrackBody
          in: body
          schema:
            required:
              - entity
            properties:
              entity:
                $ref: '#/definitions/sales-data-shipment-track-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-shipment-track-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipment/track/{id}:
    delete:
      tags:
        - salesShipmentTrackRepositoryV1
      description: >
        Deletes a specified shipment track by
        ID.
      operationId: DeleteV1ShipmentTrackId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The shipment track ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/order/{orderId}/ship:
    post:
      tags:
        - salesShipOrderV1
      description: Creates new Shipment for given Order.
      operationId: PostV1OrderOrderIdShip
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: integer
          required: true
        -
          name: PostV1OrderOrderIdShipBody
          in: body
          schema:
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/sales-data-shipment-item-creation-interface'
              notify:
                type: boolean
              appendComment:
                type: boolean
              comment:
                $ref: '#/definitions/sales-data-shipment-comment-creation-interface'
              tracks:
                type: array
                items:
                  $ref: '#/definitions/sales-data-shipment-track-creation-interface'
              packages:
                type: array
                items:
                  $ref: '#/definitions/sales-data-shipment-package-creation-interface'
              arguments:
                $ref: '#/definitions/sales-data-shipment-creation-arguments-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Id of created Shipment.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/transactions/{id}:
    get:
      tags:
        - salesTransactionRepositoryV1
      description: Loads a specified transaction.
      operationId: GetV1TransactionsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
          description: The transaction ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-transaction-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/transactions:
    get:
      tags:
        - salesTransactionRepositoryV1
      description: 'Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1Transactions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-data-transaction-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/order/{orderId}/invoice:
    post:
      tags:
        - salesInvoiceOrderV1
      description: ""
      operationId: PostV1OrderOrderIdInvoice
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: integer
          required: true
        -
          name: PostV1OrderOrderIdInvoiceBody
          in: body
          schema:
            properties:
              capture:
                type: boolean
              items:
                type: array
                items:
                  $ref: '#/definitions/sales-data-invoice-item-creation-interface'
              notify:
                type: boolean
              appendComment:
                type: boolean
              comment:
                $ref: '#/definitions/sales-data-invoice-comment-creation-interface'
              arguments:
                $ref: '#/definitions/sales-data-invoice-creation-arguments-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/shipping-information:
    post:
      tags:
        - >
          checkoutGuestShippingInformationManagementV1
      description: ""
      operationId: >
        PostV1GuestcartsCartIdShippinginformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1GuestcartsCartIdShippinginformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-shipping-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/checkout-data-payment-details-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/shipping-information:
    post:
      tags:
        - checkoutShippingInformationManagementV1
      description: ""
      operationId: PostV1CartsMineShippinginformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineShippinginformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-shipping-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/checkout-data-payment-details-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/shipping-information:
    post:
      tags:
        - checkoutShippingInformationManagementV1
      description: ""
      operationId: PostV1CartsCartIdShippinginformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
        -
          name: PostV1CartsCartIdShippinginformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-shipping-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/checkout-data-payment-details-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/totals-information:
    post:
      tags:
        - checkoutTotalsInformationManagementV1
      description: >
        Calculate quote totals based on address
        and shipping method.
      operationId: PostV1CartsCartIdTotalsinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
        -
          name: PostV1CartsCartIdTotalsinformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-totals-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/totals-information:
    post:
      tags:
        - checkoutTotalsInformationManagementV1
      description: >
        Calculate quote totals based on address
        and shipping method.
      operationId: PostV1CartsMineTotalsinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineTotalsinformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-totals-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/totals-information:
    post:
      tags:
        - >
          checkoutGuestTotalsInformationManagementV1
      description: >
        Calculate quote totals based on address
        and shipping method.
      operationId: PostV1GuestcartsCartIdTotalsinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1GuestcartsCartIdTotalsinformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-totals-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/payment-information:
    post:
      tags:
        - >
          checkoutGuestPaymentInformationManagementV1
      description: >
        Set payment information and place order
        for a specified cart.
      operationId: PostV1GuestcartsCartIdPaymentinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1GuestcartsCartIdPaymentinformationBody
          in: body
          schema:
            required:
              - email
              - paymentMethod
            properties:
              email:
                type: string
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
              billingAddress:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - >
          checkoutGuestPaymentInformationManagementV1
      description: Get payment information
      operationId: GetV1GuestcartsCartIdPaymentinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/checkout-data-payment-details-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/set-payment-information:
    post:
      tags:
        - >
          checkoutGuestPaymentInformationManagementV1
      description: >
        Set payment information for a specified
        cart.
      operationId: >
        PostV1GuestcartsCartIdSetpaymentinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1GuestcartsCartIdSetpaymentinformationBody
          in: body
          schema:
            required:
              - email
              - paymentMethod
            properties:
              email:
                type: string
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
              billingAddress:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/payment-information:
    post:
      tags:
        - checkoutPaymentInformationManagementV1
      description: >
        Set payment information and place order
        for a specified cart.
      operationId: PostV1CartsMinePaymentinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMinePaymentinformationBody
          in: body
          schema:
            required:
              - paymentMethod
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
              billingAddress:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - checkoutPaymentInformationManagementV1
      description: Get payment information
      operationId: GetV1CartsMinePaymentinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/checkout-data-payment-details-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/set-payment-information:
    post:
      tags:
        - checkoutPaymentInformationManagementV1
      description: >
        Set payment information for a specified
        cart.
      operationId: PostV1CartsMineSetpaymentinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineSetpaymentinformationBody
          in: body
          schema:
            required:
              - paymentMethod
            properties:
              paymentMethod:
                $ref: '#/definitions/quote-data-payment-interface'
              billingAddress:
                $ref: '#/definitions/quote-data-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
            description: Order ID.
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/{sku}/children:
    get:
      tags:
        - configurableProductLinkManagementV1
      description: >
        Get all children for Configurable
        product
      operationId: GetV1ConfigurableproductsSkuChildren
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/{sku}/children/{childSku}:
    delete:
      tags:
        - configurableProductLinkManagementV1
      description: Remove configurable product option
      operationId: >
        DeleteV1ConfigurableproductsSkuChildrenChildSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: childSku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/{sku}/child:
    post:
      tags:
        - configurableProductLinkManagementV1
      description: ""
      operationId: PostV1ConfigurableproductsSkuChild
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PostV1ConfigurableproductsSkuChildBody
          in: body
          schema:
            required:
              - childSku
            properties:
              childSku:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/variation:
    put:
      tags:
        - >
          configurableProductConfigurableProductManagementV1
      description: Generate variation based on same product
      operationId: PutV1ConfigurableproductsVariation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1ConfigurableproductsVariationBody
          in: body
          schema:
            required:
              - product
              - options
            properties:
              product:
                $ref: '#/definitions/catalog-data-product-interface'
              options:
                type: array
                items:
                  $ref: '#/definitions/configurable-product-data-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/{sku}/options/{id}:
    get:
      tags:
        - configurableProductOptionRepositoryV1
      description: Get option for configurable product
      operationId: GetV1ConfigurableproductsSkuOptionsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/configurable-product-data-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - configurableProductOptionRepositoryV1
      description: Save option
      operationId: PutV1ConfigurableproductsSkuOptionsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: >
            PutV1ConfigurableproductsSkuOptionsIdBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/configurable-product-data-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - configurableProductOptionRepositoryV1
      description: Remove option from configurable product
      operationId: DeleteV1ConfigurableproductsSkuOptionsId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/{sku}/options/all:
    get:
      tags:
        - configurableProductOptionRepositoryV1
      description: Get all options for configurable product
      operationId: GetV1ConfigurableproductsSkuOptionsAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/configurable-product-data-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/configurable-products/{sku}/options:
    post:
      tags:
        - configurableProductOptionRepositoryV1
      description: Save option
      operationId: PostV1ConfigurableproductsSkuOptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PostV1ConfigurableproductsSkuOptionsBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/configurable-product-data-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/analytics/link:
    get:
      tags:
        - analyticsLinkProviderV1
      description: ""
      operationId: GetV1AnalyticsLink
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/analytics-data-link-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/downloadable-links:
    get:
      tags:
        - downloadableLinkRepositoryV1
      description: List of links with associated samples
      operationId: GetV1ProductsSkuDownloadablelinks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/downloadable-data-link-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - downloadableLinkRepositoryV1
      description: >
        Update downloadable link of the given
        product (link type and its resources
        cannot be changed)
      operationId: PostV1ProductsSkuDownloadablelinks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PostV1ProductsSkuDownloadablelinksBody
          in: body
          schema:
            required:
              - link
            properties:
              link:
                $ref: '#/definitions/downloadable-data-link-interface'
              isGlobalScopeContent:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/downloadable-links/{id}:
    put:
      tags:
        - downloadableLinkRepositoryV1
      description: >
        Update downloadable link of the given
        product (link type and its resources
        cannot be changed)
      operationId: PutV1ProductsSkuDownloadablelinksId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1ProductsSkuDownloadablelinksIdBody
          in: body
          schema:
            required:
              - link
            properties:
              link:
                $ref: '#/definitions/downloadable-data-link-interface'
              isGlobalScopeContent:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/downloadable-links/{id}:
    delete:
      tags:
        - downloadableLinkRepositoryV1
      description: Delete downloadable link
      operationId: DeleteV1ProductsDownloadablelinksId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/downloadable-links/samples:
    get:
      tags:
        - downloadableSampleRepositoryV1
      description: List of samples for downloadable product
      operationId: GetV1ProductsSkuDownloadablelinksSamples
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/downloadable-data-sample-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - downloadableSampleRepositoryV1
      description: >
        Update downloadable sample of the given
        product
      operationId: >
        PostV1ProductsSkuDownloadablelinksSamples
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: >
            PostV1ProductsSkuDownloadablelinksSamplesBody
          in: body
          schema:
            required:
              - sample
            properties:
              sample:
                $ref: '#/definitions/downloadable-data-sample-interface'
              isGlobalScopeContent:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/{sku}/downloadable-links/samples/{id}:
    put:
      tags:
        - downloadableSampleRepositoryV1
      description: >
        Update downloadable sample of the given
        product
      operationId: >
        PutV1ProductsSkuDownloadablelinksSamplesId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: >
            PutV1ProductsSkuDownloadablelinksSamplesIdBody
          in: body
          schema:
            required:
              - sample
            properties:
              sample:
                $ref: '#/definitions/downloadable-data-sample-interface'
              isGlobalScopeContent:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/products/downloadable-links/samples/{id}:
    delete:
      tags:
        - downloadableSampleRepositoryV1
      description: Delete downloadable sample
      operationId: >
        DeleteV1ProductsDownloadablelinksSamplesId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/{sku}/links/{optionId}:
    post:
      tags:
        - bundleProductLinkManagementV1
      description: >
        Add child product to specified Bundle
        option by product sku
      operationId: PostV1BundleproductsSkuLinksOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
        -
          name: PostV1BundleproductsSkuLinksOptionIdBody
          in: body
          schema:
            required:
              - linkedProduct
            properties:
              linkedProduct:
                $ref: '#/definitions/bundle-data-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/{sku}/links/{id}:
    put:
      tags:
        - bundleProductLinkManagementV1
      description: ""
      operationId: PutV1BundleproductsSkuLinksId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1BundleproductsSkuLinksIdBody
          in: body
          schema:
            required:
              - linkedProduct
            properties:
              linkedProduct:
                $ref: '#/definitions/bundle-data-link-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/{productSku}/children:
    get:
      tags:
        - bundleProductLinkManagementV1
      description: Get all children for Bundle product
      operationId: GetV1BundleproductsProductSkuChildren
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productSku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/bundle-data-link-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/{sku}/options/{optionId}/children/{childSku}:
    delete:
      tags:
        - bundleProductLinkManagementV1
      description: >
        Remove product from Bundle product
        option
      operationId: >
        DeleteV1BundleproductsSkuOptionsOptionIdChildrenChildSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
        -
          name: childSku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/{sku}/options/all:
    get:
      tags:
        - bundleProductOptionRepositoryV1
      description: Get all options for bundle product
      operationId: GetV1BundleproductsSkuOptionsAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/bundle-data-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/{sku}/options/{optionId}:
    get:
      tags:
        - bundleProductOptionRepositoryV1
      description: Get option for bundle product
      operationId: GetV1BundleproductsSkuOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/bundle-data-option-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - bundleProductOptionRepositoryV1
      description: Remove bundle option
      operationId: DeleteV1BundleproductsSkuOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: optionId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/options/types:
    get:
      tags:
        - bundleProductOptionTypeListV1
      description: >
        Get all types for options for bundle
        products
      operationId: GetV1BundleproductsOptionsTypes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/bundle-data-option-type-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/options/add:
    post:
      tags:
        - bundleProductOptionManagementV1
      description: Add new option for bundle product
      operationId: PostV1BundleproductsOptionsAdd
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BundleproductsOptionsAddBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/bundle-data-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bundle-products/options/{optionId}:
    put:
      tags:
        - bundleProductOptionManagementV1
      description: Add new option for bundle product
      operationId: PutV1BundleproductsOptionsOptionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: optionId
          in: path
          type: string
          required: true
        -
          name: PutV1BundleproductsOptionsOptionIdBody
          in: body
          schema:
            required:
              - option
            properties:
              option:
                $ref: '#/definitions/bundle-data-option-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/gift-message:
    get:
      tags:
        - giftMessageCartRepositoryV1
      description: >
        Return the gift message for a specified
        order.
      operationId: GetV1CartsCartIdGiftmessage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The shopping cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/gift-message-data-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - giftMessageCartRepositoryV1
      description: >
        Set the gift message for an entire
        order.
      operationId: PostV1CartsCartIdGiftmessage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: PostV1CartsCartIdGiftmessageBody
          in: body
          schema:
            required:
              - giftMessage
            properties:
              giftMessage:
                $ref: '#/definitions/gift-message-data-message-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/gift-message:
    get:
      tags:
        - giftMessageCartRepositoryV1
      description: >
        Return the gift message for a specified
        order.
      operationId: GetV1CartsMineGiftmessage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/gift-message-data-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - giftMessageCartRepositoryV1
      description: >
        Set the gift message for an entire
        order.
      operationId: PostV1CartsMineGiftmessage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineGiftmessageBody
          in: body
          schema:
            required:
              - giftMessage
            properties:
              giftMessage:
                $ref: '#/definitions/gift-message-data-message-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/gift-message/{itemId}:
    get:
      tags:
        - giftMessageItemRepositoryV1
      description: >
        Return the gift message for a specified
        item in a specified shopping cart.
      operationId: GetV1CartsCartIdGiftmessageItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The shopping cart ID.
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/gift-message-data-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - giftMessageItemRepositoryV1
      description: >
        Set the gift message for a specified
        item in a specified shopping cart.
      operationId: PostV1CartsCartIdGiftmessageItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID.
        -
          name: PostV1CartsCartIdGiftmessageItemIdBody
          in: body
          schema:
            required:
              - giftMessage
            properties:
              giftMessage:
                $ref: '#/definitions/gift-message-data-message-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/gift-message/{itemId}:
    get:
      tags:
        - giftMessageItemRepositoryV1
      description: >
        Return the gift message for a specified
        item in a specified shopping cart.
      operationId: GetV1CartsMineGiftmessageItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/gift-message-data-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - giftMessageItemRepositoryV1
      description: >
        Set the gift message for a specified
        item in a specified shopping cart.
      operationId: PostV1CartsMineGiftmessageItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID.
        -
          name: PostV1CartsMineGiftmessageItemIdBody
          in: body
          schema:
            required:
              - giftMessage
            properties:
              giftMessage:
                $ref: '#/definitions/gift-message-data-message-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/gift-message:
    get:
      tags:
        - giftMessageGuestCartRepositoryV1
      description: >
        Return the gift message for a specified
        order.
      operationId: GetV1GuestcartsCartIdGiftmessage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The shopping cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/gift-message-data-message-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - giftMessageGuestCartRepositoryV1
      description: >
        Set the gift message for an entire
        order.
      operationId: PostV1GuestcartsCartIdGiftmessage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: PostV1GuestcartsCartIdGiftmessageBody
          in: body
          schema:
            required:
              - giftMessage
            properties:
              giftMessage:
                $ref: '#/definitions/gift-message-data-message-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/gift-message/{itemId}:
    get:
      tags:
        - giftMessageGuestItemRepositoryV1
      description: >
        Return the gift message for a specified
        item in a specified shopping cart.
      operationId: GetV1GuestcartsCartIdGiftmessageItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The shopping cart ID.
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/gift-message-data-message-interface'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - giftMessageGuestItemRepositoryV1
      description: >
        Set the gift message for a specified
        item in a specified shopping cart.
      operationId: PostV1GuestcartsCartIdGiftmessageItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: itemId
          in: path
          type: integer
          required: true
          description: The item ID.
        -
          name: >
            PostV1GuestcartsCartIdGiftmessageItemIdBody
          in: body
          schema:
            required:
              - giftMessage
            properties:
              giftMessage:
                $ref: '#/definitions/gift-message-data-message-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/liqpay/callback:
    post:
      tags:
        - liqpayMagentoLiqPayLiqPayCallbackV1
      description: ""
      operationId: PostV1LiqpayCallback
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/sources:
    get:
      tags:
        - inventoryApiSourceRepositoryV1
      description: >
        Find Sources by SearchCriteria
        SearchCriteria is not required because
        load all stocks is useful case
      operationId: GetV1InventorySources
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-source-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - inventoryApiSourceRepositoryV1
      description: Save Source data
      operationId: PostV1InventorySources
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InventorySourcesBody
          in: body
          schema:
            required:
              - source
            properties:
              source:
                $ref: '#/definitions/inventory-api-data-source-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/sources/{sourceCode}:
    get:
      tags:
        - inventoryApiSourceRepositoryV1
      description: >
        Get Source data by given code. If you
        want to create plugin on get method,
        also you need to create separate plugin
        on getList method, because entity
        loading way is different for these
        methods
      operationId: GetV1InventorySourcesSourceCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sourceCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-source-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - inventoryApiSourceRepositoryV1
      description: Save Source data
      operationId: PutV1InventorySourcesSourceCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sourceCode
          in: path
          type: string
          required: true
        -
          name: PutV1InventorySourcesSourceCodeBody
          in: body
          schema:
            required:
              - source
            properties:
              source:
                $ref: '#/definitions/inventory-api-data-source-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}:
    get:
      tags:
        - >
          inventoryApiGetSourcesAssignedToStockOrderedByPriorityV1
      description: "Get Sources assigned to Stock ordered by priority If Stock with given id doesn't exist then return an empty array"
      operationId: >
        GetV1InventoryGetsourcesassignedtostockorderedbypriorityStockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: stockId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/inventory-api-data-source-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/stocks:
    get:
      tags:
        - inventoryApiStockRepositoryV1
      description: >
        Find Stocks by given SearchCriteria
        SearchCriteria is not required because
        load all stocks is useful case
      operationId: GetV1InventoryStocks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-stock-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - inventoryApiStockRepositoryV1
      description: Save Stock data
      operationId: PostV1InventoryStocks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InventoryStocksBody
          in: body
          schema:
            required:
              - stock
            properties:
              stock:
                $ref: '#/definitions/inventory-api-data-stock-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/stocks/{stockId}:
    get:
      tags:
        - inventoryApiStockRepositoryV1
      description: >
        Get Stock data by given stockId. If you
        want to create plugin on get method,
        also you need to create separate plugin
        on getList method, because entity
        loading way is different for these
        methods
      operationId: GetV1InventoryStocksStockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: stockId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-stock-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - inventoryApiStockRepositoryV1
      description: >
        Delete the Stock data by stockId. If
        stock is not found do nothing
      operationId: DeleteV1InventoryStocksStockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: stockId
          in: path
          type: integer
          required: true
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - inventoryApiStockRepositoryV1
      description: Save Stock data
      operationId: PutV1InventoryStocksStockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: stockId
          in: path
          type: string
          required: true
        -
          name: PutV1InventoryStocksStockIdBody
          in: body
          schema:
            required:
              - stock
            properties:
              stock:
                $ref: '#/definitions/inventory-api-data-stock-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/stock-source-links:
    get:
      tags:
        - inventoryApiGetStockSourceLinksV1
      description: >
        Find StockSourceLink list by given
        SearchCriteria
      operationId: GetV1InventoryStocksourcelinks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-stock-source-link-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - inventoryApiStockSourceLinksSaveV1
      description: Save StockSourceLink list data
      operationId: PostV1InventoryStocksourcelinks
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InventoryStocksourcelinksBody
          in: body
          schema:
            required:
              - links
            properties:
              links:
                type: array
                items:
                  $ref: '#/definitions/inventory-api-data-stock-source-link-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/stock-source-links-delete:
    post:
      tags:
        - inventoryApiStockSourceLinksDeleteV1
      description: Remove StockSourceLink list list
      operationId: PostV1InventoryStocksourcelinksdelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryStocksourcelinksdeleteBody
          in: body
          schema:
            required:
              - links
            properties:
              links:
                type: array
                items:
                  $ref: '#/definitions/inventory-api-data-stock-source-link-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/source-items:
    get:
      tags:
        - inventoryApiSourceItemRepositoryV1
      description: >
        Find SourceItems by SearchCriteria We
        need to have this method for direct work
        with SourceItems because this object
        contains additional data like as qty,
        status (for example can be searchable by
        additional field)
      operationId: GetV1InventorySourceitems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-source-item-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - inventoryApiSourceItemsSaveV1
      description: Save Multiple Source item data
      operationId: PostV1InventorySourceitems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InventorySourceitemsBody
          in: body
          schema:
            required:
              - sourceItems
            properties:
              sourceItems:
                type: array
                items:
                  $ref: '#/definitions/inventory-api-data-source-item-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/source-items-delete:
    post:
      tags:
        - inventoryApiSourceItemsDeleteV1
      description: Delete Multiple Source item data
      operationId: PostV1InventorySourceitemsdelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1InventorySourceitemsdeleteBody
          in: body
          schema:
            required:
              - sourceItems
            properties:
              sourceItems:
                type: array
                items:
                  $ref: '#/definitions/inventory-api-data-source-item-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/bulk-product-source-assign:
    post:
      tags:
        - inventoryCatalogApiBulkSourceAssignV1
      description: Run mass product to source assignment
      operationId: PostV1InventoryBulkproductsourceassign
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryBulkproductsourceassignBody
          in: body
          schema:
            required:
              - skus
              - sourceCodes
            properties:
              skus:
                type: array
                items:
                  type: string
              sourceCodes:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/bulk-product-source-unassign:
    post:
      tags:
        - inventoryCatalogApiBulkSourceUnassignV1
      description: Run mass product to source un-assignment
      operationId: PostV1InventoryBulkproductsourceunassign
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryBulkproductsourceunassignBody
          in: body
          schema:
            required:
              - skus
              - sourceCodes
            properties:
              skus:
                type: array
                items:
                  type: string
              sourceCodes:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/bulk-product-source-transfer:
    post:
      tags:
        - >
          inventoryCatalogApiBulkInventoryTransferV1
      description: Run bulk inventory transfer
      operationId: PostV1InventoryBulkproductsourcetransfer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryBulkproductsourcetransferBody
          in: body
          schema:
            required:
              - skus
              - originSource
              - destinationSource
              - unassignFromOrigin
            properties:
              skus:
                type: array
                items:
                  type: string
              originSource:
                type: string
              destinationSource:
                type: string
              unassignFromOrigin:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/bulk-partial-source-transfer:
    post:
      tags:
        - >
          inventoryCatalogApiBulkPartialInventoryTransferV1
      description: >
        Run bulk partial inventory transfer for
        specified items.
      operationId: PostV1InventoryBulkpartialsourcetransfer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryBulkpartialsourcetransferBody
          in: body
          schema:
            required:
              - originSourceCode
              - destinationSourceCode
              - items
            properties:
              originSourceCode:
                type: string
              destinationSourceCode:
                type: string
              items:
                type: array
                items:
                  $ref: '#/definitions/inventory-catalog-api-data-partial-inventory-transfer-item-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/get-distance-provider-code:
    get:
      tags:
        - >
          inventoryDistanceBasedSourceSelectionApiGetDistanceProviderCodeV1
      description: Get Default distance provider code
      operationId: GetV1InventoryGetdistanceprovidercode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/get-distance:
    get:
      tags:
        - >
          inventoryDistanceBasedSourceSelectionApiGetDistanceV1
      description: Get distance between two points
      operationId: GetV1InventoryGetdistance
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'source[lat]'
          in: query
          type: number
          description: Latitude
        -
          name: 'source[lng]'
          in: query
          type: number
          description: Longitude
        -
          name: 'destination[lat]'
          in: query
          type: number
          description: Latitude
        -
          name: 'destination[lng]'
          in: query
          type: number
          description: Longitude
      responses:
        200:
          description: 200 Success.
          schema:
            type: number
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/get-latlng-from-address:
    get:
      tags:
        - >
          inventoryDistanceBasedSourceSelectionApiGetLatLngFromAddressV1
      description: >
        Get latitude and longitude object from
        address
      operationId: GetV1InventoryGetlatlngfromaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'address[country]'
          in: query
          type: string
          description: Shipping country
        -
          name: 'address[postcode]'
          in: query
          type: string
          description: Shipping postcode
        -
          name: 'address[street]'
          in: query
          type: string
          description: Shipping street address
        -
          name: 'address[region]'
          in: query
          type: string
          description: Shipping region
        -
          name: 'address[city]'
          in: query
          type: string
          description: Shipping city
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-distance-based-source-selection-api-data-lat-lng-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/get-latslngs-from-address:
    get:
      tags:
        - >
          inventoryDistanceBasedSourceSelectionApiGetLatsLngsFromAddressV1
      description: >
        Get all available latitude and longitude
        objects from address.
      operationId: GetV1InventoryGetlatslngsfromaddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'address[country]'
          in: query
          type: string
          description: Shipping country
        -
          name: 'address[postcode]'
          in: query
          type: string
          description: Shipping postcode
        -
          name: 'address[street]'
          in: query
          type: string
          description: Shipping street address
        -
          name: 'address[region]'
          in: query
          type: string
          description: Shipping region
        -
          name: 'address[city]'
          in: query
          type: string
          description: Shipping city
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/inventory-distance-based-source-selection-api-data-lat-lng-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}:
    get:
      tags:
        - >
          inventoryExportStockApiExportStockSalableQtyV1
      description: >
        Export product stock data filtered by
        search criteria.
      operationId: >
        GetV1InventoryExportstocksalableqtySalesChannelTypeSalesChannelCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: salesChannelType
          in: path
          type: string
          required: true
        -
          name: salesChannelCode
          in: path
          type: string
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}:
    get:
      tags:
        - >
          inventoryExportStockApiExportStockIndexDataV1
      description: 'Provides stock index export from inventory_stock_% table'
      operationId: >
        GetV1InventoryDumpstockindexdataSalesChannelTypeSalesChannelCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: salesChannelType
          in: path
          type: string
          required: true
        -
          name: salesChannelCode
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/inventory-export-stock-api-data-product-stock-index-data-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/get-product-salable-quantity/{sku}/{stockId}:
    get:
      tags:
        - inventorySalesApiGetProductSalableQtyV1
      description: >
        Get Product Quantity for given SKU and
        Stock
      operationId: >
        GetV1InventoryGetproductsalablequantitySkuStockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: stockId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: number
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/is-product-salable/{sku}/{stockId}:
    get:
      tags:
        - inventorySalesApiIsProductSalableV1
      description: >
        Get is product in salable for given SKU
        in a given Stock
      operationId: GetV1InventoryIsproductsalableSkuStockId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: stockId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/are-products-salable:
    get:
      tags:
        - inventorySalesApiAreProductsSalableV1
      description: >
        Get products salable status for given
        SKUs and given Stock.
      operationId: GetV1InventoryAreproductssalable
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: skus
          in: query
          type: array
          items:
            type: string
          required: true
        -
          name: stockId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/inventory-sales-api-data-is-product-salable-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}:
    get:
      tags:
        - >
          inventorySalesApiIsProductSalableForRequestedQtyV1
      description: >
        Get is product salable for given SKU in
        a given Stock for a certain Qty
      operationId: >
        GetV1InventoryIsproductsalableforrequestedqtySkuStockIdRequestedQty
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: stockId
          in: path
          type: integer
          required: true
        -
          name: requestedQty
          in: path
          type: number
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-sales-api-data-product-salable-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/are-product-salable-for-requested-qty/:
    get:
      tags:
        - >
          inventorySalesApiAreProductsSalableForRequestedQtyV1
      description: >
        Get whether products are salable in
        requested Qty for given set of SKUs in
        specified stock.
      operationId: >
        GetV1InventoryAreproductsalableforrequestedqty
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'skuRequests[0][sku]'
          in: query
          type: string
          description: Product sku.
        -
          name: 'skuRequests[0][qty]'
          in: query
          type: number
          description: Product quantity.
        -
          name: stockId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/stock-resolver/{type}/{code}:
    get:
      tags:
        - inventorySalesApiStockResolverV1
      description: >
        Resolve Stock by Sales Channel type and
        code
      operationId: GetV1InventoryStockresolverTypeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: type
          in: path
          type: string
          required: true
        -
          name: code
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-api-data-stock-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/in-store-pickup/pickup-locations/:
    get:
      tags:
        - >
          inventoryInStorePickupApiGetPickupLocationsV1
      description: >
        Get Pickup Locations according to the
        results of filtration by Search Request.
      operationId: >
        GetV1InventoryInstorepickupPickuplocations
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchRequest[area][radius]'
          in: query
          type: integer
          description: Search radius in KM.
        -
          name: 'searchRequest[area][searchTerm]'
          in: query
          type: string
          description: Search term string.
        -
          name: 'searchRequest[filters][country][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][country][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][postcode][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][postcode][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][region][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][region][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][regionId][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][regionId][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][city][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][city][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][street][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][street][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][name][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][name][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[filters][pickupLocationCode][value]'
          in: query
          type: string
          description: Value.
        -
          name: 'searchRequest[filters][pickupLocationCode][conditionType]'
          in: query
          type: string
          description: Condition Type.
        -
          name: 'searchRequest[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchRequest[currentPage]'
          in: query
          type: integer
          description: Current page.
        -
          name: 'searchRequest[scopeType]'
          in: query
          type: string
          description: Sales Channel Type.
        -
          name: 'searchRequest[scopeCode]'
          in: query
          type: string
          description: Sales Channel code.
        -
          name: 'searchRequest[sort][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchRequest[sort][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchRequest[extensionAttributes][productsInfo][0][sku]'
          in: query
          type: string
          description: Product SKU.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-in-store-pickup-api-data-search-result-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/source-selection-algorithm-list:
    get:
      tags:
        - >
          inventorySourceSelectionApiGetSourceSelectionAlgorithmListV1
      description: ""
      operationId: >
        GetV1InventorySourceselectionalgorithmlist
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/inventory-source-selection-api-data-source-selection-algorithm-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/source-selection-algorithm-result:
    post:
      tags:
        - >
          inventorySourceSelectionApiSourceSelectionServiceV1
      description: ""
      operationId: >
        PostV1InventorySourceselectionalgorithmresult
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventorySourceselectionalgorithmresultBody
          in: body
          schema:
            required:
              - inventoryRequest
              - algorithmCode
            properties:
              inventoryRequest:
                $ref: '#/definitions/inventory-source-selection-api-data-inventory-request-interface'
              algorithmCode:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-source-selection-api-data-source-selection-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/order/notify-orders-are-ready-for-pickup:
    post:
      tags:
        - >
          inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1
      description: >
        Notify customer that the orders is ready
        for pickup.
      operationId: PostV1OrderNotifyordersarereadyforpickup
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1OrderNotifyordersarereadyforpickupBody
          in: body
          schema:
            required:
              - orderIds
            properties:
              orderIds:
                type: array
                items:
                  type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-in-store-pickup-sales-api-data-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/low-quantity-notification/{sourceCode}/{sku}:
    get:
      tags:
        - >
          inventoryLowQuantityNotificationApiGetSourceItemConfigurationV1
      description: Get the source item configuration
      operationId: >
        GetV1InventoryLowquantitynotificationSourceCodeSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sourceCode
          in: path
          type: string
          required: true
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/inventory-low-quantity-notification-api-data-source-item-configuration-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/low-quantity-notification:
    post:
      tags:
        - >
          inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1
      description: ""
      operationId: PostV1InventoryLowquantitynotification
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryLowquantitynotificationBody
          in: body
          schema:
            required:
              - sourceItemConfigurations
            properties:
              sourceItemConfigurations:
                type: array
                items:
                  $ref: '#/definitions/inventory-low-quantity-notification-api-data-source-item-configuration-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/inventory/low-quantity-notifications-delete:
    post:
      tags:
        - >
          inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1
      description: >
        Delete multiple source items
        configuration for low quantity
      operationId: >
        PostV1InventoryLowquantitynotificationsdelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1InventoryLowquantitynotificationsdeleteBody
          in: body
          schema:
            required:
              - sourceItems
            properties:
              sourceItems:
                type: array
                items:
                  $ref: '#/definitions/inventory-api-data-source-item-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/salesRules/{ruleId}:
    get:
      tags:
        - salesRuleRuleRepositoryV1
      description: Get rule by ID.
      operationId: GetV1SalesRulesRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - salesRuleRuleRepositoryV1
      description: Save sales rule.
      operationId: PutV1SalesRulesRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: string
          required: true
        -
          name: PutV1SalesRulesRuleIdBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/sales-rule-data-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - salesRuleRuleRepositoryV1
      description: Delete rule by ID.
      operationId: DeleteV1SalesRulesRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/salesRules/search:
    get:
      tags:
        - salesRuleRuleRepositoryV1
      description: 'Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1SalesRulesSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-rule-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/salesRules:
    post:
      tags:
        - salesRuleRuleRepositoryV1
      description: Save sales rule.
      operationId: PostV1SalesRules
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1SalesRulesBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/sales-rule-data-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/coupons/{couponId}:
    get:
      tags:
        - salesRuleCouponRepositoryV1
      description: Get coupon by coupon id.
      operationId: GetV1CouponsCouponId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: couponId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-coupon-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - salesRuleCouponRepositoryV1
      description: Save a coupon.
      operationId: PutV1CouponsCouponId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: couponId
          in: path
          type: string
          required: true
        -
          name: PutV1CouponsCouponIdBody
          in: body
          schema:
            required:
              - coupon
            properties:
              coupon:
                $ref: '#/definitions/sales-rule-data-coupon-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-coupon-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - salesRuleCouponRepositoryV1
      description: Delete coupon by coupon id.
      operationId: DeleteV1CouponsCouponId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: couponId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/coupons/search:
    get:
      tags:
        - salesRuleCouponRepositoryV1
      description: 'Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1CouponsSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-coupon-search-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/coupons:
    post:
      tags:
        - salesRuleCouponRepositoryV1
      description: Save a coupon.
      operationId: PostV1Coupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CouponsBody
          in: body
          schema:
            required:
              - coupon
            properties:
              coupon:
                $ref: '#/definitions/sales-rule-data-coupon-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-coupon-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/coupons/generate:
    post:
      tags:
        - salesRuleCouponManagementV1
      description: Generate coupon for a rule
      operationId: PostV1CouponsGenerate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CouponsGenerateBody
          in: body
          schema:
            required:
              - couponSpec
            properties:
              couponSpec:
                $ref: '#/definitions/sales-rule-data-coupon-generation-spec-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/coupons/deleteByIds:
    post:
      tags:
        - salesRuleCouponManagementV1
      description: Delete coupon by coupon ids.
      operationId: PostV1CouponsDeleteByIds
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CouponsDeleteByIdsBody
          in: body
          schema:
            required:
              - ids
            properties:
              ids:
                type: array
                items:
                  type: integer
              ignoreInvalidCoupons:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-coupon-mass-delete-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/coupons/deleteByCodes:
    post:
      tags:
        - salesRuleCouponManagementV1
      description: Delete coupon by coupon codes.
      operationId: PostV1CouponsDeleteByCodes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CouponsDeleteByCodesBody
          in: body
          schema:
            required:
              - codes
            properties:
              codes:
                type: array
                items:
                  type: string
              ignoreInvalidCoupons:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/sales-rule-data-coupon-mass-delete-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/licence:
    get:
      tags:
        - >
          checkoutAgreementsCheckoutAgreementsRepositoryV1
      description: Lists active checkout agreements.
      operationId: GetV1CartsLicence
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/checkout-agreements-data-agreement-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/licence/list:
    get:
      tags:
        - >
          checkoutAgreementsCheckoutAgreementsListV1
      description: List of checkout agreements.
      operationId: GetV1CartsLicenceList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/checkout-agreements-data-agreement-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxRates:
    post:
      tags:
        - taxTaxRateRepositoryV1
      description: Create or update tax rate
      operationId: PostV1TaxRates
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TaxRatesBody
          in: body
          schema:
            required:
              - taxRate
            properties:
              taxRate:
                $ref: '#/definitions/tax-data-tax-rate-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rate-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - taxTaxRateRepositoryV1
      description: Create or update tax rate
      operationId: PutV1TaxRates
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1TaxRatesBody
          in: body
          schema:
            required:
              - taxRate
            properties:
              taxRate:
                $ref: '#/definitions/tax-data-tax-rate-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rate-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxRates/{rateId}:
    get:
      tags:
        - taxTaxRateRepositoryV1
      description: Get tax rate
      operationId: GetV1TaxRatesRateId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: rateId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rate-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - taxTaxRateRepositoryV1
      description: Delete tax rate
      operationId: DeleteV1TaxRatesRateId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: rateId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxRates/search:
    get:
      tags:
        - taxTaxRateRepositoryV1
      description: 'Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1TaxRatesSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rate-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxRules:
    post:
      tags:
        - taxTaxRuleRepositoryV1
      description: Save TaxRule
      operationId: PostV1TaxRules
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TaxRulesBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/tax-data-tax-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - taxTaxRuleRepositoryV1
      description: Save TaxRule
      operationId: PutV1TaxRules
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1TaxRulesBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/tax-data-tax-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxRules/{ruleId}:
    delete:
      tags:
        - taxTaxRuleRepositoryV1
      description: Delete TaxRule
      operationId: DeleteV1TaxRulesRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - taxTaxRuleRepositoryV1
      description: Get TaxRule
      operationId: GetV1TaxRulesRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxRules/search:
    get:
      tags:
        - taxTaxRuleRepositoryV1
      description: 'Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1TaxRulesSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-rule-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxClasses:
    post:
      tags:
        - taxTaxClassRepositoryV1
      description: Create a Tax Class
      operationId: PostV1TaxClasses
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1TaxClassesBody
          in: body
          schema:
            required:
              - taxClass
            properties:
              taxClass:
                $ref: '#/definitions/tax-data-tax-class-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: id for the newly created Tax class
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxClasses/{taxClassId}:
    get:
      tags:
        - taxTaxClassRepositoryV1
      description: >
        Get a tax class with the given tax class
        id.
      operationId: GetV1TaxClassesTaxClassId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: taxClassId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-class-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - taxTaxClassRepositoryV1
      description: >
        Delete a tax class with the given tax
        class id.
      operationId: DeleteV1TaxClassesTaxClassId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: taxClassId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: >
              True if the tax class was deleted, false
              otherwise
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxClasses/{classId}:
    put:
      tags:
        - taxTaxClassRepositoryV1
      description: Create a Tax Class
      operationId: PutV1TaxClassesClassId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: classId
          in: path
          type: string
          required: true
        -
          name: PutV1TaxClassesClassIdBody
          in: body
          schema:
            required:
              - taxClass
            properties:
              taxClass:
                $ref: '#/definitions/tax-data-tax-class-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: id for the newly created Tax class
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/taxClasses/search:
    get:
      tags:
        - taxTaxClassRepositoryV1
      description: 'Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.'
      operationId: GetV1TaxClassesSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/tax-data-tax-class-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bulk/{bulkUuid}/detailed-status:
    get:
      tags:
        - asynchronousOperationsBulkStatusV1
      description: >
        Get Bulk summary data with list of
        operations items full data.
      operationId: GetV1BulkBulkUuidDetailedstatus
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: bulkUuid
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/asynchronous-operations-data-detailed-bulk-operations-status-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bulk/{bulkUuid}/status:
    get:
      tags:
        - asynchronousOperationsBulkStatusV1
      description: >
        Get Bulk summary data with list of
        operations items short data.
      operationId: GetV1BulkBulkUuidStatus
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: bulkUuid
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/asynchronous-operations-data-bulk-operations-status-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bulk/{bulkUuid}/operation-status/{status}:
    get:
      tags:
        - asynchronousOperationsBulkStatusV1
      description: >
        Get operations count by bulk uuid and
        status.
      operationId: GetV1BulkBulkUuidOperationstatusStatus
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: bulkUuid
          in: path
          type: string
          required: true
        -
          name: status
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: integer
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bulk:
    get:
      tags:
        - >
          asynchronousOperationsOperationRepositoryV1
      description: >
        Lists the bulk operation items that
        match specified search criteria.
      operationId: GetV1Bulk
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/asynchronous-operations-data-operation-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_acart/blacklist/{id}:
    get:
      tags:
        - amastyAcartBlacklistRepositoryV1
      description: Get blacklist email by ID.
      operationId: GetV1Amasty_acartBlacklistId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-acart-data-blacklist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - amastyAcartBlacklistRepositoryV1
      description: Save blacklist email.
      operationId: PutV1Amasty_acartBlacklistId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: PutV1Amasty_acartBlacklistIdBody
          in: body
          schema:
            required:
              - blacklist
            properties:
              blacklist:
                $ref: '#/definitions/amasty-acart-data-blacklist-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-acart-data-blacklist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyAcartBlacklistRepositoryV1
      description: Delete blacklist email by ID.
      operationId: DeleteV1Amasty_acartBlacklistId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_acart/blacklist/getByCustomerEmail/{customerEmail}:
    get:
      tags:
        - amastyAcartBlacklistRepositoryV1
      description: Get blacklist email by customer email.
      operationId: >
        GetV1Amasty_acartBlacklistGetByCustomerEmailCustomerEmail
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerEmail
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-acart-data-blacklist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_acart/blacklist/all:
    get:
      tags:
        - amastyAcartBlacklistRepositoryV1
      description: Retrieve blacklisted emails.
      operationId: GetV1Amasty_acartBlacklistAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-acart-data-blacklist-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_acart/blacklist:
    post:
      tags:
        - amastyAcartBlacklistRepositoryV1
      description: Save blacklist email.
      operationId: PostV1Amasty_acartBlacklist
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_acartBlacklistBody
          in: body
          schema:
            required:
              - blacklist
            properties:
              blacklist:
                $ref: '#/definitions/amasty-acart-data-blacklist-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-acart-data-blacklist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amaigenerator/product/short_description:
    get:
      tags:
        - >
          amastyAiContentGeneratorEntityContentResolverV1
      description: ""
      operationId: >
        GetV1AmaigeneratorProductShort_description
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'aiRequest[entityId]'
          in: query
          type: integer
        -
          name: 'aiRequest[type]'
          in: query
          type: string
        -
          name: 'aiRequest[storeId]'
          in: query
          type: integer
        -
          name: 'aiRequest[customPrompt]'
          in: query
          type: string
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-openai-core-data-ai-response-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ambannerslite/banners/uploadFile:
    post:
      tags:
        - amastyBannersLiteUploadFileV1
      description: ""
      operationId: PostV1AmbannersliteBannersUploadFile
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmbannersliteBannersUploadFileBody
          in: body
          schema:
            required:
              - fileContent
            properties:
              fileContent:
                $ref: '#/definitions/amasty-banners-lite-data-file-content-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: tmp file name
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_gdpr/approveDeleteRequest:
    post:
      tags:
        - amastyGdprRequestV1
      description: ""
      operationId: PostV1Amasty_gdprApproveDeleteRequest
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1Amasty_gdprApproveDeleteRequestBody
          in: body
          schema:
            required:
              - customerId
            properties:
              customerId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_gdpr/denyDeleteRequest:
    post:
      tags:
        - amastyGdprRequestV1
      description: ""
      operationId: PostV1Amasty_gdprDenyDeleteRequest
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_gdprDenyDeleteRequestBody
          in: body
          schema:
            required:
              - customerId
              - comment
            properties:
              customerId:
                type: integer
              comment:
                type: string
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_gdpr/getUnprocessedRequests:
    get:
      tags:
        - amastyGdprRequestV1
      description: ""
      operationId: GetV1Amasty_gdprGetUnprocessedRequests
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/negotiable-carts/{cartId}/totals-information:
    post:
      tags:
        - >
          amastyConditionsNegotiableTotalsInformationManagementV1
      description: >
        Calculate quote totals based on address
        and shipping method.
      operationId: >
        PostV1NegotiablecartsCartIdTotalsinformation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
        -
          name: >
            PostV1NegotiablecartsCartIdTotalsinformationBody
          in: body
          schema:
            required:
              - addressInformation
            properties:
              addressInformation:
                $ref: '#/definitions/checkout-data-totals-information-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/multicoupons:
    get:
      tags:
        - amastyCouponsGetCouponsByCartIdV1
      description: >
        Return list of applied coupons in a
        specified cart.
      operationId: GetV1CartsCartIdMulticoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/multicoupons:
    get:
      tags:
        - amastyCouponsGetCouponsByCartIdV1
      description: >
        Return list of applied coupons in a
        specified cart.
      operationId: GetV1CartsMineMulticoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/multicoupons/apply:
    post:
      tags:
        - amastyCouponsApplyCouponsToCartV1
      description: >
        Try to apply list of coupons. Return
        lists of applied and failed coupons.
      operationId: PostV1CartsCartIdMulticouponsApply
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: integer
          required: true
          description: The cart ID.
        -
          name: PostV1CartsCartIdMulticouponsApplyBody
          in: body
          schema:
            required:
              - couponCodes
            properties:
              couponCodes:
                type: array
                description: The coupon code data.
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/multicoupons/apply:
    post:
      tags:
        - amastyCouponsApplyCouponsToCartV1
      description: >
        Try to apply list of coupons. Return
        lists of applied and failed coupons.
      operationId: PostV1CartsMineMulticouponsApply
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CartsMineMulticouponsApplyBody
          in: body
          schema:
            required:
              - couponCodes
            properties:
              couponCodes:
                type: array
                description: The coupon code data.
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/multicoupons/apply-to-cart:
    post:
      tags:
        - amastyCouponsApplyCouponsToCartV1
      description: >
        Try to apply list of coupons. Return
        lists of applied and failed coupons, and
        did quote items change
      operationId: PostV1CartsMineMulticouponsApplytocart
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1CartsMineMulticouponsApplytocartBody
          in: body
          schema:
            required:
              - couponCodes
            properties:
              couponCodes:
                type: array
                description: The coupon code data.
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-list-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/multicoupons:
    get:
      tags:
        - amastyCouponsGuestGetCouponsByCartIdV1
      description: >
        Return list of applied coupons in a
        specified cart.
      operationId: GetV1GuestcartsCartIdMulticoupons
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart mask ID.
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/multicoupons/apply:
    post:
      tags:
        - amastyCouponsApplyCouponsToGuestCartV1
      description: >
        Try to apply list of coupons. Return
        lists of applied and failed coupons.
      operationId: PostV1GuestcartsCartIdMulticouponsApply
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart mask ID.
        -
          name: >
            PostV1GuestcartsCartIdMulticouponsApplyBody
          in: body
          schema:
            required:
              - couponCodes
            properties:
              couponCodes:
                type: array
                description: The coupon code data.
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/guest-carts/{cartId}/multicoupons/apply-to-cart:
    post:
      tags:
        - amastyCouponsApplyCouponsToGuestCartV1
      description: >
        Try to apply list of coupons. Return
        lists of applied and failed coupons, and
        did quote items change
      operationId: >
        PostV1GuestcartsCartIdMulticouponsApplytocart
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
          description: The cart ID.
        -
          name: >
            PostV1GuestcartsCartIdMulticouponsApplytocartBody
          in: body
          schema:
            required:
              - couponCodes
            properties:
              couponCodes:
                type: array
                description: The coupon code data.
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-list-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amsearch:
    get:
      tags:
        - amastyXsearchSearchV1
      description: ""
      operationId: GetV1Amsearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: query
          in: query
          type: string
          required: true
        -
          name: storeId
          in: query
          type: integer
          required: true
        -
          name: currencyCode
          in: query
          type: string
          required: true
        -
          name: page
          in: query
          type: integer
          required: false
        -
          name: pageSize
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-xsearch-data-search-result-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/am_import_export/get_profile_runners/:
    get:
      tags:
        - >
          amastyImportExportCoreProfileProfileManagerV1
      description: ""
      operationId: GetV1Am_import_exportGet_profile_runners
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/am_import_export/check_profile_status/:
    post:
      tags:
        - >
          amastyImportExportCoreProfileProfileManagerV1
      description: ""
      operationId: >
        PostV1Am_import_exportCheck_profile_status
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1Am_import_exportCheck_profile_statusBody
          in: body
          schema:
            required:
              - type
              - identityId
            properties:
              type:
                type: string
              identityId:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-import-export-core-profile-run-profile-response-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/am_import_export/run_profile/:
    post:
      tags:
        - >
          amastyImportExportCoreProfileProfileManagerV1
      description: ""
      operationId: PostV1Am_import_exportRun_profile
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Am_import_exportRun_profileBody
          in: body
          schema:
            required:
              - type
              - profileId
            properties:
              type:
                type: string
              profileId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-import-export-core-profile-run-profile-response-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/question:
    post:
      tags:
        - amastyFaqQuestionRepositoryV1
      description: Save FAQ question
      operationId: PostV1Amasty_faqQuestion
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqQuestionBody
          in: body
          schema:
            required:
              - question
            properties:
              question:
                $ref: '#/definitions/amasty-faq-data-question-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-question-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyFaqQuestionRepositoryV1
      description: Get FAQ question by id
      operationId: GetV1Amasty_faqQuestion
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: questionId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-question-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/question/{questionId}:
    put:
      tags:
        - amastyFaqQuestionRepositoryV1
      description: Save FAQ question
      operationId: PutV1Amasty_faqQuestionQuestionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: questionId
          in: path
          type: string
          required: true
        -
          name: PutV1Amasty_faqQuestionQuestionIdBody
          in: body
          schema:
            required:
              - question
            properties:
              question:
                $ref: '#/definitions/amasty-faq-data-question-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-question-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyFaqQuestionRepositoryV1
      description: Delete FAQ question by id
      operationId: DeleteV1Amasty_faqQuestionQuestionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: questionId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/question/all:
    get:
      tags:
        - amastyFaqQuestionRepositoryV1
      description: Get FAQ questions list
      operationId: GetV1Amasty_faqQuestionAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-question-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/category:
    post:
      tags:
        - amastyFaqCategoryRepositoryV1
      description: Save FAQ category
      operationId: PostV1Amasty_faqCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqCategoryBody
          in: body
          schema:
            required:
              - category
            properties:
              category:
                $ref: '#/definitions/amasty-faq-data-category-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-category-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyFaqCategoryRepositoryV1
      description: Get FAQ category by id
      operationId: GetV1Amasty_faqCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-category-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/category/{categoryId}:
    put:
      tags:
        - amastyFaqCategoryRepositoryV1
      description: Save FAQ category
      operationId: PutV1Amasty_faqCategoryCategoryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: string
          required: true
        -
          name: PutV1Amasty_faqCategoryCategoryIdBody
          in: body
          schema:
            required:
              - category
            properties:
              category:
                $ref: '#/definitions/amasty-faq-data-category-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-category-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyFaqCategoryRepositoryV1
      description: Delete FAQ category by id
      operationId: DeleteV1Amasty_faqCategoryCategoryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/category/all:
    get:
      tags:
        - amastyFaqCategoryRepositoryV1
      description: Get FAQ categories list
      operationId: GetV1Amasty_faqCategoryAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-category-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/tag:
    post:
      tags:
        - amastyFaqTagRepositoryV1
      description: Save FAQ tag
      operationId: PostV1Amasty_faqTag
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqTagBody
          in: body
          schema:
            required:
              - tag
            properties:
              tag:
                $ref: '#/definitions/amasty-faq-data-tag-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-tag-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyFaqTagRepositoryV1
      description: Get FAQ tag by id
      operationId: GetV1Amasty_faqTag
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: tagId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-tag-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/tag/{tagId}:
    put:
      tags:
        - amastyFaqTagRepositoryV1
      description: Save FAQ tag
      operationId: PutV1Amasty_faqTagTagId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: tagId
          in: path
          type: string
          required: true
        -
          name: PutV1Amasty_faqTagTagIdBody
          in: body
          schema:
            required:
              - tag
            properties:
              tag:
                $ref: '#/definitions/amasty-faq-data-tag-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-tag-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyFaqTagRepositoryV1
      description: Delete FAQ tag by id
      operationId: DeleteV1Amasty_faqTagTagId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: tagId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/tag/all:
    get:
      tags:
        - amastyFaqTagRepositoryV1
      description: Get FAQ tags list
      operationId: GetV1Amasty_faqTagAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-faq-data-tag-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbyBase/filterSetting:
    post:
      tags:
        - >
          amastyShopbyBaseDataFilterSettingRepositoryV1
      description: ""
      operationId: PostV1Amasty_shopbyBaseFilterSetting
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_shopbyBaseFilterSettingBody
          in: body
          schema:
            required:
              - filterSetting
            properties:
              filterSetting:
                $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - >
          amastyShopbyBaseDataFilterSettingRepositoryV1
      description: ""
      operationId: GetV1Amasty_shopbyBaseFilterSetting
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbyBase/filterSetting/{id}:
    put:
      tags:
        - >
          amastyShopbyBaseDataFilterSettingRepositoryV1
      description: ""
      operationId: PutV1Amasty_shopbyBaseFilterSettingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: >
            PutV1Amasty_shopbyBaseFilterSettingIdBody
          in: body
          schema:
            required:
              - filterSetting
            properties:
              filterSetting:
                $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbyBase/filterSetting/{attributeCode}:
    delete:
      tags:
        - >
          amastyShopbyBaseDataFilterSettingRepositoryV1
      description: ""
      operationId: >
        DeleteV1Amasty_shopbyBaseFilterSettingAttributeCode
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: attributeCode
          in: path
          type: string
          required: true
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbyBase/filterSetting/all:
    get:
      tags:
        - >
          amastyShopbyBaseDataFilterSettingRepositoryV1
      description: ""
      operationId: GetV1Amasty_shopbyBaseFilterSettingAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-base-data-filter-setting-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist:
    post:
      tags:
        - amastyMWishlistWishlistRepositoryV1
      description: Save
      operationId: PostV1Amasty_mWishlistWishlist
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_mWishlistWishlistBody
          in: body
          schema:
            required:
              - wishlist
            properties:
              wishlist:
                $ref: '#/definitions/amasty-mwishlist-data-wishlist-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-mwishlist-data-wishlist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyMWishlistWishlistRepositoryV1
      description: Get by id
      operationId: GetV1Amasty_mWishlistWishlist
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-mwishlist-data-wishlist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist/{wishlistId}:
    put:
      tags:
        - amastyMWishlistWishlistRepositoryV1
      description: Save
      operationId: PutV1Amasty_mWishlistWishlistWishlistId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: wishlistId
          in: path
          type: string
          required: true
        -
          name: >
            PutV1Amasty_mWishlistWishlistWishlistIdBody
          in: body
          schema:
            required:
              - wishlist
            properties:
              wishlist:
                $ref: '#/definitions/amasty-mwishlist-data-wishlist-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-mwishlist-data-wishlist-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyMWishlistWishlistRepositoryV1
      description: Delete by id
      operationId: >
        DeleteV1Amasty_mWishlistWishlistWishlistId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: wishlistId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist/all:
    get:
      tags:
        - amastyMWishlistWishlistRepositoryV1
      description: Lists
      operationId: GetV1Amasty_mWishlistWishlistAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-mwishlist-data-wishlist-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist/{wishlistId}/add_product:
    post:
      tags:
        - amastyMWishlistWishlistRepositoryV1
      description: ""
      operationId: >
        PostV1Amasty_mWishlistWishlistWishlistIdAdd_product
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: wishlistId
          in: path
          type: integer
          required: true
        -
          name: >
            PostV1Amasty_mWishlistWishlistWishlistIdAdd_productBody
          in: body
          schema:
            required:
              - wishlistItems
            properties:
              wishlistItems:
                type: array
                items:
                  $ref: '#/definitions/amasty-mwishlist-data-wishlist-item-data-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist/{wishlistId}/remove_item/{itemId}:
    delete:
      tags:
        - amastyMWishlistWishlistItemRepositoryV1
      description: ""
      operationId: >
        DeleteV1Amasty_mWishlistWishlistWishlistIdRemove_itemItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: wishlistId
          in: path
          type: integer
          required: true
        -
          name: itemId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist/move_product_to_cart/{itemId}:
    post:
      tags:
        - amastyMWishlistWishlistItemRepositoryV1
      description: ""
      operationId: >
        PostV1Amasty_mWishlistWishlistMove_product_to_cartItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: itemId
          in: path
          type: integer
          required: true
        -
          name: >
            PostV1Amasty_mWishlistWishlistMove_product_to_cartItemIdBody
          in: body
          schema:
            required:
              - wishlistId
            properties:
              wishlistId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_mWishlist/wishlist/move_product_from_cart/{cartItemId}:
    post:
      tags:
        - amastyMWishlistWishlistItemRepositoryV1
      description: ""
      operationId: >
        PostV1Amasty_mWishlistWishlistMove_product_from_cartCartItemId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartItemId
          in: path
          type: integer
          required: true
        -
          name: >
            PostV1Amasty_mWishlistWishlistMove_product_from_cartCartItemIdBody
          in: body
          schema:
            required:
              - wishlistId
            properties:
              wishlistId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastyMoveToArchive:
    post:
      tags:
        - amastyOrderarchiveArchiveProcessorV1
      description: 'Operation moves orders and order-related entities to archive tables amastyorderarchive%. Operation affect all the entities associated with the order: invoice, credit memos, shipping if they exist for order.'
      operationId: PostV1AmastyMoveToArchive
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmastyMoveToArchiveBody
          in: body
          schema:
            required:
              - orderIds
            properties:
              orderIds:
                type: array
                items:
                  type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-orderarchive-data-archive-affected-ids-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastyMoveFromArchive:
    post:
      tags:
        - amastyOrderarchiveArchiveProcessorV1
      description: 'Operation moves orders and order-related entities from archive tables “amastyorderarchive%”. Operation affect all the entities associated with the order: invoice, credit memos, shipping if they exist for order.'
      operationId: PostV1AmastyMoveFromArchive
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmastyMoveFromArchiveBody
          in: body
          schema:
            required:
              - orderIds
            properties:
              orderIds:
                type: array
                items:
                  type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-orderarchive-data-archive-affected-ids-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastyRemovePermanently:
    post:
      tags:
        - amastyOrderarchiveArchiveProcessorV1
      description: >
        Completely removes orders and related
        data from the database without the
        possibility of their recovery.
      operationId: PostV1AmastyRemovePermanently
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmastyRemovePermanentlyBody
          in: body
          schema:
            required:
              - orderIds
            properties:
              orderIds:
                type: array
                items:
                  type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-orderarchive-data-archive-affected-ids-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_reports/rule:
    post:
      tags:
        - amastyReportsRuleRepositoryV1
      description: Save
      operationId: PostV1Amasty_reportsRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_reportsRuleBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/amasty-reports-data-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-reports-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyReportsRuleRepositoryV1
      description: Get by id
      operationId: GetV1Amasty_reportsRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: entityId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-reports-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_reports/rule/{entityId}:
    put:
      tags:
        - amastyReportsRuleRepositoryV1
      description: Save
      operationId: PutV1Amasty_reportsRuleEntityId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: entityId
          in: path
          type: string
          required: true
        -
          name: PutV1Amasty_reportsRuleEntityIdBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/amasty-reports-data-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-reports-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyReportsRuleRepositoryV1
      description: Delete by id
      operationId: DeleteV1Amasty_reportsRuleEntityId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: entityId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_reports/rule/all:
    get:
      tags:
        - amastyReportsRuleRepositoryV1
      description: Lists
      operationId: GetV1Amasty_reportsRuleAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/framework-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/points/{points}:
    put:
      tags:
        - amastyRewardsCheckoutRewardsManagementV1
      description: >
        Adds a reward points to a specified
        cart.
      operationId: PutV1CartsMinePointsPoints
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: points
          in: path
          type: number
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/mine/points/delete:
    delete:
      tags:
        - amastyRewardsCheckoutRewardsManagementV1
      description: Deletes a points from a specified cart.
      operationId: DeleteV1CartsMinePointsDelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/mine/highlight/product:
    post:
      tags:
        - >
          amastyRewardsCatalogHighlightManagementV1
      description: For product page only.
      operationId: PostV1RewardsMineHighlightProduct
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1RewardsMineHighlightProductBody
          in: body
          schema:
            required:
              - productId
            properties:
              productId:
                type: integer
              attributes:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-highlight-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/mine/highlight/category:
    post:
      tags:
        - >
          amastyRewardsCatalogHighlightManagementV1
      description: For category page only.
      operationId: PostV1RewardsMineHighlightCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1RewardsMineHighlightCategoryBody
          in: body
          schema:
            required:
              - productId
            properties:
              productId:
                type: integer
              attributes:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-highlight-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/mine/guest-highlight/product:
    post:
      tags:
        - amastyRewardsGuestHighlightManagementV1
      description: ""
      operationId: PostV1RewardsMineGuesthighlightProduct
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1RewardsMineGuesthighlightProductBody
          in: body
          schema:
            required:
              - page
            properties:
              page:
                type: integer
              productId:
                type: integer
              attributes:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-highlight-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/mine/highlight/checkout:
    get:
      tags:
        - >
          amastyRewardsCheckoutHighlightManagementV1
      description: ""
      operationId: GetV1RewardsMineHighlightCheckout
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-highlight-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/mine/balance:
    get:
      tags:
        - amastyRewardsCustomerBalanceRepositoryV1
      description: ""
      operationId: GetV1RewardsMineBalance
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: number
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/mine/history:
    get:
      tags:
        - amastyRewardsRewardsRepositoryV1
      description: ""
      operationId: GetV1RewardsMineHistory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: limit
          in: query
          type: integer
          required: false
        -
          name: page
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-rewards-data-rewards-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/history:
    post:
      tags:
        - amastyRewardsRewardsRepositoryV1
      description: ""
      operationId: PostV1RewardsManagementHistory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1RewardsManagementHistoryBody
          in: body
          schema:
            required:
              - id
            properties:
              id:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-rewards-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/history/{customerId}:
    post:
      tags:
        - amastyRewardsRewardsRepositoryV1
      description: ""
      operationId: PostV1RewardsManagementHistoryCustomerId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
        -
          name: >
            PostV1RewardsManagementHistoryCustomerIdBody
          in: body
          schema:
            properties:
              limit:
                type: integer
              page:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-rewards-data-rewards-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/points/rule:
    post:
      tags:
        - amastyRewardsRewardsProviderV1
      description: >
        Function to add rewards points to
        customer account by his ID according to
        Rewards Rule. Argument $amount should be
        greater than zero or null. If
        $amount/$comment is null, the value will
        be taken from the $rule.
      operationId: PostV1RewardsManagementPointsRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1RewardsManagementPointsRuleBody
          in: body
          schema:
            required:
              - rule
              - customerId
              - storeId
            properties:
              rule:
                $ref: '#/definitions/amasty-rewards-data-rule-interface'
              customerId:
                type: integer
              storeId:
                type: integer
              amount:
                type: integer
              comment:
                type: string
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/points/add-reward-points:
    post:
      tags:
        - amastyRewardsRewardsProviderV1
      description: ""
      operationId: >
        PostV1RewardsManagementPointsAddrewardpoints
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1RewardsManagementPointsAddrewardpointsBody
          in: body
          schema:
            required:
              - modelRewards
            properties:
              modelRewards:
                $ref: '#/definitions/amasty-rewards-data-rewards-interface'
              storeId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/points/deduct-reward-points:
    post:
      tags:
        - amastyRewardsRewardsProviderV1
      description: ""
      operationId: >
        PostV1RewardsManagementPointsDeductrewardpoints
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1RewardsManagementPointsDeductrewardpointsBody
          in: body
          schema:
            required:
              - modelRewards
            properties:
              modelRewards:
                $ref: '#/definitions/amasty-rewards-data-rewards-interface'
            type: object
            xml:
              name: request
      responses:
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/rule:
    post:
      tags:
        - amastyRewardsRuleRepositoryV1
      description: ""
      operationId: PostV1RewardsManagementRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1RewardsManagementRuleBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/amasty-rewards-data-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyRewardsRuleRepositoryV1
      description: ""
      operationId: GetV1RewardsManagementRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/rule/{ruleId}:
    put:
      tags:
        - amastyRewardsRuleRepositoryV1
      description: ""
      operationId: PutV1RewardsManagementRuleRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: string
          required: true
        -
          name: PutV1RewardsManagementRuleRuleIdBody
          in: body
          schema:
            required:
              - rule
            properties:
              rule:
                $ref: '#/definitions/amasty-rewards-data-rule-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-rewards-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyRewardsRuleRepositoryV1
      description: ""
      operationId: DeleteV1RewardsManagementRuleRuleId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ruleId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/rewards/management/rule/all:
    post:
      tags:
        - amastyRewardsRuleRepositoryV1
      description: ""
      operationId: PostV1RewardsManagementRuleAll
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1RewardsManagementRuleAllBody
          in: body
          schema:
            required:
              - action
              - websiteId
              - customerGroupId
            properties:
              action:
                type: string
              websiteId:
                type: integer
              customerGroupId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/amasty-rewards-data-rule-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbypage/page:
    post:
      tags:
        - amastyShopbyPagePageRepositoryV1
      description: ""
      operationId: PostV1Amasty_shopbypagePage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_shopbypagePageBody
          in: body
          schema:
            required:
              - pageData
            properties:
              pageData:
                $ref: '#/definitions/amasty-shopby-page-data-page-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-page-data-page-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - amastyShopbyPagePageRepositoryV1
      description: ""
      operationId: GetV1Amasty_shopbypagePage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-page-data-page-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbypage/page/{pageId}:
    put:
      tags:
        - amastyShopbyPagePageRepositoryV1
      description: ""
      operationId: PutV1Amasty_shopbypagePagePageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: pageId
          in: path
          type: string
          required: true
        -
          name: PutV1Amasty_shopbypagePagePageIdBody
          in: body
          schema:
            required:
              - pageData
            properties:
              pageData:
                $ref: '#/definitions/amasty-shopby-page-data-page-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-page-data-page-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - amastyShopbyPagePageRepositoryV1
      description: ""
      operationId: DeleteV1Amasty_shopbypagePagePageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: pageId
          in: path
          type: string
          required: true
        -
          name: DeleteV1Amasty_shopbypagePagePageIdBody
          in: body
          schema:
            required:
              - id
            properties:
              id:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_shopbypage/page/list:
    get:
      tags:
        - amastyShopbyPagePageRepositoryV1
      description: ""
      operationId: GetV1Amasty_shopbypagePageList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: query
          type: integer
          required: true
        -
          name: storeId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/amasty-shopby-page-data-page-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-apiwebsitedatasync/productdata:
    post:
      tags:
        - >
          biotusAPIWebsiteDataSyncProductDataManagementV1
      description: POST for ProductData api
      operationId: >
        PostV1BiotusapiwebsitedatasyncProductdata
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusapiwebsitedatasyncProductdataBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-apiwebsitedatasync/productcategories:
    post:
      tags:
        - >
          biotusAPIWebsiteDataSyncProductDataManagementV1
      description: POST for ProductCategories api
      operationId: >
        PostV1BiotusapiwebsitedatasyncProductcategories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusapiwebsitedatasyncProductcategoriesBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-apiwebsitedatasync/getinfoattributes:
    get:
      tags:
        - >
          biotusAPIWebsiteDataSyncGetInfoAttributesManagementV1
      description: GET for getInfoAttributes api
      operationId: >
        GetV1BiotusapiwebsitedatasyncGetinfoattributes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/answer/vote:
    post:
      tags:
        - biotusAmastyFaqAnswerV1
      description: ""
      operationId: PostV1Amasty_faqAnswerVote
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqAnswerVoteBody
          in: body
          schema:
            required:
              - answerId
              - type
            properties:
              answerId:
                type: string
              type:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/answer/add:
    post:
      tags:
        - biotusAmastyFaqAnswerV1
      description: ""
      operationId: PostV1Amasty_faqAnswerAdd
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqAnswerAddBody
          in: body
          schema:
            required:
              - storeId
              - questionId
              - answer
              - name
              - email
              - isLoggedIn
            properties:
              storeId:
                type: string
              questionId:
                type: string
              answer:
                type: string
              name:
                type: string
              email:
                type: string
              isLoggedIn:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/answer/votes:
    post:
      tags:
        - biotusAmastyFaqAnswerV1
      description: ""
      operationId: PostV1Amasty_faqAnswerVotes
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqAnswerVotesBody
          in: body
          schema:
            required:
              - answerIds
            properties:
              answerIds:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/question/add:
    post:
      tags:
        - biotusAmastyFaqQuestionV1
      description: ""
      operationId: PostV1Amasty_faqQuestionAdd
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Amasty_faqQuestionAddBody
          in: body
          schema:
            required:
              - email
              - title
              - productId
              - storeId
            properties:
              email:
                type: string
              title:
                type: string
              productId:
                type: string
              storeId:
                type: string
              name:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_faq/questions/items/{productId}/{storeId}:
    get:
      tags:
        - biotusAmastyFaqQuestionV1
      description: ""
      operationId: >
        GetV1Amasty_faqQuestionsItemsProductIdStoreId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productId
          in: path
          type: integer
          required: true
        -
          name: storeId
          in: path
          type: integer
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customer/questions:
    get:
      tags:
        - biotusAmastyFaqCustomerQuestionsV1
      description: ""
      operationId: GetV1CustomerQuestions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: currentPage
          in: query
          type: integer
          required: false
        -
          name: pageSize
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/page/support:
    get:
      tags:
        - biotusAmastyFaqSupportV1
      description: ""
      operationId: GetV1PageSupport
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amasty_gdpr/account/delete:
    get:
      tags:
        - biotusAmastyGdprAccountV1
      description: ""
      operationId: GetV1Amasty_gdprAccountDelete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customer/program/loyalty:
    get:
      tags:
        - >
          biotusAmastyGroupAssignCustomerProgramsV1
      description: ""
      operationId: GetV1CustomerProgramLoyalty
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-catalog/updatemanagerbonuses:
    post:
      tags:
        - >
          biotusCatalogUpdateManagerBonusesManagementV1
      description: POST for updateManagerBonuses api
      operationId: PostV1BiotuscatalogUpdatemanagerbonuses
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotuscatalogUpdatemanagerbonusesBody
          in: body
          schema:
            required:
              - products
            properties:
              products:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-multiflatrates/upd-warehouses:
    post:
      tags:
        - >
          biotusCatalogUpdateWarehousesManagementV1
      description: POST for postUpdateWarehouses api
      operationId: PostV1BiotusmultiflatratesUpdwarehouses
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusmultiflatratesUpdwarehousesBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: string
              all:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/catalog/category/filters:
    get:
      tags:
        - biotusCatalogCategoryFiltersV1
      description: ""
      operationId: GetV1CatalogCategoryFilters
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/catalog/category/sort:
    get:
      tags:
        - biotusCatalogCategorySortByV1
      description: ""
      operationId: GetV1CatalogCategorySort
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/catalog/promotion:
    get:
      tags:
        - biotusCatalogPromotionV1
      description: ""
      operationId: GetV1CatalogPromotion
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-catalog/loadprices:
    post:
      tags:
        - biotusCatalogLoadPricesManagementV1
      description: POST for loadPrices api
      operationId: PostV1BiotuscatalogLoadprices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotuscatalogLoadpricesBody
          in: body
          schema:
            required:
              - product_ids
              - store_code
            properties:
              product_ids:
                type: array
                items:
                  type: string
              store_code:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/1c/products/price:
    post:
      tags:
        - biotusCatalogProductPriceV1
      description: ""
      operationId: PostV11cProductsPrice
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/category/products/{categoryId}:
    get:
      tags:
        - biotusCatalogCategoryV1
      description: ""
      operationId: GetV1CategoryProductsCategoryId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: categoryId
          in: path
          type: string
          required: true
        -
          name: 'searchCriteria[requestName]'
          in: query
          type: string
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/brands:
    get:
      tags:
        - biotusAmastyShopbyBrandBrandsV1
      description: ""
      operationId: GetV1Brands
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-amastysociallogin/createsocialloginaccesstoken:
    post:
      tags:
        - >
          biotusAmastySocialLoginCreateSocialLoginAccessTokenManagementV1
      description: >
        POST for createSocialLoginAccessToken
        api
      operationId: >
        PostV1BiotusamastysocialloginCreatesocialloginaccesstoken
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusamastysocialloginCreatesocialloginaccesstokenBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
            description: result
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastysociallogin/link:
    post:
      tags:
        - biotusAmastySocialLoginAccountV1
      description: ""
      operationId: PostV1AmastysocialloginLink
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmastysocialloginLinkBody
          in: body
          schema:
            required:
              - type
              - token
            properties:
              type:
                type: string
              token:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastysociallogin/unlink:
    post:
      tags:
        - biotusAmastySocialLoginAccountV1
      description: ""
      operationId: PostV1AmastysocialloginUnlink
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmastysocialloginUnlinkBody
          in: body
          schema:
            required:
              - type
            properties:
              type:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastysociallogin/list:
    get:
      tags:
        - biotusAmastySocialLoginAccountV1
      description: ""
      operationId: GetV1AmastysocialloginList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/amastysociallogin/login:
    post:
      tags:
        - biotusAmastySocialLoginLoginV1
      description: ""
      operationId: PostV1AmastysocialloginLogin
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmastysocialloginLoginBody
          in: body
          schema:
            required:
              - type
              - token
            properties:
              type:
                type: string
              token:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/xsearch/popular:
    get:
      tags:
        - biotusAmastyXsearchPopularV1
      description: ""
      operationId: GetV1XsearchPopular
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/xsearch/search:
    get:
      tags:
        - biotusAmastyXsearchSearchV1
      description: ""
      operationId: GetV1XsearchSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: query
          in: query
          type: string
          required: true
        -
          name: isProductListing
          in: query
          type: boolean
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-sales/orderpayments:
    post:
      tags:
        - biotusAnalyticsPaymentOrderV1
      description: ""
      operationId: PostV1BiotussalesOrderpayments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bestsellers/items/{storeId}:
    get:
      tags:
        - biotusBestsellerBestsellersV1
      description: ""
      operationId: GetV1BestsellersItemsStoreId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-blog/posts:
    post:
      tags:
        - biotusBlogPostsManagementV1
      description: POST for Posts api
      operationId: PostV1BiotusblogPosts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusblogPostsBody
          in: body
          schema:
            properties:
              store_id:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/brands/popular:
    get:
      tags:
        - biotusBrandsPopularV1
      description: ""
      operationId: GetV1BrandsPopular
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ammostviewed/bundle/{sku}:
    get:
      tags:
        - biotusAmastyMostviewedProductBundleV1
      description: ""
      operationId: GetV1AmmostviewedBundleSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ammostviewed/bundle/add:
    post:
      tags:
        - biotusAmastyMostviewedProductBundleV1
      description: ""
      operationId: PostV1AmmostviewedBundleAdd
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmmostviewedBundleAddBody
          in: body
          schema:
            required:
              - packId
              - quoteId
              - relatedProducts
            properties:
              packId:
                type: string
              quoteId:
                type: string
              relatedProducts:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ammostviewed/bundle/remove:
    post:
      tags:
        - biotusAmastyMostviewedProductBundleV1
      description: ""
      operationId: PostV1AmmostviewedBundleRemove
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmmostviewedBundleRemoveBody
          in: body
          schema:
            required:
              - packId
              - quoteId
            properties:
              packId:
                type: string
              quoteId:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ammostviewed/bundle/update:
    post:
      tags:
        - biotusAmastyMostviewedProductBundleV1
      description: ""
      operationId: PostV1AmmostviewedBundleUpdate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AmmostviewedBundleUpdateBody
          in: body
          schema:
            required:
              - packId
              - quoteId
              - qty
            properties:
              packId:
                type: string
              quoteId:
                type: string
              qty:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-checkout/isaccount:
    get:
      tags:
        - biotusCheckoutIsAccountManagementV1
      description: GET for isAccount api
      operationId: GetV1BiotuscheckoutIsaccount
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: data
          in: query
          type: array
          items:
            type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-checkout/isaccountemail:
    get:
      tags:
        - biotusCheckoutIsAccountManagementV1
      description: GET for isAccountByEmail api
      operationId: GetV1BiotuscheckoutIsaccountemail
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: data
          in: query
          type: array
          items:
            type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-checkout/config:
    get:
      tags:
        - biotusCheckoutCheckoutConfigManagementV1
      description: GET for CheckoutConfig api
      operationId: GetV1BiotuscheckoutConfig
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/page/delivery/{storeId}:
    get:
      tags:
        - biotusCmsDeliveryV1
      description: ""
      operationId: GetV1PageDeliveryStoreId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-comments/flush-reviews-order:
    get:
      tags:
        - >
          biotusCommentsFlushReviewsOrderManagementV1
      description: GET for flushReviewsOrder api
      operationId: GetV1BiotuscommentsFlushreviewsorder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: action
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/consultation/appointment:
    post:
      tags:
        - >
          biotusConsultationConsultationManagementV1
      description: ""
      operationId: PostV1ConsultationAppointment
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ConsultationAppointmentBody
          in: body
          schema:
            required:
              - appointment
            properties:
              appointment:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/contacts/activity:
    post:
      tags:
        - biotusEsputnikContactsV1
      description: ""
      operationId: PostV1ContactsActivity
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ContactsActivityBody
          in: body
          schema:
            required:
              - dateFrom
              - dateTo
            properties:
              dateFrom:
                type: string
              dateTo:
                type: string
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/contacts/messages:
    post:
      tags:
        - biotusEsputnikContactsV1
      description: ""
      operationId: PostV1ContactsMessages
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ContactsMessagesBody
          in: body
          schema:
            required:
              - dateFrom
              - dateTo
            properties:
              dateFrom:
                type: string
              dateTo:
                type: string
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/messages/mobilepush:
    post:
      tags:
        - biotusEsputnikMessagesV1
      description: ""
      operationId: PostV1MessagesMobilepush
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1MessagesMobilepushBody
          in: body
          schema:
            properties:
              parameters:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-disease/disease:
    post:
      tags:
        - biotusDiseaseDiseaseManagementV1
      description: GET for disease api
      operationId: PostV1BiotusdiseaseDisease
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusdiseaseDiseaseBody
          in: body
          schema:
            required:
              - catId
              - storeId
            properties:
              catId:
                type: array
                items:
                  type: string
              storeId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-gender/genderchange:
    post:
      tags:
        - biotusGenderGenderChangeManagementV1
      description: POST for GenderChange api
      operationId: PostV1BiotusgenderGenderchange
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusgenderGenderchangeBody
          in: body
          schema:
            required:
              - gender
            properties:
              gender:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-shipping/loadprice:
    post:
      tags:
        - biotusShippingLoadPriceManagementV1
      description: GET for loadPrice api
      operationId: PostV1BiotusshippingLoadprice
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusshippingLoadpriceBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-shipping-data-product-shipping-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/shipping/addresses:
    post:
      tags:
        - biotusShippingAddressesV1
      description: ""
      operationId: PostV1ShippingAddresses
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ShippingAddressesBody
          in: body
          schema:
            required:
              - carrierCode
            properties:
              carrierCode:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellers/me:
    get:
      tags:
        - lofMarketPlaceSellersRepositoryV1
      description: ""
      operationId: GetV1SellersMe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/saveprofile/me:
    put:
      tags:
        - lofMarketPlaceSellersRepositoryV1
      description: ""
      operationId: PutV1SaveprofileMe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SaveprofileMeBody
          in: body
          schema:
            required:
              - seller
            properties:
              seller:
                $ref: '#/definitions/lof-market-place-data-seller-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellers:
    put:
      tags:
        - lofMarketPlaceSellersRepositoryV1
      description: ""
      operationId: PutV1Sellers
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SellersBody
          in: body
          schema:
            required:
              - seller
            properties:
              seller:
                $ref: '#/definitions/lof-market-place-data-seller-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - lofMarketPlaceSellersManagementV1
      description: >
        Retrieve Sellers matching the specified
        criteria.
      operationId: GetV1Sellers
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-sellers-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/register:
    post:
      tags:
        - lofMarketPlaceSellersRepositoryV1
      description: ""
      operationId: PostV1SellerRegister
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1SellerRegisterBody
          in: body
          schema:
            required:
              - customer
              - data
            properties:
              customer:
                $ref: '#/definitions/customer-data-customer-interface'
              data:
                $ref: '#/definitions/lof-market-place-data-register-seller-interface'
              password:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/becomeSeller:
    post:
      tags:
        - lofMarketPlaceSellersRepositoryV1
      description: ""
      operationId: PostV1SellerBecomeSeller
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1SellerBecomeSellerBody
          in: body
          schema:
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/lof-market-place-data-register-seller-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/getsellerorders:
    get:
      tags:
        - lofMarketPlaceSalesRepositoryV1
      description: GET seller order
      operationId: GetV1Getsellerorders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerordersbyid/{id}:
    get:
      tags:
        - lofMarketPlaceSalesRepositoryV1
      description: GET seller order by id
      operationId: GetV1SellerordersbyidId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerorders/{orderId}/cancel:
    get:
      tags:
        - lofMarketPlaceSalesRepositoryV1
      description: GET order cancel
      operationId: GetV1SellerordersOrderIdCancel
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/createorder/{orderId}:
    post:
      tags:
        - lofMarketPlaceSalesRepositoryV1
      description: POST create Seller Order
      operationId: PostV1SellerCreateorderOrderId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerinvoices:
    get:
      tags:
        - lofMarketPlaceSalesInvoicesRepositoryV1
      description: GET seller invoice
      operationId: GetV1Sellerinvoices
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerinvoices/{InvoiceId}:
    get:
      tags:
        - lofMarketPlaceSalesInvoicesRepositoryV1
      description: GET seller invoice by id
      operationId: GetV1SellerinvoicesInvoiceId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: invoiceId
          in: query
          type: integer
          required: true
        -
          name: InvoiceId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/myRatings:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Seller Ratings matching the
        specified criteria.
      operationId: GetV1SellerMyRatings
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/myRatings/{ratingId}:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Seller Ratings matching the
        specified criteria.
      operationId: GetV1SellerMyRatingsRatingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: Save Rating
      operationId: PutV1SellerMyRatingsRatingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: string
          required: true
        -
          name: PutV1SellerMyRatingsRatingIdBody
          in: body
          schema:
            required:
              - rating
            properties:
              rating:
                $ref: '#/definitions/lof-market-place-data-rating-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerRatings/{ratingId}:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Seller Ratings matching the
        specified criteria.
      operationId: GetV1SellerRatingsRatingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: Save Rating
      operationId: PutV1SellerRatingsRatingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: string
          required: true
        -
          name: PutV1SellerRatingsRatingIdBody
          in: body
          schema:
            required:
              - rating
            properties:
              rating:
                $ref: '#/definitions/lof-market-place-data-rating-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: Delete Rating by ID
      operationId: DeleteV1SellerRatingsRatingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerRatings/search:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Message matching the specified
        criteria.
      operationId: GetV1SellerRatingsSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/{sellerUrl}/ratings:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Seller Review matching the
        specified criteria.
      operationId: GetV1SellerSellerUrlRatings
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
          description: '- the url key of seller. ex: sellerA'
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-search-results-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - >
          lofMarketPlaceSubmitSellerReviewRepositoryV1
      description: ""
      operationId: PostV1SellerSellerUrlRatings
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
        -
          name: PostV1SellerSellerUrlRatingsBody
          in: body
          schema:
            required:
              - rating
            properties:
              rating:
                $ref: '#/definitions/lof-market-place-data-submit-seller-review-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/{sellerUrl}/summaryRatings:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Seller Review matching the
        specified criteria.
      operationId: GetV1SellerSellerUrlSummaryRatings
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
          description: '- the url key of seller. ex: sellerA'
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-summary-rating-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/ratings/{ratingId}:
    get:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: >
        Retrieve Seller Ratings matching the
        specified criteria.
      operationId: GetV1SellerRatingsRatingId1
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceSellerRatingsRepositoryV1
      description: Plus/Minus/Report Rating
      operationId: PutV1SellerRatingsRatingId1
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: ratingId
          in: path
          type: integer
          required: true
        -
          name: PutV1SellerRatingsRatingIdBody
          in: body
          schema:
            required:
              - type
            properties:
              type:
                type: string
                description: '(accept value: plus|minus|report)'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-rating-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/messages:
    get:
      tags:
        - lofMarketPlaceSellerMessageRepositoryV1
      description: ""
      operationId: GetV1SellerMessages
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/messages/{messageId}:
    get:
      tags:
        - lofMarketPlaceSellerMessageRepositoryV1
      description: ""
      operationId: GetV1SellerMessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceSellerMessageRepositoryV1
      description: reply Message
      operationId: PutV1SellerMessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: PutV1SellerMessagesMessageIdBody
          in: body
          schema:
            required:
              - message
            properties:
              message:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-detail-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - lofMarketPlaceSellerMessageRepositoryV1
      description: seller delete Message
      operationId: DeleteV1SellerMessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/isReadMessage/{messageId}:
    put:
      tags:
        - lofMarketPlaceMessageRepositoryV1
      description: ""
      operationId: PutV1SellerIsReadMessageMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: PutV1SellerIsReadMessageMessageIdBody
          in: body
          schema:
            properties:
              status:
                type: string
                description: '- available status: sent, read, unread, draft'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/adminmessages:
    get:
      tags:
        - lofMarketPlaceAdminMessageRepositoryV1
      description: ""
      operationId: GetV1SellerAdminmessages
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-admin-message-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - lofMarketPlaceAdminMessageRepositoryV1
      description: send message to admin
      operationId: PostV1SellerAdminmessages
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1SellerAdminmessagesBody
          in: body
          schema:
            required:
              - subject
              - message
            properties:
              subject:
                type: string
              message:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-admin-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/adminmessages/{messageId}:
    get:
      tags:
        - lofMarketPlaceAdminMessageRepositoryV1
      description: get message admin details by id
      operationId: GetV1SellerAdminmessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-detail-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceAdminMessageRepositoryV1
      description: reply Message Admin
      operationId: PutV1SellerAdminmessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: PutV1SellerAdminmessagesMessageIdBody
          in: body
          schema:
            required:
              - message
            properties:
              message:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-detail-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/isReadAdminMessage/{messageId}:
    put:
      tags:
        - lofMarketPlaceAdminMessageRepositoryV1
      description: ""
      operationId: PutV1SellerIsReadAdminMessageMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: >
            PutV1SellerIsReadAdminMessageMessageIdBody
          in: body
          schema:
            properties:
              status:
                type: string
                description: '- available status: sent, read, unread, draft'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-admin-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerproduct/updateStock:
    put:
      tags:
        - lofMarketPlaceUpdateStockRepositoryV1
      description: 'Update stock qty, require fields: product_id, qty, is_in_stock'
      operationId: PutV1SellerproductUpdateStock
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SellerproductUpdateStockBody
          in: body
          schema:
            required:
              - product
            properties:
              product:
                $ref: '#/definitions/lof-market-place-data-product-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerproduct/updatePrice:
    put:
      tags:
        - lofMarketPlaceUpdateStockRepositoryV1
      description: 'Update product price, require fields: product_id, price'
      operationId: PutV1SellerproductUpdatePrice
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SellerproductUpdatePriceBody
          in: body
          schema:
            required:
              - product
            properties:
              product:
                $ref: '#/definitions/lof-market-place-data-product-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/setting:
    post:
      tags:
        - lofMarketPlaceSettingRepositoryV1
      description: Save Setting
      operationId: PostV1SellerSetting
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1SellerSettingBody
          in: body
          schema:
            required:
              - setting
            properties:
              setting:
                $ref: '#/definitions/lof-market-place-data-setting-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-setting-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/setting/search:
    get:
      tags:
        - lofMarketPlaceSettingRepositoryV1
      description: >
        Retrieve Setting matching the specified
        criteria.
      operationId: GetV1SellerSettingSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-setting-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/setting/{settingId}:
    get:
      tags:
        - lofMarketPlaceSettingRepositoryV1
      description: Retrieve Setting
      operationId: GetV1SellerSettingSettingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: settingId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-setting-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceSettingRepositoryV1
      description: Save Setting
      operationId: PutV1SellerSettingSettingId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: settingId
          in: path
          type: string
          required: true
        -
          name: PutV1SellerSettingSettingIdBody
          in: body
          schema:
            required:
              - setting
            properties:
              setting:
                $ref: '#/definitions/lof-market-place-data-setting-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-setting-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/createproduct:
    post:
      tags:
        - lofMarketPlaceSellerProductV1
      description: Create product
      operationId: PostV1Createproduct
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1CreateproductBody
          in: body
          schema:
            required:
              - product
            properties:
              product:
                $ref: '#/definitions/catalog-data-product-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/assignproducts/{productId}/{storeId}/{sellerId}:
    post:
      tags:
        - lofMarketPlaceSellerProductV1
      description: assign product.
      operationId: >
        PostV1AssignproductsProductIdStoreIdSellerId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productId
          in: path
          type: integer
          required: true
        -
          name: storeId
          in: path
          type: integer
          required: true
        -
          name: sellerId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1AssignproductsProductIdStoreIdSellerIdBody
          in: body
          schema:
            required:
              - customerId
            properties:
              customerId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/setcommission/{productId}/{commission}/{seller_id}:
    post:
      tags:
        - lofMarketPlaceSellerProductV1
      description: ""
      operationId: >
        PostV1SetcommissionProductIdCommissionSeller_id
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productId
          in: path
          type: integer
          required: true
        -
          name: commission
          in: path
          type: string
          required: true
        -
          name: seller_id
          in: path
          type: string
          required: true
        -
          name: >
            PostV1SetcommissionProductIdCommissionSeller_idBody
          in: body
          schema:
            required:
              - sellerId
            properties:
              sellerId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerproduct/{sku}:
    put:
      tags:
        - lofMarketPlaceSellerProductManagementV1
      description: Create product
      operationId: PutV1SellerproductSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: PutV1SellerproductSkuBody
          in: body
          schema:
            required:
              - product
            properties:
              product:
                $ref: '#/definitions/catalog-data-product-interface'
              saveOptions:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    get:
      tags:
        - lofMarketPlaceSellerProductManagementV1
      description: Get info about product by product SKU
      operationId: GetV1SellerproductSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: editMode
          in: query
          type: boolean
          required: false
        -
          name: storeId
          in: query
          type: integer
          required: false
        -
          name: forceReload
          in: query
          type: boolean
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellerproducts:
    get:
      tags:
        - lofMarketPlaceSellerProductManagementV1
      description: Get seller product list
      operationId: GetV1Sellerproducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/transactions:
    get:
      tags:
        - >
          lofMarketPlaceAmountTransactionRepositoryV1
      description: GET seller transactions
      operationId: GetV1SellerTransactions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-amount-transaction-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/amounttransaction:
    post:
      tags:
        - >
          lofMarketPlaceAmountTransactionRepositoryV1
      description: Save AmountTransaction
      operationId: PostV1LofmarketplaceAmounttransaction
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1LofmarketplaceAmounttransactionBody
          in: body
          schema:
            required:
              - amountTransaction
            properties:
              amountTransaction:
                $ref: '#/definitions/lof-market-place-data-amount-transaction-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-amount-transaction-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/amounttransaction/search:
    get:
      tags:
        - >
          lofMarketPlaceAmountTransactionRepositoryV1
      description: >
        Retrieve AmountTransaction matching the
        specified criteria.
      operationId: >
        GetV1LofmarketplaceAmounttransactionSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-amount-transaction-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/amounttransaction/{id}:
    get:
      tags:
        - >
          lofMarketPlaceAmountTransactionRepositoryV1
      description: Retrieve AmountTransaction
      operationId: GetV1LofmarketplaceAmounttransactionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-amount-transaction-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - >
          lofMarketPlaceAmountTransactionRepositoryV1
      description: Save AmountTransaction
      operationId: PutV1LofmarketplaceAmounttransactionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: string
          required: true
        -
          name: >
            PutV1LofmarketplaceAmounttransactionIdBody
          in: body
          schema:
            required:
              - amountTransaction
            properties:
              amountTransaction:
                $ref: '#/definitions/lof-market-place-data-amount-transaction-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-amount-transaction-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - >
          lofMarketPlaceAmountTransactionRepositoryV1
      description: Delete AmountTransaction by ID
      operationId: >
        DeleteV1LofmarketplaceAmounttransactionId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellervacation:
    get:
      tags:
        - lofMarketPlaceSellerVacationRepositoryV1
      description: Retrieve Vacation of logged in customer
      operationId: GetV1Sellervacation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-vacation-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceSellerVacationRepositoryV1
      description: PUT Vacation
      operationId: PutV1Sellervacation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SellervacationBody
          in: body
          schema:
            required:
              - vacation
            properties:
              vacation:
                $ref: '#/definitions/lof-market-place-data-seller-vacation-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-vacation-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/{sellerUrl}/vacation:
    get:
      tags:
        - lofMarketPlaceSellerVacationRepositoryV1
      description: 'GET seller vacation - the url key of seller. ex: sellerA'
      operationId: GetV1SellerSellerUrlVacation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-vacation-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/groups:
    get:
      tags:
        - lofMarketPlaceSellerGroupRepositoryV1
      description: >
        Retrieve Seller Group matching the
        specified criteria.
      operationId: GetV1LofmarketplaceGroups
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-group-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/group/{entityId}:
    get:
      tags:
        - lofMarketPlaceSellerGroupRepositoryV1
      description: Retrieve Seller Group
      operationId: GetV1LofmarketplaceGroupEntityId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: entityId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-group-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - lofMarketPlaceSellerGroupRepositoryV1
      description: Delete Seller Group by ID
      operationId: DeleteV1LofmarketplaceGroupEntityId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: entityId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/groups:
    get:
      tags:
        - lofMarketPlaceSellerGroupRepositoryV1
      description: >
        Retrieve Seller Group matching the
        specified criteria.
      operationId: GetV1SellerGroups
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-group-search-results-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellers/{sellerId}:
    get:
      tags:
        - lofMarketPlaceSellersManagementV1
      description: Retrieve SellerInterface
      operationId: GetV1SellersSellerId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellers/changeStatus:
    put:
      tags:
        - lofMarketPlaceSellersManagementV1
      description: 'Update Seller Status: Approved, UnApproved'
      operationId: PutV1SellersChangeStatus
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SellersChangeStatusBody
          in: body
          schema:
            required:
              - sellerId
              - status
            properties:
              sellerId:
                type: integer
              status:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/sellers/verify:
    put:
      tags:
        - lofMarketPlaceSellersManagementV1
      description: Verify Seller
      operationId: PutV1SellersVerify
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PutV1SellersVerifyBody
          in: body
          schema:
            required:
              - sellerId
              - status
            properties:
              sellerId:
                type: integer
              status:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/withdrawal:
    post:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: Save Withdrawal
      operationId: PostV1LofmarketplaceWithdrawal
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1LofmarketplaceWithdrawalBody
          in: body
          schema:
            required:
              - withdrawal
            properties:
              withdrawal:
                $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/withdrawal:
    post:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: Request Withdrawal
      operationId: PostV1SellerWithdrawal
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1SellerWithdrawalBody
          in: body
          schema:
            required:
              - withdrawal
            properties:
              withdrawal:
                $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/withdrawal/search:
    get:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: >
        Retrieve Withdrawal matching the
        specified criteria.
      operationId: GetV1LofmarketplaceWithdrawalSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-withdrawal-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/withdrawal/search:
    get:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: >
        Retrieve Withdrawal matching the
        specified criteria.
      operationId: GetV1SellerWithdrawalSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-withdrawal-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/withdrawal/{withdrawalId}:
    get:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: Retrieve Withdrawal
      operationId: >
        GetV1LofmarketplaceWithdrawalWithdrawalId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: withdrawalId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: Save Withdrawal
      operationId: >
        PutV1LofmarketplaceWithdrawalWithdrawalId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: withdrawalId
          in: path
          type: string
          required: true
        -
          name: >
            PutV1LofmarketplaceWithdrawalWithdrawalIdBody
          in: body
          schema:
            required:
              - withdrawal
            properties:
              withdrawal:
                $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - lofMarketPlaceWithdrawalRepositoryV1
      description: Delete Withdrawal by ID
      operationId: >
        DeleteV1LofmarketplaceWithdrawalWithdrawalId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: withdrawalId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/llofmarketplace/payment:
    post:
      tags:
        - lofMarketPlacePaymentRepositoryV1
      description: Save Payment
      operationId: PostV1LlofmarketplacePayment
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1LlofmarketplacePaymentBody
          in: body
          schema:
            required:
              - payment
            properties:
              payment:
                $ref: '#/definitions/lof-market-place-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-payment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/payment/search:
    get:
      tags:
        - lofMarketPlacePaymentRepositoryV1
      description: >
        Retrieve Payment matching the specified
        criteria.
      operationId: GetV1LofmarketplacePaymentSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-payment-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/payment/search:
    get:
      tags:
        - lofMarketPlacePaymentRepositoryV1
      description: >
        Retrieve Payment matching the specified
        criteria.
      operationId: GetV1SellerPaymentSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-payment-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/lofmarketplace/payment/{paymentId}:
    get:
      tags:
        - lofMarketPlacePaymentRepositoryV1
      description: Retrieve Payment
      operationId: GetV1LofmarketplacePaymentPaymentId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: paymentId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-payment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    put:
      tags:
        - lofMarketPlacePaymentRepositoryV1
      description: Save Payment
      operationId: PutV1LofmarketplacePaymentPaymentId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: paymentId
          in: path
          type: string
          required: true
        -
          name: PutV1LofmarketplacePaymentPaymentIdBody
          in: body
          schema:
            required:
              - payment
            properties:
              payment:
                $ref: '#/definitions/lof-market-place-data-payment-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-payment-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - lofMarketPlacePaymentRepositoryV1
      description: Delete Payment by ID
      operationId: DeleteV1LofmarketplacePaymentPaymentId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: paymentId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
            description: true on success
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/products/{sellerUrl}:
    get:
      tags:
        - lofMarketPlaceSellerProductsRepositoryV1
      description: GET seller product by seller url key
      operationId: GetV1SellerProductsSellerUrl
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
          description: '- sellerUrl key - ex: sellerA'
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/catalog-data-product-search-results-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/products:
    get:
      tags:
        - lofMarketPlaceSellerProductsRepositoryV1
      description: >
        Retrieve seller matching the specified
        criteria.
      operationId: GetV1SellerProducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-product-search-results-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/search:
    get:
      tags:
        - >
          lofMarketPlaceSellersFrontendRepositoryV1
      description: ""
      operationId: GetV1SellerSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
        -
          name: showOtherInfo
          in: query
          type: boolean
          required: false
        -
          name: getProducts
          in: query
          type: boolean
          description: '- option to show seller products'
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-sellers-search-results-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/{sellerUrl}:
    get:
      tags:
        - >
          lofMarketPlaceSellersFrontendRepositoryV1
      description: get seller by url key
      operationId: GetV1SellerSellerUrl
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
          description: '- the url key of seller. ex: sellerA'
        -
          name: showOtherInfo
          in: query
          type: boolean
          description: '- option to show other information of this seller'
          required: false
        -
          name: getProducts
          in: query
          type: boolean
          description: '- option to show seller products'
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/getSellerInfoBySku/{sku}:
    get:
      tags:
        - >
          lofMarketPlaceSellersFrontendRepositoryV1
      description: get seller info by product sku
      operationId: GetV1SellerGetSellerInfoBySkuSku
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sku
          in: path
          type: string
          required: true
        -
          name: storeId
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-seller-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/seller/{sellerUrl}/reviews:
    get:
      tags:
        - lofMarketPlaceSellerReviewRepositoryV1
      description: >
        Retrieve Seller Review matching the
        specified criteria.
      operationId: GetV1SellerSellerUrlReviews
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
          description: '- the url key of seller. ex: sellerA'
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-review-search-results-interface'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/me/sendmessage/{sellerUrl}:
    post:
      tags:
        - >
          lofMarketPlaceCustomerMessageRepositoryV1
      description: ""
      operationId: PostV1MeSendmessageSellerUrl
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: sellerUrl
          in: path
          type: string
          required: true
        -
          name: PostV1MeSendmessageSellerUrlBody
          in: body
          schema:
            required:
              - subject
              - content
            properties:
              subject:
                type: string
              content:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/me/sellermessages:
    get:
      tags:
        - >
          lofMarketPlaceCustomerMessageRepositoryV1
      description: ""
      operationId: GetV1MeSellermessages
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/me/sellermessages/{messageId}:
    get:
      tags:
        - >
          lofMarketPlaceCustomerMessageRepositoryV1
      description: ""
      operationId: GetV1MeSellermessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    post:
      tags:
        - >
          lofMarketPlaceCustomerMessageRepositoryV1
      description: reply Message
      operationId: PostV1MeSellermessagesMessageId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: messageId
          in: path
          type: integer
          required: true
        -
          name: PostV1MeSellermessagesMessageIdBody
          in: body
          schema:
            required:
              - message
            properties:
              message:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/lof-market-place-data-message-detail-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-sms/smspickup:
    post:
      tags:
        - biotusSmsSmsManagementV1
      description: POST for smsPickup api
      operationId: PostV1BiotussmsSmspickup
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotussmsSmspickupBody
          in: body
          schema:
            required:
              - sms
            properties:
              sms:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-sales/paymentorder:
    post:
      tags:
        - biotusSalesPaymentOrderManagementV1
      description: POST for paymentOrder api
      operationId: PostV1BiotussalesPaymentorder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotussalesPaymentorderBody
          in: body
          schema:
            required:
              - payment
            properties:
              payment:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customer/orders:
    get:
      tags:
        - biotusSalesCustomerOrdersV1
      description: ""
      operationId: GetV1CustomerOrders
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: pageSize
          in: query
          type: integer
          required: false
        -
          name: currentPage
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customer/order/reorder/{orderId}:
    get:
      tags:
        - biotusSalesCustomerOrdersV1
      description: ""
      operationId: GetV1CustomerOrderReorderOrderId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/1c/categories:
    post:
      tags:
        - biotusSalesManagement1cV1
      description: ""
      operationId: PostV11cCategories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/1c/products/discount:
    post:
      tags:
        - biotusSalesManagement1cV1
      description: ""
      operationId: PostV11cProductsDiscount
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/order/wayforpay:
    post:
      tags:
        - biotusSalesWayForPayV1
      description: ""
      operationId: PostV1OrderWayforpay
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1OrderWayforpayBody
          in: body
          schema:
            required:
              - orderId
            properties:
              orderId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/order/ttn/{orderId}:
    get:
      tags:
        - biotusSalesOrderV1
      description: ""
      operationId: GetV1OrderTtnOrderId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/requisites/{orderId}:
    get:
      tags:
        - biotusSalesRequisiteV1
      description: ""
      operationId: GetV1RequisitesOrderId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-marketplacesplitorder/shippingestimate:
    post:
      tags:
        - >
          biotusMarketplaceSplitOrderShippingEstimateManagementV1
      description: POST for shippingEstimate api
      operationId: >
        PostV1BiotusmarketplacesplitorderShippingestimate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusmarketplacesplitorderShippingestimateBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-marketplace-split-order-data-totals-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-marketplacesplitorder/getitems:
    post:
      tags:
        - >
          biotusMarketplaceSplitOrderGetItemsManagementV1
      description: GET for postGetItemsSeller api
      operationId: >
        PostV1BiotusmarketplacesplitorderGetitems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusmarketplacesplitorderGetitemsBody
          in: body
          schema:
            required:
              - cartId
              - isGuest
              - sellerId
            properties:
              cartId:
                type: string
              isGuest:
                type: boolean
              sellerId:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/our_stores/list:
    get:
      tags:
        - biotusMultiflatratesStoreV1
      description: ""
      operationId: GetV1Our_storesList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/our_stores/{storeId}:
    get:
      tags:
        - biotusMultiflatratesStoreV1
      description: ""
      operationId: GetV1Our_storesStoreId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-notification/flush:
    post:
      tags:
        - biotusNotificationFlushManagementV1
      description: POST for flush api
      operationId: PostV1BiotusnotificationFlush
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusnotificationFlushBody
          in: body
          schema:
            required:
              - action
            properties:
              action:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ordersync/import:
    post:
      tags:
        - biotusOrderSyncOrderImportServiceV1
      description: ""
      operationId: PostV1OrdersyncImport
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1OrdersyncImportBody
          in: body
          schema:
            required:
              - order
            properties:
              order:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ordersync/update:
    post:
      tags:
        - biotusOrderSyncOrderUpdateServiceV1
      description: ""
      operationId: PostV1OrdersyncUpdate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1OrdersyncUpdateBody
          in: body
          schema:
            required:
              - order
            properties:
              order:
                $ref: '#/definitions/biotus-order-sync-data-order-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-parser/getdataparser:
    post:
      tags:
        - biotusParserGetDataParserManagementV1
      description: POST for getDataParser api
      operationId: PostV1BiotusparserGetdataparser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusparserGetdataparserBody
          in: body
          schema:
            required:
              - data
            properties:
              data:
                type: string
              truncate:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-promorule/applyproductsrule:
    post:
      tags:
        - >
          biotusPromoRuleApplyProductsRuleManagementV1
      description: POST for ApplyProductsRule api
      operationId: PostV1BiotuspromoruleApplyproductsrule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotuspromoruleApplyproductsruleBody
          in: body
          schema:
            required:
              - proccess
            properties:
              proccess:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-puritanapi/getinfoproducts:
    post:
      tags:
        - >
          biotusPuritanApiGetInfoProductsManagementV1
      description: POST for getInfoProducts api
      operationId: PostV1BiotuspuritanapiGetinfoproducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotuspuritanapiGetinfoproductsBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-customer/confirmphone:
    post:
      tags:
        - biotusCustomerConfirmPhoneManagementV1
      description: POST for confirmPhone api
      operationId: PostV1BiotuscustomerConfirmphone
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotuscustomerConfirmphoneBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-customer/authenticate:
    post:
      tags:
        - biotusCustomerAuthenticationManagementV1
      description: POST for authentication api
      operationId: PostV1BiotuscustomerAuthenticate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotuscustomerAuthenticateBody
          in: body
          schema:
            required:
              - customer
            properties:
              customer:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/login/telephone:
    post:
      tags:
        - biotusCustomerAuthenticationManagementV1
      description: ""
      operationId: PostV1LoginTelephone
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1LoginTelephoneBody
          in: body
          schema:
            required:
              - phoneNumber
            properties:
              phoneNumber:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/login/telephone/confirmation:
    post:
      tags:
        - biotusCustomerAuthenticationManagementV1
      description: ""
      operationId: PostV1LoginTelephoneConfirmation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1LoginTelephoneConfirmationBody
          in: body
          schema:
            required:
              - phoneNumber
              - code
            properties:
              phoneNumber:
                type: string
              code:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/newsletter/subscribe:
    post:
      tags:
        - biotusCustomerNewsletterV1
      description: ""
      operationId: PostV1NewsletterSubscribe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1NewsletterSubscribeBody
          in: body
          schema:
            required:
              - storeId
              - options
            properties:
              storeId:
                type: integer
              options:
                $ref: '#/definitions/biotus-customer-data-subscription-options-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/newsletter/unsubscribe:
    post:
      tags:
        - biotusCustomerNewsletterV1
      description: ""
      operationId: PostV1NewsletterUnsubscribe
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1NewsletterUnsubscribeBody
          in: body
          schema:
            required:
              - storeId
            properties:
              storeId:
                type: integer
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/newsletter/list:
    get:
      tags:
        - biotusCustomerNewsletterV1
      description: ""
      operationId: GetV1NewsletterList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: storeId
          in: query
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/account/forgotpassword:
    post:
      tags:
        - biotusCustomerPasswordManagementV1
      description: ""
      operationId: PostV1AccountForgotpassword
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1AccountForgotpasswordBody
          in: body
          schema:
            required:
              - value
            properties:
              value:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customer/program/bonus:
    get:
      tags:
        - biotusRewardsCustomerProgramsV1
      description: ""
      operationId: GetV1CustomerProgramBonus
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-reviews/removeVideo:
    post:
      tags:
        - biotusReviewsVideoManagementV1
      description: POST for removeVideo api
      operationId: PostV1BiotusreviewsRemoveVideo
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusreviewsRemoveVideoBody
          in: body
          schema:
            required:
              - video_id
            properties:
              video_id:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-reviews/getVideo:
    post:
      tags:
        - biotusReviewsVideoManagementV1
      description: POST for getVideoById api
      operationId: PostV1BiotusreviewsGetVideo
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusreviewsGetVideoBody
          in: body
          schema:
            required:
              - video_id
            properties:
              video_id:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-reviews-data-videos-interface'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-reviews/checkstatusvideo:
    get:
      tags:
        - biotusReviewsVideoManagementV1
      description: GET for checkStatusVideo api
      operationId: GetV1BiotusreviewsCheckstatusvideo
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: url
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-reviews/reviews:
    post:
      tags:
        - biotusReviewsReviewImagesManagementV1
      description: POST for ReviewImages api
      operationId: PostV1BiotusreviewsReviews
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusreviewsReviewsBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/review/add:
    post:
      tags:
        - biotusReviewsReviewV1
      description: ""
      operationId: PostV1ReviewAdd
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ReviewAddBody
          in: body
          schema:
            required:
              - productId
              - name
              - rating
              - feedback
              - storeId
              - isRecommended
            properties:
              productId:
                type: integer
              name:
                type: string
              rating:
                type: integer
              feedback:
                type: string
              storeId:
                type: integer
              isRecommended:
                type: boolean
              ratingId:
                type: integer
              orderId:
                type: string
              customerId:
                type: integer
              video:
                type: string
              images:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/review/vote:
    post:
      tags:
        - biotusReviewsReviewV1
      description: ""
      operationId: PostV1ReviewVote
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ReviewVoteBody
          in: body
          schema:
            required:
              - reviewId
              - type
            properties:
              reviewId:
                type: integer
              type:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/reviews/list/{productId}/{storeId}:
    get:
      tags:
        - biotusReviewsReviewV1
      description: ""
      operationId: GetV1ReviewsListProductIdStoreId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: productId
          in: path
          type: integer
          required: true
        -
          name: storeId
          in: path
          type: integer
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customer/reviews:
    get:
      tags:
        - biotusReviewsCustomerReviewsV1
      description: ""
      operationId: GetV1CustomerReviews
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: currentPage
          in: query
          type: integer
          required: false
        -
          name: pageSize
          in: query
          type: integer
          required: false
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/ref-program/withdraw:
    post:
      tags:
        - biotusRefProgramV1
      description: ""
      operationId: PostV1RefprogramWithdraw
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/referral/check:
    post:
      tags:
        - biotusRefProgramOfflineStoresV1
      description: ""
      operationId: PostV1ReferralCheck
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ReferralCheckBody
          in: body
          schema:
            required:
              - code
            properties:
              code:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/referral/register-sale:
    post:
      tags:
        - biotusRefProgramOfflineStoresV1
      description: ""
      operationId: PostV1ReferralRegistersale
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ReferralRegistersaleBody
          in: body
          schema:
            required:
              - code
              - skus
              - amount
              - transactionId
              - externalId
            properties:
              code:
                type: string
              skus:
                type: array
                items:
                  type: string
              amount:
                type: number
              transactionId:
                type: string
              externalId:
                type: string
              purchaseTime:
                type: string
              storeId:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/referral/unregister-sale:
    post:
      tags:
        - biotusRefProgramOfflineStoresV1
      description: ""
      operationId: PostV1ReferralUnregistersale
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1ReferralUnregistersaleBody
          in: body
          schema:
            required:
              - externalId
              - code
            properties:
              externalId:
                type: string
              code:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/slider:
    get:
      tags:
        - biotusSliderV1
      description: ""
      operationId: GetV1Slider
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/searchcustomer:
    post:
      tags:
        - >
          biotusQuickOfflineOrderSearchCustomerManagementV1
      description: POST for searchCustomer api
      operationId: >
        PostV1BiotusquickofflineorderSearchcustomer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderSearchcustomerBody
          in: body
          schema:
            required:
              - query
            properties:
              query:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/discount:
    post:
      tags:
        - >
          biotusQuickOfflineOrderSearchCustomerManagementV1
      description: POST for discountOfCustomer api
      operationId: PostV1BiotusquickofflineorderDiscount
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderDiscountBody
          in: body
          schema:
            required:
              - telephone
            properties:
              telephone:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/discountChannel:
    post:
      tags:
        - >
          biotusQuickOfflineOrderSearchCustomerManagementV1
      description: >
        POST for postDiscountOfCustomerChannel
        api
      operationId: >
        PostV1BiotusquickofflineorderDiscountChannel
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderDiscountChannelBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/searchproducts:
    post:
      tags:
        - >
          biotusQuickOfflineOrderSearchProductsManagementV1
      description: POST for searchProducts api
      operationId: >
        PostV1BiotusquickofflineorderSearchproducts
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderSearchproductsBody
          in: body
          schema:
            required:
              - barcodes
            properties:
              barcodes:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/calculatediscount:
    post:
      tags:
        - >
          biotusQuickOfflineOrderProcessOrderManagementV1
      description: POST for calculateDiscount api
      operationId: >
        PostV1BiotusquickofflineorderCalculatediscount
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderCalculatediscountBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/createOrder:
    post:
      tags:
        - >
          biotusQuickOfflineOrderProcessOrderManagementV1
      description: POST for createOrder api
      operationId: PostV1BiotusquickofflineorderCreateOrder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderCreateOrderBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-quickofflineorder/createOrderBy1c:
    post:
      tags:
        - >
          biotusQuickOfflineOrderProcessOrderManagementV1
      description: POST for postCreateOrderBy1c api
      operationId: >
        PostV1BiotusquickofflineorderCreateOrderBy1c
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusquickofflineorderCreateOrderBy1cBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/promo:
    get:
      tags:
        - biotusTelegramTelegramPromoRepositoryV1
      description: ""
      operationId: GetV1TelegramPromo
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/biotus-telegram-data-telegram-promo-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/products/action:
    get:
      tags:
        - >
          biotusTelegramTelegramProductsRepositoryV1
      description: ""
      operationId: GetV1TelegramProductsAction
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/biotus-telegram-data-telegram-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/products/sale:
    get:
      tags:
        - >
          biotusTelegramTelegramProductsRepositoryV1
      description: ""
      operationId: GetV1TelegramProductsSale
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/biotus-telegram-data-telegram-product-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/products/search:
    get:
      tags:
        - >
          biotusTelegramTelegramProductsRepositoryV1
      description: ""
      operationId: GetV1TelegramProductsSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-product-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/products/action/search:
    get:
      tags:
        - >
          biotusTelegramTelegramProductsRepositoryV1
      description: ""
      operationId: GetV1TelegramProductsActionSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-product-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/products/sale/search:
    get:
      tags:
        - >
          biotusTelegramTelegramProductsRepositoryV1
      description: ""
      operationId: GetV1TelegramProductsSaleSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-product-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/customer:
    get:
      tags:
        - >
          biotusTelegramTelegramCustomerRepositoryV1
      description: ""
      operationId: GetV1TelegramCustomer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: telephone
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/customer/{customerId}/addresses:
    get:
      tags:
        - >
          biotusTelegramTelegramCustomerAddressRepositoryV1
      description: ""
      operationId: GetV1TelegramCustomerCustomerIdAddresses
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/biotus-telegram-data-telegram-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/customer/{customerId}/addresses/{addressId}:
    get:
      tags:
        - >
          biotusTelegramTelegramCustomerAddressRepositoryV1
      description: ""
      operationId: >
        GetV1TelegramCustomerCustomerIdAddressesAddressId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
        -
          name: addressId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-address-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
    delete:
      tags:
        - >
          biotusTelegramTelegramCustomerAddressRepositoryV1
      description: ""
      operationId: >
        DeleteV1TelegramCustomerCustomerIdAddressesAddressId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
        -
          name: addressId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/customer/{customerId}/address:
    post:
      tags:
        - >
          biotusTelegramTelegramCustomerAddressRepositoryV1
      description: ""
      operationId: PostV1TelegramCustomerCustomerIdAddress
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
        -
          name: >
            PostV1TelegramCustomerCustomerIdAddressBody
          in: body
          schema:
            required:
              - address
            properties:
              address:
                $ref: '#/definitions/biotus-telegram-data-telegram-address-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        500:
          description: Internal Server error
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/customer/{customerId}/reward:
    get:
      tags:
        - >
          biotusTelegramTelegramRewardsRepositoryV1
      description: ""
      operationId: GetV1TelegramCustomerCustomerIdReward
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-reward-balance-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/orders/telephone:
    get:
      tags:
        - biotusTelegramTelegramOrderRepositoryV1
      description: ""
      operationId: GetV1TelegramOrdersTelephone
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: telephone
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/biotus-telegram-data-telegram-order-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/orders/customer:
    get:
      tags:
        - biotusTelegramTelegramOrderRepositoryV1
      description: ""
      operationId: GetV1TelegramOrdersCustomer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: query
          type: string
          required: true
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/biotus-telegram-data-telegram-order-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/orders/{customerId}/search:
    get:
      tags:
        - biotusTelegramTelegramOrderRepositoryV1
      description: ""
      operationId: GetV1TelegramOrdersCustomerIdSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: customerId
          in: path
          type: integer
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-order-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/telegram/orders/telephone/search:
    get:
      tags:
        - biotusTelegramTelegramOrderRepositoryV1
      description: ""
      operationId: GetV1TelegramOrdersTelephoneSearch
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: telephone
          in: query
          type: string
          required: true
        -
          name: 'searchCriteria[filterGroups][0][filters][0][field]'
          in: query
          type: string
          description: Field
        -
          name: 'searchCriteria[filterGroups][0][filters][0][value]'
          in: query
          type: string
          description: Value
        -
          name: 'searchCriteria[filterGroups][0][filters][0][conditionType]'
          in: query
          type: string
          description: Condition type
        -
          name: 'searchCriteria[sortOrders][0][field]'
          in: query
          type: string
          description: Sorting field.
        -
          name: 'searchCriteria[sortOrders][0][direction]'
          in: query
          type: string
          description: Sorting direction.
        -
          name: 'searchCriteria[pageSize]'
          in: query
          type: integer
          description: Page size.
        -
          name: 'searchCriteria[currentPage]'
          in: query
          type: integer
          description: Current page.
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/biotus-telegram-data-telegram-order-search-results-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-stock/biotusstock:
    post:
      tags:
        - biotusStockBiotusStockManagementV1
      description: POST for BiotusStock api
      operationId: PostV1BiotusstockBiotusstock
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusstockBiotusstockBody
          in: body
          schema:
            required:
              - stock
            properties:
              stock:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-upc/update:
    post:
      tags:
        - biotusStockUpcUpdateManagementV1
      description: POST for UpcUpdate api
      operationId: PostV1BiotusupcUpdate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusupcUpdateBody
          in: body
          schema:
            required:
              - upc
            properties:
              upc:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-stock/massstockupdate:
    post:
      tags:
        - biotusStockMassStockUpdateManagementV1
      description: POST for MassStockUpdate api
      operationId: PostV1BiotusstockMassstockupdate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusstockMassstockupdateBody
          in: body
          schema:
            required:
              - stock
            properties:
              stock:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-stock/multistock:
    post:
      tags:
        - biotusStockMultiStockManagementV1
      description: POST for multiStock api
      operationId: PostV1BiotusstockMultistock
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusstockMultistockBody
          in: body
          schema:
            required:
              - stock
            properties:
              stock:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bio/guest-carts/{cartId}/amcheckoutFields:
    post:
      tags:
        - biotusV2checkoutSaveManagementV1
      description: ""
      operationId: >
        PostV1BioGuestcartsCartIdAmcheckoutFields
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: >
            PostV1BioGuestcartsCartIdAmcheckoutFieldsBody
          in: body
          schema:
            required:
              - fields
            properties:
              fields:
                $ref: '#/definitions/biotus-v2checkout-data-additional-fields-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/bio/carts/mine/amcheckoutFields:
    post:
      tags:
        - biotusV2checkoutSaveManagementV1
      description: ""
      operationId: PostV1BioCartsMineAmcheckoutFields
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BioCartsMineAmcheckoutFieldsBody
          in: body
          schema:
            required:
              - fields
            properties:
              fields:
                $ref: '#/definitions/biotus-v2checkout-data-additional-fields-interface'
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-v2checkout/requestapilog:
    post:
      tags:
        - >
          biotusV2checkoutRequestApiLogManagementV1
      description: POST for requestApiLog api
      operationId: PostV1Biotusv2checkoutRequestapilog
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Biotusv2checkoutRequestapilogBody
          in: body
          schema:
            required:
              - params
            properties:
              params:
                type: array
                items:
                  type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-v2checkout/getitems:
    post:
      tags:
        - biotusV2checkoutGetItemsManagementV1
      description: GET for postGetItems api
      operationId: PostV1Biotusv2checkoutGetitems
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1Biotusv2checkoutGetitemsBody
          in: body
          schema:
            required:
              - cartId
              - isGuest
            properties:
              cartId:
                type: string
              isGuest:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: array
            items:
              type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-orderstatus/extendperiodorder:
    post:
      tags:
        - >
          biotusOrderStatusExtendPeriodOrderManagementV1
      description: POST for ExtendPeriodOrder api
      operationId: PostV1BiotusorderstatusExtendperiodorder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: >
            PostV1BiotusorderstatusExtendperiodorderBody
          in: body
          schema:
            required:
              - number
            properties:
              number:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/biotus-orderstatus/changestatus:
    post:
      tags:
        - >
          biotusOrderStatusChangeStatusManagementV1
      description: POST for changeStatus api
      operationId: PostV1BiotusorderstatusChangestatus
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1BiotusorderstatusChangestatusBody
          in: body
          schema:
            required:
              - orders
            properties:
              orders:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/customers/me/cancel-order/{orderId}:
    put:
      tags:
        - >
          hyvaOrderCancellationWebapiOrderCancellationV1
      description: ""
      operationId: PutV1CustomersMeCancelorderOrderId
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: orderId
          in: path
          type: integer
          required: true
        -
          name: PutV1CustomersMeCancelorderOrderIdBody
          in: body
          schema:
            required:
              - reason
            properties:
              reason:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            $ref: '#/definitions/hyva-order-cancellation-webapi-data-order-cancellation-success-interface'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/error-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/mageworx-ordereditor/getimage:
    post:
      tags:
        - mageWorxOrderEditorGetImageManagementV1
      description: POST for getImage api
      operationId: PostV1MageworxordereditorGetimage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: PostV1MageworxordereditorGetimageBody
          in: body
          schema:
            required:
              - id
              - store_id
            properties:
              id:
                type: string
              store_id:
                type: string
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
  /V1/carts/{cartId}/update-order:
    post:
      tags:
        - mageplazaSmtpCheckoutManagementV1
      description: ""
      operationId: PostV1CartsCartIdUpdateorder
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        -
          name: cartId
          in: path
          type: string
          required: true
        -
          name: PostV1CartsCartIdUpdateorderBody
          in: body
          schema:
            required:
              - address
              - isOsc
            properties:
              address:
                type: string
              isOsc:
                type: boolean
            type: object
            xml:
              name: request
      responses:
        200:
          description: 200 Success.
          schema:
            type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-response'
definitions:
  error-response:
    type: object
    properties:
      message:
        type: string
        description: Error message
      errors:
        $ref: '#/definitions/error-errors'
      code:
        type: integer
        description: Error code
      parameters:
        $ref: '#/definitions/error-parameters'
      trace:
        type: string
        description: Stack trace
    required:
      - message
  error-errors:
    type: array
    description: Errors list
    items:
      $ref: '#/definitions/error-errors-item'
  error-errors-item:
    type: object
    description: Error details
    properties:
      message:
        type: string
        description: Error message
      parameters:
        $ref: '#/definitions/error-parameters'
  error-parameters:
    type: array
    description: Error parameters list
    items:
      $ref: '#/definitions/error-parameters-item'
  error-parameters-item:
    type: object
    description: Error parameters item
    properties:
      resources:
        type: string
        description: ACL resource
      fieldName:
        type: string
        description: Missing or invalid field name
      fieldValue:
        type: string
        description: Incorrect field value
  store-data-store-interface:
    type: object
    description: Store interface
    properties:
      id:
        type: integer
      code:
        type: string
      name:
        type: string
        description: Store name
      website_id:
        type: integer
      store_group_id:
        type: integer
      is_active:
        type: integer
      extension_attributes:
        $ref: '#/definitions/store-data-store-extension-interface'
    required:
      - id
      - code
      - name
      - website_id
      - store_group_id
      - is_active
  store-data-store-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Store\Api\Data\StoreInterface
  store-data-group-interface:
    type: object
    description: Group interface
    properties:
      id:
        type: integer
      website_id:
        type: integer
      root_category_id:
        type: integer
      default_store_id:
        type: integer
      name:
        type: string
      code:
        type: string
        description: Group code.
      extension_attributes:
        $ref: '#/definitions/store-data-group-extension-interface'
    required:
      - id
      - website_id
      - root_category_id
      - default_store_id
      - name
      - code
  store-data-group-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Store\Api\Data\GroupInterface
  store-data-website-interface:
    type: object
    description: Website interface
    properties:
      id:
        type: integer
      code:
        type: string
      name:
        type: string
        description: Website name
      default_group_id:
        type: integer
      extension_attributes:
        $ref: '#/definitions/store-data-website-extension-interface'
    required:
      - id
      - code
      - name
      - default_group_id
  store-data-website-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Store\Api\Data\WebsiteInterface
  store-data-store-config-interface:
    type: object
    description: Interface for store config
    properties:
      id:
        type: integer
        description: Store id
      code:
        type: string
        description: Store code
      website_id:
        type: integer
        description: Website id of the store
      locale:
        type: string
        description: Store locale
      base_currency_code:
        type: string
        description: Base currency code
      default_display_currency_code:
        type: string
        description: Default display currency code
      timezone:
        type: string
        description: Timezone of the store
      weight_unit:
        type: string
        description: The unit of weight
      base_url:
        type: string
        description: Base URL for the store
      base_link_url:
        type: string
        description: Base link URL for the store
      base_static_url:
        type: string
        description: Base static URL for the store
      base_media_url:
        type: string
        description: Base media URL for the store
      secure_base_url:
        type: string
        description: Secure base URL for the store
      secure_base_link_url:
        type: string
        description: Secure base link URL for the store
      secure_base_static_url:
        type: string
        description: Secure base static URL for the store
      secure_base_media_url:
        type: string
        description: Secure base media URL for the store
      extension_attributes:
        $ref: '#/definitions/store-data-store-config-extension-interface'
    required:
      - id
      - code
      - website_id
      - locale
      - base_currency_code
      - default_display_currency_code
      - timezone
      - weight_unit
      - base_url
      - base_link_url
      - base_static_url
      - base_media_url
      - secure_base_url
      - secure_base_link_url
      - secure_base_static_url
      - secure_base_media_url
  store-data-store-config-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Store\Api\Data\StoreConfigInterface
  directory-data-currency-information-interface:
    type: object
    description: Currency Information interface.
    properties:
      base_currency_code:
        type: string
        description: The base currency code for the store.
      base_currency_symbol:
        type: string
        description: >
          The currency symbol of the base currency
          for the store.
      default_display_currency_code:
        type: string
        description: >
          The default display currency code for
          the store.
      default_display_currency_symbol:
        type: string
        description: >
          The currency symbol of the default
          display currency for the store.
      available_currency_codes:
        type: array
        description: >
          The list of allowed currency codes for
          the store.
        items:
          type: string
      exchange_rates:
        type: array
        description: >
          The list of exchange rate information
          for the store.
        items:
          $ref: '#/definitions/directory-data-exchange-rate-interface'
      extension_attributes:
        $ref: '#/definitions/directory-data-currency-information-extension-interface'
    required:
      - base_currency_code
      - base_currency_symbol
      - default_display_currency_code
      - default_display_currency_symbol
      - available_currency_codes
      - exchange_rates
  directory-data-exchange-rate-interface:
    type: object
    description: Exchange Rate interface.
    properties:
      currency_to:
        type: string
        description: >
          The currency code associated with the
          exchange rate.
      rate:
        type: number
        description: "The exchange rate for the associated currency and the store's base currency."
      extension_attributes:
        $ref: '#/definitions/directory-data-exchange-rate-extension-interface'
    required:
      - currency_to
      - rate
  directory-data-exchange-rate-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Directory\Api\Data\ExchangeRateInterface
  directory-data-currency-information-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Directory\Api\Data\CurrencyInformationInterface
  directory-data-country-information-interface:
    type: object
    description: Country Information interface.
    properties:
      id:
        type: string
        description: The country id for the store.
      two_letter_abbreviation:
        type: string
        description: >
          The country 2 letter abbreviation for
          the store.
      three_letter_abbreviation:
        type: string
        description: >
          The country 3 letter abbreviation for
          the store.
      full_name_locale:
        type: string
        description: >
          The country full name (in store locale)
          for the store.
      full_name_english:
        type: string
        description: >
          The country full name (in English) for
          the store.
      available_regions:
        type: array
        description: The available regions for the store.
        items:
          $ref: '#/definitions/directory-data-region-information-interface'
      extension_attributes:
        $ref: '#/definitions/directory-data-country-information-extension-interface'
    required:
      - id
      - two_letter_abbreviation
      - three_letter_abbreviation
      - full_name_locale
      - full_name_english
  directory-data-region-information-interface:
    type: object
    description: Region Information interface.
    properties:
      id:
        type: string
        description: Region id
      code:
        type: string
        description: Region code
      name:
        type: string
        description: Region name
      extension_attributes:
        $ref: '#/definitions/directory-data-region-information-extension-interface'
    required:
      - id
      - code
      - name
  directory-data-region-information-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Directory\Api\Data\RegionInformationInterface
  directory-data-country-information-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Directory\Api\Data\CountryInformationInterface
  cms-data-page-interface:
    type: object
    description: CMS page interface.
    properties:
      id:
        type: integer
        description: ID
      identifier:
        type: string
        description: Identifier
      title:
        type: string
        description: Title
      page_layout:
        type: string
        description: Page layout
      meta_title:
        type: string
        description: Meta title
      meta_keywords:
        type: string
        description: Meta keywords
      meta_description:
        type: string
        description: Meta description
      content_heading:
        type: string
        description: Content heading
      content:
        type: string
        description: Content
      creation_time:
        type: string
        description: Creation time
      update_time:
        type: string
        description: Update time
      sort_order:
        type: string
        description: Sort order
      layout_update_xml:
        type: string
        description: Layout update xml
      custom_theme:
        type: string
        description: Custom theme
      custom_root_template:
        type: string
        description: Custom root template
      custom_layout_update_xml:
        type: string
        description: Custom layout update xml
      custom_theme_from:
        type: string
        description: Custom theme from
      custom_theme_to:
        type: string
        description: Custom theme to
      active:
        type: boolean
        description: Active
    required:
      - identifier
  cms-data-page-search-results-interface:
    type: object
    description: Interface for cms page search results.
    properties:
      items:
        type: array
        description: Pages list.
        items:
          $ref: '#/definitions/cms-data-page-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  framework-search-criteria-interface:
    type: object
    description: Search criteria interface.
    properties:
      filter_groups:
        type: array
        description: A list of filter groups.
        items:
          $ref: '#/definitions/framework-search-filter-group'
      sort_orders:
        type: array
        description: Sort order.
        items:
          $ref: '#/definitions/framework-sort-order'
      page_size:
        type: integer
        description: Page size.
      current_page:
        type: integer
        description: Current page.
    required:
      - filter_groups
  framework-search-filter-group:
    type: object
    description: >
      Groups two or more filters together
      using a logical OR
    properties:
      filters:
        type: array
        description: A list of filters in this group
        items:
          $ref: '#/definitions/framework-filter'
  framework-filter:
    type: object
    description: >
      Filter which can be used by any methods
      from service layer.
    properties:
      field:
        type: string
        description: Field
      value:
        type: string
        description: Value
      condition_type:
        type: string
        description: Condition type
    required:
      - field
      - value
  framework-sort-order:
    type: object
    description: Data object for sort order.
    properties:
      field:
        type: string
        description: Sorting field.
      direction:
        type: string
        description: Sorting direction.
    required:
      - field
      - direction
  cms-data-block-interface:
    type: object
    description: CMS block interface.
    properties:
      id:
        type: integer
        description: ID
      identifier:
        type: string
        description: Identifier
      title:
        type: string
        description: Title
      content:
        type: string
        description: Content
      creation_time:
        type: string
        description: Creation time
      update_time:
        type: string
        description: Update time
      active:
        type: boolean
        description: Active
    required:
      - identifier
  cms-data-block-search-results-interface:
    type: object
    description: Interface for cms block search results.
    properties:
      items:
        type: array
        description: Blocks list.
        items:
          $ref: '#/definitions/cms-data-block-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  eav-data-attribute-set-search-results-interface:
    type: object
    description: >
      Interface
      AttributeSetSearchResultsInterface
    properties:
      items:
        type: array
        description: Attribute sets list.
        items:
          $ref: '#/definitions/eav-data-attribute-set-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  eav-data-attribute-set-interface:
    type: object
    description: Interface AttributeSetInterface
    properties:
      attribute_set_id:
        type: integer
        description: Attribute set ID
      attribute_set_name:
        type: string
        description: Attribute set name
      sort_order:
        type: integer
        description: Attribute set sort order index
      entity_type_id:
        type: integer
        description: Attribute set entity type id
      extension_attributes:
        $ref: '#/definitions/eav-data-attribute-set-extension-interface'
    required:
      - attribute_set_name
      - sort_order
  eav-data-attribute-set-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Eav\Api\Data\AttributeSetInterface
  customer-data-group-interface:
    type: object
    description: Customer group interface.
    properties:
      id:
        type: integer
        description: Id
      code:
        type: string
        description: Code
      tax_class_id:
        type: integer
        description: Tax class id
      tax_class_name:
        type: string
        description: Tax class name
      extension_attributes:
        $ref: '#/definitions/customer-data-group-extension-interface'
    required:
      - code
      - tax_class_id
  customer-data-group-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Customer\Api\Data\GroupInterface
    properties:
      exclude_website_ids:
        type: array
        items:
          type: integer
      is_visible_on_storefront:
        type: boolean
  customer-data-group-search-results-interface:
    type: object
    description: >
      Interface for customer groups search
      results.
    properties:
      items:
        type: array
        description: Customer groups list.
        items:
          $ref: '#/definitions/customer-data-group-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  customer-data-attribute-metadata-interface:
    type: object
    description: Customer attribute metadata interface.
    properties:
      frontend_input:
        type: string
        description: HTML for input element.
      input_filter:
        type: string
        description: Template used for input (e.g. "date")
      store_label:
        type: string
        description: Label of the store.
      validation_rules:
        type: array
        description: Validation rules.
        items:
          $ref: '#/definitions/customer-data-validation-rule-interface'
      multiline_count:
        type: integer
        description: Of lines of the attribute value.
      visible:
        type: boolean
        description: Attribute is visible on frontend.
      required:
        type: boolean
        description: Attribute is required.
      data_model:
        type: string
        description: Data model for attribute.
      options:
        type: array
        description: 'Options of the attribute (key => value pairs for select)'
        items:
          $ref: '#/definitions/customer-data-option-interface'
      frontend_class:
        type: string
        description: >
          Class which is used to display the
          attribute on frontend.
      user_defined:
        type: boolean
        description: >
          Current attribute has been defined by a
          user.
      sort_order:
        type: integer
        description: Attributes sort order.
      frontend_label:
        type: string
        description: >
          Label which supposed to be displayed on
          frontend.
      note:
        type: string
        description: The note attribute for the element.
      system:
        type: boolean
        description: This is a system attribute.
      backend_type:
        type: string
        description: Backend type.
      is_used_in_grid:
        type: boolean
        description: It is used in customer grid
      is_visible_in_grid:
        type: boolean
        description: It is visible in customer grid
      is_filterable_in_grid:
        type: boolean
        description: It is filterable in customer grid
      is_searchable_in_grid:
        type: boolean
        description: It is searchable in customer grid
      attribute_code:
        type: string
        description: Code of the attribute.
    required:
      - frontend_input
      - input_filter
      - store_label
      - validation_rules
      - multiline_count
      - visible
      - required
      - data_model
      - options
      - frontend_class
      - user_defined
      - sort_order
      - frontend_label
      - note
      - system
      - backend_type
      - attribute_code
  customer-data-validation-rule-interface:
    type: object
    description: Validation rule interface.
    properties:
      name:
        type: string
        description: Validation rule name
      value:
        type: string
        description: Validation rule value
    required:
      - name
      - value
  customer-data-option-interface:
    type: object
    description: Option interface.
    properties:
      label:
        type: string
        description: Option label
      value:
        type: string
        description: Option value
      options:
        type: array
        description: Nested options
        items:
          $ref: '#/definitions/customer-data-option-interface'
    required:
      - label
  customer-data-customer-interface:
    type: object
    description: >
      Customer entity interface for API
      handling.
    properties:
      id:
        type: integer
        description: Customer id
      group_id:
        type: integer
        description: Group id
      default_billing:
        type: string
        description: Default billing address id
      default_shipping:
        type: string
        description: Default shipping address id
      confirmation:
        type: string
        description: Confirmation
      created_at:
        type: string
        description: Created at time
      updated_at:
        type: string
        description: Updated at time
      created_in:
        type: string
        description: Created in area
      dob:
        type: string
        description: >
          In keeping with current security and
          privacy best practices, be sure you are
          aware of any potential legal and
          security risks associated with the
          storage of customers’ full date of
          birth (month, day, year) along with
          other personal identifiers (e.g., full
          name) before collecting or processing
          such data.
      email:
        type: string
        description: Email address
      firstname:
        type: string
        description: First name
      lastname:
        type: string
        description: Last name
      middlename:
        type: string
        description: Middle name
      prefix:
        type: string
        description: Prefix
      suffix:
        type: string
        description: Suffix
      gender:
        type: integer
        description: Gender
      store_id:
        type: integer
        description: Store id
      taxvat:
        type: string
        description: Tax Vat
      website_id:
        type: integer
        description: Website id
      addresses:
        type: array
        description: Customer addresses.
        items:
          $ref: '#/definitions/customer-data-address-interface'
      disable_auto_group_change:
        type: integer
        description: Disable auto group change flag.
      extension_attributes:
        $ref: '#/definitions/customer-data-customer-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - email
      - firstname
      - lastname
  customer-data-address-interface:
    type: object
    description: Customer address interface.
    properties:
      id:
        type: integer
        description: ID
      customer_id:
        type: integer
        description: Customer ID
      region:
        $ref: '#/definitions/customer-data-region-interface'
      region_id:
        type: integer
        description: Region ID
      country_id:
        type: string
        description: Country code in ISO_3166-2 format
      street:
        type: array
        description: Street
        items:
          type: string
      company:
        type: string
        description: Company
      telephone:
        type: string
        description: Telephone number
      fax:
        type: string
        description: Fax number
      postcode:
        type: string
        description: Postcode
      city:
        type: string
        description: City name
      firstname:
        type: string
        description: First name
      lastname:
        type: string
        description: Last name
      middlename:
        type: string
        description: Middle name
      prefix:
        type: string
        description: Prefix
      suffix:
        type: string
        description: Suffix
      vat_id:
        type: string
        description: Vat id
      default_shipping:
        type: boolean
        description: >
          If this address is default shipping
          address.
      default_billing:
        type: boolean
        description: >
          If this address is default billing
          address
      extension_attributes:
        $ref: '#/definitions/customer-data-address-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
  customer-data-region-interface:
    type: object
    description: Customer address region interface.
    properties:
      region_code:
        type: string
        description: Region code
      region:
        type: string
        description: Region
      region_id:
        type: integer
        description: Region id
      extension_attributes:
        $ref: '#/definitions/customer-data-region-extension-interface'
    required:
      - region_code
      - region
      - region_id
  customer-data-region-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Customer\Api\Data\RegionInterface
  customer-data-address-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Customer\Api\Data\AddressInterface
    properties:
      flat:
        type: string
      house:
        type: string
      warehouse_ref:
        type: string
      street_ref:
        type: string
      comments:
        type: string
      payment:
        type: string
      city_ref:
        type: string
      customer_address_type:
        type: string
  framework-attribute-interface:
    type: object
    description: Interface for custom attribute value.
    properties:
      attribute_code:
        type: string
        description: Attribute code
      value:
        type: string
        description: Attribute value
    required:
      - attribute_code
      - value
  customer-data-customer-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Customer\Api\Data\CustomerInterface
    properties:
      is_subscribed:
        type: boolean
      assistance_allowed:
        type: integer
      gdpr_confirm:
        type: string
      confirmed_dob:
        type: string
      telephone:
        type: string
  customer-data-customer-search-results-interface:
    type: object
    description: Interface for customer search results.
    properties:
      items:
        type: array
        description: Customers list.
        items:
          $ref: '#/definitions/customer-data-customer-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  customer-data-validation-results-interface:
    type: object
    description: Validation results interface.
    properties:
      valid:
        type: boolean
        description: If the provided data is valid.
      messages:
        type: array
        description: >
          Error messages as array in case of
          validation failure, else return empty
          array.
        items:
          type: string
    required:
      - valid
      - messages
  catalog-data-product-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Id
      sku:
        type: string
        description: Sku
      name:
        type: string
        description: Name
      attribute_set_id:
        type: integer
        description: Attribute set id
      price:
        type: number
        description: Price
      status:
        type: integer
        description: Status
      visibility:
        type: integer
        description: Visibility
      type_id:
        type: string
        description: Type id
      created_at:
        type: string
        description: Created date
      updated_at:
        type: string
        description: Updated date
      weight:
        type: number
        description: Weight
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-extension-interface'
      product_links:
        type: array
        description: Product links info
        items:
          $ref: '#/definitions/catalog-data-product-link-interface'
      options:
        type: array
        description: List of product options
        items:
          $ref: '#/definitions/catalog-data-product-custom-option-interface'
      media_gallery_entries:
        type: array
        description: Media gallery entries
        items:
          $ref: '#/definitions/catalog-data-product-attribute-media-gallery-entry-interface'
      tier_prices:
        type: array
        description: List of product tier prices
        items:
          $ref: '#/definitions/catalog-data-product-tier-price-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - sku
  catalog-data-product-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductInterface
    properties:
      website_ids:
        type: array
        items:
          type: integer
      category_links:
        type: array
        items:
          $ref: '#/definitions/catalog-data-category-link-interface'
      stock_item:
        $ref: '#/definitions/catalog-inventory-data-stock-item-interface'
      configurable_product_options:
        type: array
        items:
          $ref: '#/definitions/configurable-product-data-option-interface'
      configurable_product_links:
        type: array
        items:
          type: integer
      downloadable_product_links:
        type: array
        items:
          $ref: '#/definitions/downloadable-data-link-interface'
      downloadable_product_samples:
        type: array
        items:
          $ref: '#/definitions/downloadable-data-sample-interface'
      bundle_product_options:
        type: array
        items:
          $ref: '#/definitions/bundle-data-option-interface'
      discounts:
        type: array
        items:
          $ref: '#/definitions/sales-rule-data-rule-discount-interface'
      price_uah:
        type: integer
      special_price_uah:
        type: integer
      rating:
        type: string
      reviews_count:
        type: integer
      package_availability:
        type: array
        items:
          $ref: '#/definitions/biotus-catalog-data-package-availability-interface'
      specification:
        type: array
        items:
          $ref: '#/definitions/biotus-catalog-data-package-availability-interface'
      composition:
        type: array
        items:
          $ref: '#/definitions/biotus-catalog-data-composition-interface'
      availability:
        type: string
  catalog-data-category-link-interface:
    type: object
    description: ""
    properties:
      position:
        type: integer
      category_id:
        type: string
        description: Category id
      extension_attributes:
        $ref: '#/definitions/catalog-data-category-link-extension-interface'
    required:
      - category_id
  catalog-data-category-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\CategoryLinkInterface
  catalog-inventory-data-stock-item-interface:
    type: object
    description: Interface StockItem
    properties:
      item_id:
        type: integer
      product_id:
        type: integer
      stock_id:
        type: integer
        description: Stock identifier
      qty:
        type: number
      is_in_stock:
        type: boolean
        description: Stock Availability
      is_qty_decimal:
        type: boolean
      show_default_notification_message:
        type: boolean
      use_config_min_qty:
        type: boolean
      min_qty:
        type: number
        description: >
          Minimal quantity available for item
          status in stock
      use_config_min_sale_qty:
        type: integer
      min_sale_qty:
        type: number
        description: >
          Minimum Qty Allowed in Shopping Cart or
          NULL when there is no limitation
      use_config_max_sale_qty:
        type: boolean
      max_sale_qty:
        type: number
        description: >
          Maximum Qty Allowed in Shopping Cart
          data wrapper
      use_config_backorders:
        type: boolean
      backorders:
        type: integer
        description: Backorders status
      use_config_notify_stock_qty:
        type: boolean
      notify_stock_qty:
        type: number
        description: Notify for Quantity Below data wrapper
      use_config_qty_increments:
        type: boolean
      qty_increments:
        type: number
        description: Quantity Increments data wrapper
      use_config_enable_qty_inc:
        type: boolean
      enable_qty_increments:
        type: boolean
        description: Whether Quantity Increments is enabled
      use_config_manage_stock:
        type: boolean
      manage_stock:
        type: boolean
        description: Can Manage Stock
      low_stock_date:
        type: string
      is_decimal_divided:
        type: boolean
      stock_status_changed_auto:
        type: integer
      extension_attributes:
        $ref: '#/definitions/catalog-inventory-data-stock-item-extension-interface'
    required:
      - qty
      - is_in_stock
      - is_qty_decimal
      - show_default_notification_message
      - use_config_min_qty
      - min_qty
      - use_config_min_sale_qty
      - min_sale_qty
      - use_config_max_sale_qty
      - max_sale_qty
      - use_config_backorders
      - backorders
      - use_config_notify_stock_qty
      - notify_stock_qty
      - use_config_qty_increments
      - qty_increments
      - use_config_enable_qty_inc
      - enable_qty_increments
      - use_config_manage_stock
      - manage_stock
      - low_stock_date
      - is_decimal_divided
      - stock_status_changed_auto
  catalog-inventory-data-stock-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\CatalogInventory\Api\Data\StockItemInterface
  configurable-product-data-option-interface:
    type: object
    description: Interface OptionInterface
    properties:
      id:
        type: integer
      attribute_id:
        type: string
      label:
        type: string
      position:
        type: integer
      is_use_default:
        type: boolean
      values:
        type: array
        items:
          $ref: '#/definitions/configurable-product-data-option-value-interface'
      extension_attributes:
        $ref: '#/definitions/configurable-product-data-option-extension-interface'
      product_id:
        type: integer
  configurable-product-data-option-value-interface:
    type: object
    description: Interface OptionValueInterface
    properties:
      value_index:
        type: integer
      extension_attributes:
        $ref: '#/definitions/configurable-product-data-option-value-extension-interface'
    required:
      - value_index
  configurable-product-data-option-value-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\ConfigurableProduct\Api\Data\OptionValueInterface
  configurable-product-data-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\ConfigurableProduct\Api\Data\OptionInterface
  downloadable-data-link-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Sample(or link) id
      title:
        type: string
      sort_order:
        type: integer
      is_shareable:
        type: integer
        description: Shareable status
      price:
        type: number
        description: Price
      number_of_downloads:
        type: integer
        description: Of downloads per user
      link_type:
        type: string
      link_file:
        type: string
        description: relative file path
      link_file_content:
        $ref: '#/definitions/downloadable-data-file-content-interface'
      link_url:
        type: string
        description: "Link url or null when type is 'file'"
      sample_type:
        type: string
      sample_file:
        type: string
        description: relative file path
      sample_file_content:
        $ref: '#/definitions/downloadable-data-file-content-interface'
      sample_url:
        type: string
        description: file URL
      extension_attributes:
        $ref: '#/definitions/downloadable-data-link-extension-interface'
    required:
      - sort_order
      - is_shareable
      - price
      - link_type
      - sample_type
  downloadable-data-file-content-interface:
    type: object
    description: ""
    properties:
      file_data:
        type: string
        description: Data (base64 encoded content)
      name:
        type: string
        description: File name
      extension_attributes:
        $ref: '#/definitions/downloadable-data-file-content-extension-interface'
    required:
      - file_data
      - name
  downloadable-data-file-content-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Downloadable\Api\Data\File\ContentInterface
  downloadable-data-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Downloadable\Api\Data\LinkInterface
  downloadable-data-sample-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Sample(or link) id
      title:
        type: string
        description: Title
      sort_order:
        type: integer
        description: Order index for sample
      sample_type:
        type: string
      sample_file:
        type: string
        description: relative file path
      sample_file_content:
        $ref: '#/definitions/downloadable-data-file-content-interface'
      sample_url:
        type: string
        description: file URL
      extension_attributes:
        $ref: '#/definitions/downloadable-data-sample-extension-interface'
    required:
      - title
      - sort_order
      - sample_type
  downloadable-data-sample-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Downloadable\Api\Data\SampleInterface
  bundle-data-option-interface:
    type: object
    description: Interface OptionInterface
    properties:
      option_id:
        type: integer
        description: Option id
      title:
        type: string
        description: Option title
      required:
        type: boolean
        description: Is required option
      type:
        type: string
        description: Input type
      position:
        type: integer
        description: Option position
      sku:
        type: string
        description: Product sku
      product_links:
        type: array
        description: Product links
        items:
          $ref: '#/definitions/bundle-data-link-interface'
      extension_attributes:
        $ref: '#/definitions/bundle-data-option-extension-interface'
  bundle-data-link-interface:
    type: object
    description: Interface LinkInterface
    properties:
      id:
        type: string
        description: The identifier
      sku:
        type: string
        description: Linked product sku
      option_id:
        type: integer
        description: Option id
      qty:
        type: number
        description: Qty
      position:
        type: integer
        description: Position
      is_default:
        type: boolean
        description: Is default
      price:
        type: number
        description: Price
      price_type:
        type: integer
        description: Price type
      can_change_quantity:
        type: integer
        description: Whether quantity could be changed
      extension_attributes:
        $ref: '#/definitions/bundle-data-link-extension-interface'
    required:
      - is_default
      - price
      - price_type
  bundle-data-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Bundle\Api\Data\LinkInterface
  bundle-data-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Bundle\Api\Data\OptionInterface
  sales-rule-data-rule-discount-interface:
    type: object
    description: Rule discount Interface
    properties:
      discount_data:
        $ref: '#/definitions/sales-rule-data-discount-data-interface'
      rule_label:
        type: string
        description: Rule Label
      rule_i_d:
        type: integer
        description: Rule ID
    required:
      - discount_data
      - rule_label
      - rule_i_d
  sales-rule-data-discount-data-interface:
    type: object
    description: Discount Data Interface
    properties:
      amount:
        type: number
        description: Amount
      base_amount:
        type: number
        description: Base Amount
      original_amount:
        type: number
        description: Original Amount
      base_original_amount:
        type: number
        description: Base Original Amount
    required:
      - amount
      - base_amount
      - original_amount
      - base_original_amount
  biotus-catalog-data-package-availability-interface:
    type: object
    description: ""
    properties:
      best_price_label:
        type: string
      size_label:
        type: string
      unit_price_label:
        type: string
      price_label:
        type: string
      special_price_label:
        type: string
    required:
      - best_price_label
      - size_label
      - unit_price_label
      - price_label
      - special_price_label
  biotus-catalog-data-composition-interface:
    type: object
    description: ""
    properties:
      name:
        type: string
      value:
        type: string
    required:
      - name
      - value
  catalog-data-product-link-interface:
    type: object
    description: ""
    properties:
      sku:
        type: string
        description: SKU
      link_type:
        type: string
        description: Link type
      linked_product_sku:
        type: string
        description: Linked product sku
      linked_product_type:
        type: string
        description: >
          Linked product type (simple, virtual,
          etc)
      position:
        type: integer
        description: Linked item position
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-link-extension-interface'
    required:
      - sku
      - link_type
      - linked_product_sku
      - linked_product_type
      - position
  catalog-data-product-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductLinkInterface
    properties:
      qty:
        type: number
  catalog-data-product-custom-option-interface:
    type: object
    description: ""
    properties:
      product_sku:
        type: string
        description: Product SKU
      option_id:
        type: integer
        description: Option id
      title:
        type: string
        description: Option title
      type:
        type: string
        description: Option type
      sort_order:
        type: integer
        description: Sort order
      is_require:
        type: boolean
        description: Is require
      price:
        type: number
        description: Price
      price_type:
        type: string
        description: Price type
      sku:
        type: string
        description: Sku
      file_extension:
        type: string
      max_characters:
        type: integer
      image_size_x:
        type: integer
      image_size_y:
        type: integer
      values:
        type: array
        items:
          $ref: '#/definitions/catalog-data-product-custom-option-values-interface'
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-custom-option-extension-interface'
    required:
      - product_sku
      - title
      - type
      - sort_order
      - is_require
  catalog-data-product-custom-option-values-interface:
    type: object
    description: ""
    properties:
      title:
        type: string
        description: Option title
      sort_order:
        type: integer
        description: Sort order
      price:
        type: number
        description: Price
      price_type:
        type: string
        description: Price type
      sku:
        type: string
        description: Sku
      option_type_id:
        type: integer
        description: Option type id
    required:
      - title
      - sort_order
      - price
      - price_type
  catalog-data-product-custom-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductCustomOptionInterface
  catalog-data-product-attribute-media-gallery-entry-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Gallery entry ID
      media_type:
        type: string
        description: Media type
      label:
        type: string
        description: Gallery entry alternative text
      position:
        type: integer
        description: Gallery entry position (sort order)
      disabled:
        type: boolean
        description: >
          If gallery entry is hidden from product
          page
      types:
        type: array
        description: >
          Gallery entry image types (thumbnail,
          image, small_image etc)
        items:
          type: string
      file:
        type: string
        description: File path
      content:
        $ref: '#/definitions/framework-data-image-content-interface'
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-attribute-media-gallery-entry-extension-interface'
    required:
      - media_type
      - label
      - position
      - disabled
      - types
  framework-data-image-content-interface:
    type: object
    description: Image Content data interface
    properties:
      base64_encoded_data:
        type: string
        description: Media data (base64 encoded content)
      type:
        type: string
        description: MIME type
      name:
        type: string
        description: Image name
    required:
      - base64_encoded_data
      - type
      - name
  catalog-data-product-attribute-media-gallery-entry-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductAttributeMediaGalleryEntryInterface
    properties:
      video_content:
        $ref: '#/definitions/framework-data-video-content-interface'
  framework-data-video-content-interface:
    type: object
    description: Video Content data interface
    properties:
      media_type:
        type: string
        description: MIME type
      video_provider:
        type: string
        description: Provider
      video_url:
        type: string
        description: Video URL
      video_title:
        type: string
        description: Title
      video_description:
        type: string
        description: Video Description
      video_metadata:
        type: string
        description: Metadata
    required:
      - media_type
      - video_provider
      - video_url
      - video_title
      - video_description
      - video_metadata
  catalog-data-product-tier-price-interface:
    type: object
    description: ""
    properties:
      customer_group_id:
        type: integer
        description: Customer group id
      qty:
        type: number
        description: Tier qty
      value:
        type: number
        description: Price value
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-tier-price-extension-interface'
    required:
      - customer_group_id
      - qty
      - value
  catalog-data-product-tier-price-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductTierPriceInterface
    properties:
      percentage_value:
        type: number
      website_id:
        type: integer
  catalog-data-product-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Attributes list.
        items:
          $ref: '#/definitions/catalog-data-product-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  catalog-data-product-attribute-type-interface:
    type: object
    description: ""
    properties:
      value:
        type: string
        description: Value
      label:
        type: string
        description: Type label
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-attribute-type-extension-interface'
    required:
      - value
      - label
  catalog-data-product-attribute-type-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductAttributeTypeInterface
  catalog-data-product-attribute-interface:
    type: object
    description: ""
    properties:
      extension_attributes:
        $ref: '#/definitions/eav-data-attribute-extension-interface'
      is_wysiwyg_enabled:
        type: boolean
        description: WYSIWYG flag
      is_html_allowed_on_front:
        type: boolean
        description: >
          The HTML tags are allowed on the
          frontend
      used_for_sort_by:
        type: boolean
        description: >
          It is used for sorting in product
          listing
      is_filterable:
        type: boolean
        description: It used in layered navigation
      is_filterable_in_search:
        type: boolean
        description: >
          It is used in search results layered
          navigation
      is_used_in_grid:
        type: boolean
        description: It is used in catalog product grid
      is_visible_in_grid:
        type: boolean
        description: It is visible in catalog product grid
      is_filterable_in_grid:
        type: boolean
        description: It is filterable in catalog product grid
      position:
        type: integer
        description: Position
      apply_to:
        type: array
        description: Apply to value for the element
        items:
          type: string
      is_searchable:
        type: string
        description: >
          The attribute can be used in Quick
          Search
      is_visible_in_advanced_search:
        type: string
        description: >
          The attribute can be used in Advanced
          Search
      is_comparable:
        type: string
        description: >
          The attribute can be compared on the
          frontend
      is_used_for_promo_rules:
        type: string
        description: >
          The attribute can be used for promo
          rules
      is_visible_on_front:
        type: string
        description: The attribute is visible on the frontend
      used_in_product_listing:
        type: string
        description: >
          The attribute can be used in product
          listing
      is_visible:
        type: boolean
        description: Attribute is visible on frontend.
      scope:
        type: string
        description: Attribute scope
      attribute_id:
        type: integer
        description: Id of the attribute.
      attribute_code:
        type: string
        description: Code of the attribute.
      frontend_input:
        type: string
        description: HTML for input element.
      entity_type_id:
        type: string
        description: Entity type id
      is_required:
        type: boolean
        description: Attribute is required.
      options:
        type: array
        description: 'Options of the attribute (key => value pairs for select)'
        items:
          $ref: '#/definitions/eav-data-attribute-option-interface'
      is_user_defined:
        type: boolean
        description: >
          Current attribute has been defined by a
          user.
      default_frontend_label:
        type: string
        description: Frontend label for default store
      frontend_labels:
        type: array
        description: Frontend label for each store
        items:
          $ref: '#/definitions/eav-data-attribute-frontend-label-interface'
      note:
        type: string
        description: The note attribute for the element.
      backend_type:
        type: string
        description: Backend type.
      backend_model:
        type: string
        description: Backend model
      source_model:
        type: string
        description: Source model
      default_value:
        type: string
        description: Default value for the element.
      is_unique:
        type: string
        description: This is a unique attribute
      frontend_class:
        type: string
        description: Frontend class of attribute
      validation_rules:
        type: array
        description: Validation rules.
        items:
          $ref: '#/definitions/eav-data-attribute-validation-rule-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - attribute_code
      - frontend_input
      - entity_type_id
      - is_required
      - frontend_labels
  eav-data-attribute-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Eav\Api\Data\AttributeInterface
    properties:
      filter_setting:
        $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
  amasty-shopby-base-data-filter-setting-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
      display_mode:
        type: integer
      follow_mode:
        type: integer
      filter_code:
        type: string
      attribute_code:
        type: string
      index_mode:
        type: integer
      rel_nofollow:
        type: integer
      add_from_to_widget:
        type: boolean
      multiselect:
        type: boolean
      seo_significant:
        type: integer
      expanded:
        type: boolean
      sort_options_by:
        type: integer
      show_product_quantities:
        type: integer
      number_unfolded_options:
        type: string
      use_and_logic:
        type: boolean
      tooltip:
        type: string
      visible_in_categories:
        type: string
      categories_filter:
        type: string
      attributes_filter:
        type: string
      attributes_options_filter:
        type: string
      block_position:
        type: integer
      show_icons_on_product:
        type: string
      units_label:
        type: string
      units_label_use_currency_symbol:
        type: integer
      category_tree_display_mode:
        type: integer
      top_position:
        type: integer
      side_position:
        type: integer
      position:
        type: integer
      position_label:
        type: integer
      slider_min:
        type: number
      slider_max:
        type: number
      limit_options_show_search_box:
        type: integer
      is_show_search_box:
        type: integer
      attribute_url_alias:
        type: string
      slider_step:
        type: number
      render_all_categories_tree:
        type: boolean
      subcategories_view:
        type: integer
      render_categories_level:
        type: integer
      category_tree_depth:
        type: integer
      subcategories_expand:
        type: integer
      hide_zeros:
        type: boolean
        description: >
          The price value in the filter is
          equivalent to an int value, then cut out
          .00
      range_algorithm:
        type: integer
        description: Price attributes in Ranges Display Mode.
      range_step:
        type: number
        description: >
          Price attributes in Ranges Display Mode
          and Custom Range Algorithm.
      attribute_id:
        type: integer
    required:
      - follow_mode
      - attribute_code
      - index_mode
      - rel_nofollow
      - multiselect
      - seo_significant
      - sort_options_by
      - show_product_quantities
      - number_unfolded_options
      - use_and_logic
      - tooltip
      - visible_in_categories
      - categories_filter
      - attributes_filter
      - attributes_options_filter
      - block_position
      - show_icons_on_product
      - units_label
      - units_label_use_currency_symbol
      - category_tree_display_mode
      - top_position
      - side_position
      - position
      - position_label
      - slider_min
      - slider_max
      - hide_zeros
      - range_algorithm
      - range_step
  eav-data-attribute-option-interface:
    type: object
    description: 'Created from:'
    properties:
      label:
        type: string
        description: Option label
      value:
        type: string
        description: Option value
      sort_order:
        type: integer
        description: Option order
      is_default:
        type: boolean
        description: Default
      store_labels:
        type: array
        description: Option label for store scopes
        items:
          $ref: '#/definitions/eav-data-attribute-option-label-interface'
    required:
      - label
      - value
  eav-data-attribute-option-label-interface:
    type: object
    description: Interface AttributeOptionLabelInterface
    properties:
      store_id:
        type: integer
        description: Store id
      label:
        type: string
        description: Option label
  eav-data-attribute-frontend-label-interface:
    type: object
    description: >
      Interface
      AttributeFrontendLabelInterface
    properties:
      store_id:
        type: integer
        description: Store id
      label:
        type: string
        description: Option label
  eav-data-attribute-validation-rule-interface:
    type: object
    description: >
      Interface
      AttributeValidationRuleInterface
    properties:
      key:
        type: string
        description: Object key
      value:
        type: string
        description: Object value
    required:
      - key
      - value
  catalog-data-product-attribute-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Attributes list.
        items:
          $ref: '#/definitions/catalog-data-product-attribute-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  catalog-data-category-attribute-interface:
    type: object
    description: ""
    properties:
      is_wysiwyg_enabled:
        type: boolean
        description: WYSIWYG flag
      is_html_allowed_on_front:
        type: boolean
        description: >
          The HTML tags are allowed on the
          frontend
      used_for_sort_by:
        type: boolean
        description: >
          It is used for sorting in product
          listing
      is_filterable:
        type: boolean
        description: It used in layered navigation
      is_filterable_in_search:
        type: boolean
        description: >
          It is used in search results layered
          navigation
      is_used_in_grid:
        type: boolean
        description: It is used in catalog product grid
      is_visible_in_grid:
        type: boolean
        description: It is visible in catalog product grid
      is_filterable_in_grid:
        type: boolean
        description: It is filterable in catalog product grid
      position:
        type: integer
        description: Position
      apply_to:
        type: array
        description: Apply to value for the element
        items:
          type: string
      is_searchable:
        type: string
        description: >
          The attribute can be used in Quick
          Search
      is_visible_in_advanced_search:
        type: string
        description: >
          The attribute can be used in Advanced
          Search
      is_comparable:
        type: string
        description: >
          The attribute can be compared on the
          frontend
      is_used_for_promo_rules:
        type: string
        description: >
          The attribute can be used for promo
          rules
      is_visible_on_front:
        type: string
        description: The attribute is visible on the frontend
      used_in_product_listing:
        type: string
        description: >
          The attribute can be used in product
          listing
      is_visible:
        type: boolean
        description: Attribute is visible on frontend.
      scope:
        type: string
        description: Attribute scope
      extension_attributes:
        $ref: '#/definitions/catalog-data-eav-attribute-extension-interface'
      attribute_id:
        type: integer
        description: Id of the attribute.
      attribute_code:
        type: string
        description: Code of the attribute.
      frontend_input:
        type: string
        description: HTML for input element.
      entity_type_id:
        type: string
        description: Entity type id
      is_required:
        type: boolean
        description: Attribute is required.
      options:
        type: array
        description: 'Options of the attribute (key => value pairs for select)'
        items:
          $ref: '#/definitions/eav-data-attribute-option-interface'
      is_user_defined:
        type: boolean
        description: >
          Current attribute has been defined by a
          user.
      default_frontend_label:
        type: string
        description: Frontend label for default store
      frontend_labels:
        type: array
        description: Frontend label for each store
        items:
          $ref: '#/definitions/eav-data-attribute-frontend-label-interface'
      note:
        type: string
        description: The note attribute for the element.
      backend_type:
        type: string
        description: Backend type.
      backend_model:
        type: string
        description: Backend model
      source_model:
        type: string
        description: Source model
      default_value:
        type: string
        description: Default value for the element.
      is_unique:
        type: string
        description: This is a unique attribute
      frontend_class:
        type: string
        description: Frontend class of attribute
      validation_rules:
        type: array
        description: Validation rules.
        items:
          $ref: '#/definitions/eav-data-attribute-validation-rule-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - attribute_code
      - frontend_input
      - entity_type_id
      - is_required
      - frontend_labels
  catalog-data-eav-attribute-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\EavAttributeInterface
  catalog-data-category-attribute-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Attributes list.
        items:
          $ref: '#/definitions/catalog-data-category-attribute-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  catalog-data-product-type-interface:
    type: object
    description: Product type details
    properties:
      name:
        type: string
        description: Product type code
      label:
        type: string
        description: Product type label
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-type-extension-interface'
    required:
      - name
      - label
  catalog-data-product-type-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductTypeInterface
  eav-data-attribute-group-search-results-interface:
    type: object
    description: >
      Interface
      AttributeGroupSearchResultsInterface
    properties:
      items:
        type: array
        description: Attribute sets list.
        items:
          $ref: '#/definitions/eav-data-attribute-group-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  eav-data-attribute-group-interface:
    type: object
    description: Interface AttributeGroupInterface
    properties:
      attribute_group_id:
        type: string
        description: Id
      attribute_group_name:
        type: string
        description: Name
      attribute_set_id:
        type: integer
        description: Attribute set id
      extension_attributes:
        $ref: '#/definitions/eav-data-attribute-group-extension-interface'
  eav-data-attribute-group-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Eav\Api\Data\AttributeGroupInterface
    properties:
      attribute_group_code:
        type: string
      sort_order:
        type: string
  catalog-data-tier-price-interface:
    type: object
    description: Tier price interface.
    properties:
      price:
        type: number
        description: Tier price.
      price_type:
        type: string
        description: Tier price type.
      website_id:
        type: integer
        description: Website id.
      sku:
        type: string
        description: SKU.
      customer_group:
        type: string
        description: Customer group.
      quantity:
        type: number
        description: Quantity.
      extension_attributes:
        $ref: '#/definitions/catalog-data-tier-price-extension-interface'
    required:
      - price
      - price_type
      - website_id
      - sku
      - customer_group
      - quantity
  catalog-data-tier-price-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\TierPriceInterface
  catalog-data-price-update-result-interface:
    type: object
    description: >
      Interface returned in case of incorrect
      price passed to efficient price API.
    properties:
      message:
        type: string
        description: >
          Error message, that contains description
          of error occurred during price update.
      parameters:
        type: array
        description: >
          Parameters, that could be displayed in
          error message placeholders.
        items:
          type: string
      extension_attributes:
        $ref: '#/definitions/catalog-data-price-update-result-extension-interface'
    required:
      - message
      - parameters
  catalog-data-price-update-result-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\PriceUpdateResultInterface
  catalog-data-base-price-interface:
    type: object
    description: Price interface.
    properties:
      price:
        type: number
        description: Price.
      store_id:
        type: integer
        description: Store id.
      sku:
        type: string
        description: SKU.
      extension_attributes:
        $ref: '#/definitions/catalog-data-base-price-extension-interface'
    required:
      - price
      - store_id
      - sku
  catalog-data-base-price-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\BasePriceInterface
  catalog-data-cost-interface:
    type: object
    description: Cost interface.
    properties:
      cost:
        type: number
        description: Cost value.
      store_id:
        type: integer
        description: Store id.
      sku:
        type: string
        description: SKU.
      extension_attributes:
        $ref: '#/definitions/catalog-data-cost-extension-interface'
    required:
      - cost
      - store_id
      - sku
  catalog-data-cost-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\CostInterface
  catalog-data-special-price-interface:
    type: object
    description: >
      Product Special Price Interface is used
      to encapsulate data that can be
      processed by efficient price API.
    properties:
      price:
        type: number
        description: Product special price value.
      store_id:
        type: integer
        description: >
          ID of store, that contains special price
          value.
      sku:
        type: string
        description: >
          SKU of product, that contains special
          price value.
      price_from:
        type: string
        description: >
          Start date for special price in Y-m-d
          H:i:s format.
      price_to:
        type: string
        description: >
          End date for special price in Y-m-d
          H:i:s format.
      extension_attributes:
        $ref: '#/definitions/catalog-data-special-price-extension-interface'
    required:
      - price
      - store_id
      - sku
      - price_from
      - price_to
  catalog-data-special-price-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\SpecialPriceInterface
  catalog-data-category-interface:
    type: object
    description: Category data interface.
    properties:
      id:
        type: integer
        description: Category id.
      parent_id:
        type: integer
        description: Parent category ID
      name:
        type: string
        description: Category name
      is_active:
        type: boolean
        description: Whether category is active
      position:
        type: integer
        description: Category position
      level:
        type: integer
        description: Category level
      children:
        type: string
        description: Children ids comma separated.
      created_at:
        type: string
        description: Category creation date and time.
      updated_at:
        type: string
        description: Category last update date and time.
      path:
        type: string
        description: Category full path.
      available_sort_by:
        type: array
        description: Available sort by for category.
        items:
          type: string
      include_in_menu:
        type: boolean
        description: Category is included in menu.
      extension_attributes:
        $ref: '#/definitions/catalog-data-category-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
  catalog-data-category-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\CategoryInterface
  catalog-data-category-tree-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
      parent_id:
        type: integer
        description: Parent category ID
      name:
        type: string
        description: Category name
      is_active:
        type: boolean
        description: Whether category is active
      position:
        type: integer
        description: Category position
      level:
        type: integer
        description: Category level
      product_count:
        type: integer
        description: Product count
      children_data:
        type: array
        items:
          $ref: '#/definitions/catalog-data-category-tree-interface'
    required:
      - parent_id
      - name
      - is_active
      - position
      - level
      - product_count
      - children_data
  catalog-data-category-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Categories
        items:
          $ref: '#/definitions/catalog-data-category-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  catalog-data-product-custom-option-type-interface:
    type: object
    description: ""
    properties:
      label:
        type: string
        description: Option type label
      code:
        type: string
        description: Option type code
      group:
        type: string
        description: Option type group
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-custom-option-type-extension-interface'
    required:
      - label
      - code
      - group
  catalog-data-product-custom-option-type-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductCustomOptionTypeInterface
  catalog-data-product-link-type-interface:
    type: object
    description: ""
    properties:
      code:
        type: integer
        description: Link type code
      name:
        type: string
        description: Link type name
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-link-type-extension-interface'
    required:
      - code
      - name
  catalog-data-product-link-type-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductLinkTypeInterface
  catalog-data-product-link-attribute-interface:
    type: object
    description: ""
    properties:
      code:
        type: string
        description: Attribute code
      type:
        type: string
        description: Attribute type
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-link-attribute-extension-interface'
    required:
      - code
      - type
  catalog-data-product-link-attribute-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductLinkAttributeInterface
  catalog-data-category-product-link-interface:
    type: object
    description: ""
    properties:
      sku:
        type: string
      position:
        type: integer
      category_id:
        type: string
        description: Category id
      extension_attributes:
        $ref: '#/definitions/catalog-data-category-product-link-extension-interface'
    required:
      - category_id
  catalog-data-category-product-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\CategoryProductLinkInterface
  catalog-data-product-website-link-interface:
    type: object
    description: ""
    properties:
      sku:
        type: string
      website_id:
        type: integer
        description: Website ids
    required:
      - sku
      - website_id
  catalog-data-product-render-search-results-interface:
    type: object
    description: >
      Dto that holds render information about
      products
    properties:
      items:
        type: array
        description: List of products rendered information
        items:
          $ref: '#/definitions/catalog-data-product-render-interface'
    required:
      - items
  catalog-data-product-render-interface:
    type: object
    description: >
      Represents Data Object which holds
      enough information to render product
      This information is put into part as Add
      To Cart or Add to Compare Data or Price
      Data
    properties:
      add_to_cart_button:
        $ref: '#/definitions/catalog-data-product-render-button-interface'
      add_to_compare_button:
        $ref: '#/definitions/catalog-data-product-render-button-interface'
      price_info:
        $ref: '#/definitions/catalog-data-product-render-price-info-interface'
      images:
        type: array
        description: >
          Enough information, that needed to
          render image on front
        items:
          $ref: '#/definitions/catalog-data-product-render-image-interface'
      url:
        type: string
        description: Product url
      id:
        type: integer
        description: Product identifier
      name:
        type: string
        description: Product name
      type:
        type: string
        description: >
          Product type. Such as bundle, grouped,
          simple, etc...
      is_salable:
        type: string
        description: >
          Information about product saleability
          (In Stock)
      store_id:
        type: integer
        description: >
          Information about current store id or
          requested store id
      currency_code:
        type: string
        description: >
          Current or desired currency code to
          product
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-render-extension-interface'
    required:
      - add_to_cart_button
      - add_to_compare_button
      - price_info
      - images
      - url
      - id
      - name
      - type
      - is_salable
      - store_id
      - currency_code
      - extension_attributes
  catalog-data-product-render-button-interface:
    type: object
    description: 'Button interface. This interface represents all manner of product buttons: add to cart, add to compare, etc... The buttons describes by this interface should have interaction with backend'
    properties:
      post_data:
        type: string
        description: Post data
      url:
        type: string
        description: Url, needed to add product to cart
      required_options:
        type: boolean
        description: >
          Flag whether a product has options or
          not
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-render-button-extension-interface'
    required:
      - post_data
      - url
      - required_options
  catalog-data-product-render-button-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductRender\ButtonInterface
  catalog-data-product-render-price-info-interface:
    type: object
    description: Price interface.
    properties:
      final_price:
        type: number
        description: Final price
      max_price:
        type: number
        description: Max price of a product
      max_regular_price:
        type: number
        description: Max regular price
      minimal_regular_price:
        type: number
        description: Minimal regular price
      special_price:
        type: number
        description: Special price
      minimal_price:
        type: number
        description: Minimal price
      regular_price:
        type: number
        description: Regular price
      formatted_prices:
        $ref: '#/definitions/catalog-data-product-render-formatted-price-info-interface'
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-render-price-info-extension-interface'
    required:
      - final_price
      - max_price
      - max_regular_price
      - minimal_regular_price
      - special_price
      - minimal_price
      - regular_price
      - formatted_prices
  catalog-data-product-render-formatted-price-info-interface:
    type: object
    description: 'Formatted Price interface. Aggregate formatted html with price representations. E.g.: <span class="price">$9.00</span> Consider currency, rounding and html'
    properties:
      final_price:
        type: string
        description: Html with final price
      max_price:
        type: string
        description: Max price of a product
      minimal_price:
        type: string
        description: >
          The minimal price of the product or
          variation
      max_regular_price:
        type: string
        description: Max regular price
      minimal_regular_price:
        type: string
        description: Minimal regular price
      special_price:
        type: string
        description: Special price
      regular_price:
        type: string
        description: 'Price - is price of product without discounts and special price with taxes and fixed product tax'
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-render-formatted-price-info-extension-interface'
    required:
      - final_price
      - max_price
      - minimal_price
      - max_regular_price
      - minimal_regular_price
      - special_price
      - regular_price
  catalog-data-product-render-formatted-price-info-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductRender\FormattedPriceInfoInterface
  catalog-data-product-render-price-info-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductRender\PriceInfoInterface
    properties:
      msrp:
        $ref: '#/definitions/msrp-data-product-render-msrp-price-info-interface'
      tax_adjustments:
        $ref: '#/definitions/catalog-data-product-render-price-info-interface'
      weee_attributes:
        type: array
        items:
          $ref: '#/definitions/weee-data-product-render-weee-adjustment-attribute-interface'
      weee_adjustment:
        type: string
  msrp-data-product-render-msrp-price-info-interface:
    type: object
    description: Price interface.
    properties:
      msrp_price:
        type: string
      is_applicable:
        type: string
      is_shown_price_on_gesture:
        type: string
      msrp_message:
        type: string
      explanation_message:
        type: string
      extension_attributes:
        $ref: '#/definitions/msrp-data-product-render-msrp-price-info-extension-interface'
    required:
      - msrp_price
      - is_applicable
      - is_shown_price_on_gesture
      - msrp_message
      - explanation_message
  msrp-data-product-render-msrp-price-info-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Msrp\Api\Data\ProductRender\MsrpPriceInfoInterface
  weee-data-product-render-weee-adjustment-attribute-interface:
    type: object
    description: >
      List of all weee attributes, their
      amounts, etc.., that product has
    properties:
      amount:
        type: string
        description: Weee attribute amount
      tax_amount:
        type: string
        description: >
          Tax which is calculated to fixed product
          tax attribute
      tax_amount_incl_tax:
        type: string
        description: Tax amount of weee attribute
      amount_excl_tax:
        type: string
        description: Product amount exclude tax
      attribute_code:
        type: string
        description: Weee attribute code
      extension_attributes:
        $ref: '#/definitions/weee-data-product-render-weee-adjustment-attribute-extension-interface'
    required:
      - amount
      - tax_amount
      - tax_amount_incl_tax
      - amount_excl_tax
      - attribute_code
      - extension_attributes
  weee-data-product-render-weee-adjustment-attribute-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Weee\Api\Data\ProductRender\WeeeAdjustmentAttributeInterface
  catalog-data-product-render-image-interface:
    type: object
    description: >
      Product Render image interface.
      Represents physical characteristics of
      image, that can be used in product
      listing or product view
    properties:
      url:
        type: string
        description: Image url
      code:
        type: string
        description: Image code
      height:
        type: number
        description: Image height
      width:
        type: number
        description: Image width in px
      label:
        type: string
        description: Image label
      resized_width:
        type: number
        description: Resize width
      resized_height:
        type: number
        description: Resize height
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-render-image-extension-interface'
    required:
      - url
      - code
      - height
      - width
      - label
      - resized_width
      - resized_height
  catalog-data-product-render-image-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductRender\ImageInterface
  catalog-data-product-render-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductRenderInterface
    properties:
      review_html:
        type: string
      wishlist_button:
        $ref: '#/definitions/catalog-data-product-render-button-interface'
      availability:
        type: string
  catalog-inventory-data-stock-item-collection-interface:
    type: object
    description: Interface StockItemCollectionInterface
    properties:
      items:
        type: array
        description: Items
        items:
          $ref: '#/definitions/catalog-inventory-data-stock-item-interface'
      search_criteria:
        $ref: '#/definitions/catalog-inventory-stock-item-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  catalog-inventory-stock-item-criteria-interface:
    type: object
    description: Interface StockItemCriteriaInterface
    properties:
      mapper_interface_name:
        type: string
        description: Associated Mapper Interface name
      criteria_list:
        type: array
        description: >
          Criteria objects added to current
          Composite Criteria
        items:
          $ref: '#/definitions/framework-criteria-interface'
      filters:
        type: array
        description: List of filters
        items:
          type: string
      orders:
        type: array
        description: Ordering criteria
        items:
          type: string
      limit:
        type: array
        description: Limit
        items:
          type: string
    required:
      - mapper_interface_name
      - criteria_list
      - filters
      - orders
      - limit
  framework-criteria-interface:
    type: object
    description: Interface CriteriaInterface
    properties:
      mapper_interface_name:
        type: string
        description: Associated Mapper Interface name
      criteria_list:
        type: array
        description: >
          Criteria objects added to current
          Composite Criteria
        items:
          $ref: '#/definitions/framework-criteria-interface'
      filters:
        type: array
        description: List of filters
        items:
          type: string
      orders:
        type: array
        description: Ordering criteria
        items:
          type: string
      limit:
        type: array
        description: Limit
        items:
          type: string
    required:
      - mapper_interface_name
      - criteria_list
      - filters
      - orders
      - limit
  catalog-inventory-data-stock-status-interface:
    type: object
    description: Interface StockStatusInterface
    properties:
      product_id:
        type: integer
      stock_id:
        type: integer
      qty:
        type: integer
      stock_status:
        type: integer
      stock_item:
        $ref: '#/definitions/catalog-inventory-data-stock-item-interface'
      extension_attributes:
        $ref: '#/definitions/catalog-inventory-data-stock-status-extension-interface'
    required:
      - product_id
      - stock_id
      - qty
      - stock_status
      - stock_item
  catalog-inventory-data-stock-status-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\CatalogInventory\Api\Data\StockStatusInterface
  framework-search-search-result-interface:
    type: object
    description: Interface SearchResultInterface
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/framework-search-document-interface'
      aggregations:
        $ref: '#/definitions/framework-search-aggregation-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - aggregations
      - search_criteria
      - total_count
  framework-search-document-interface:
    type: object
    description: Interface Search Document
    properties:
      id:
        type: integer
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - id
  framework-search-aggregation-interface:
    type: object
    description: >
      Interface Aggregation to get faceted
      data
    properties:
      buckets:
        type: array
        description: All Document fields
        items:
          $ref: '#/definitions/framework-search-bucket-interface'
      bucket_names:
        type: array
        description: Document field names
        items:
          type: string
    required:
      - buckets
      - bucket_names
  framework-search-bucket-interface:
    type: object
    description: Interface for facet Bucket
    properties:
      name:
        type: string
        description: Field name
      values:
        type: array
        description: Field values
        items:
          $ref: '#/definitions/framework-search-aggregation-value-interface'
    required:
      - name
      - values
  framework-search-aggregation-value-interface:
    type: object
    description: Interface Aggregation Value
    properties:
      value:
        type: string
        description: Aggregation
      metrics:
        type: array
        description: Metrics
        items:
          type: string
    required:
      - value
      - metrics
  framework-search-search-criteria-interface:
    type: object
    description: Interface SearchCriteriaInterface
    properties:
      request_name:
        type: string
      filter_groups:
        type: array
        description: A list of filter groups.
        items:
          $ref: '#/definitions/framework-search-filter-group'
      sort_orders:
        type: array
        description: Sort order.
        items:
          $ref: '#/definitions/framework-sort-order'
      page_size:
        type: integer
        description: Page size.
      current_page:
        type: integer
        description: Current page.
    required:
      - request_name
      - filter_groups
  quote-data-cart-interface:
    type: object
    description: Interface CartInterface
    properties:
      id:
        type: integer
        description: Cart/quote ID.
      created_at:
        type: string
        description: >
          Cart creation date and time. Otherwise,
          null.
      updated_at:
        type: string
        description: >
          Cart last update date and time.
          Otherwise, null.
      converted_at:
        type: string
        description: >
          Cart conversion date and time.
          Otherwise, null.
      is_active:
        type: boolean
        description: >
          Active status flag value. Otherwise,
          null.
      is_virtual:
        type: boolean
        description: Virtual flag value. Otherwise, null.
      items:
        type: array
        description: Array of items. Otherwise, null.
        items:
          $ref: '#/definitions/quote-data-cart-item-interface'
      items_count:
        type: integer
        description: >
          Number of different items or products in
          the cart. Otherwise, null.
      items_qty:
        type: number
        description: >
          Total quantity of all cart items.
          Otherwise, null.
      customer:
        $ref: '#/definitions/customer-data-customer-interface'
      billing_address:
        $ref: '#/definitions/quote-data-address-interface'
      reserved_order_id:
        type: string
        description: Reserved order ID. Otherwise, null.
      orig_order_id:
        type: integer
        description: Original order ID. Otherwise, null.
      currency:
        $ref: '#/definitions/quote-data-currency-interface'
      customer_is_guest:
        type: boolean
        description: >
          For guest customers, false for logged in
          customers
      customer_note:
        type: string
        description: Notice text
      customer_note_notify:
        type: boolean
        description: Customer notification flag
      customer_tax_class_id:
        type: integer
        description: Customer tax class ID.
      store_id:
        type: integer
        description: Store identifier
      extension_attributes:
        $ref: '#/definitions/quote-data-cart-extension-interface'
    required:
      - id
      - customer
      - store_id
  quote-data-cart-item-interface:
    type: object
    description: Interface CartItemInterface
    properties:
      item_id:
        type: integer
        description: Item ID. Otherwise, null.
      sku:
        type: string
        description: Product SKU. Otherwise, null.
      qty:
        type: number
        description: Product quantity.
      name:
        type: string
        description: Product name. Otherwise, null.
      price:
        type: number
        description: Product price. Otherwise, null.
      product_type:
        type: string
        description: Product type. Otherwise, null.
      quote_id:
        type: string
        description: Quote id.
      product_option:
        $ref: '#/definitions/quote-data-product-option-interface'
      extension_attributes:
        $ref: '#/definitions/quote-data-cart-item-extension-interface'
    required:
      - qty
      - quote_id
  quote-data-product-option-interface:
    type: object
    description: Product option interface
    properties:
      extension_attributes:
        $ref: '#/definitions/quote-data-product-option-extension-interface'
  quote-data-product-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\ProductOptionInterface
    properties:
      custom_options:
        type: array
        items:
          $ref: '#/definitions/catalog-data-custom-option-interface'
      configurable_item_options:
        type: array
        items:
          $ref: '#/definitions/configurable-product-data-configurable-item-option-value-interface'
      downloadable_option:
        $ref: '#/definitions/downloadable-data-downloadable-option-interface'
      bundle_options:
        type: array
        items:
          $ref: '#/definitions/bundle-data-bundle-option-interface'
      grouped_options:
        type: array
        items:
          $ref: '#/definitions/grouped-product-data-grouped-options-interface'
  catalog-data-custom-option-interface:
    type: object
    description: Interface CustomOptionInterface
    properties:
      option_id:
        type: string
        description: Option id
      option_value:
        type: string
        description: Option value
      extension_attributes:
        $ref: '#/definitions/catalog-data-custom-option-extension-interface'
    required:
      - option_id
      - option_value
  catalog-data-custom-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\CustomOptionInterface
    properties:
      file_info:
        $ref: '#/definitions/framework-data-image-content-interface'
  configurable-product-data-configurable-item-option-value-interface:
    type: object
    description: >
      Interface
      ConfigurableItemOptionValueInterface
    properties:
      option_id:
        type: string
        description: Option SKU
      option_value:
        type: integer
        description: Item id
      extension_attributes:
        $ref: '#/definitions/configurable-product-data-configurable-item-option-value-extension-interface'
    required:
      - option_id
  configurable-product-data-configurable-item-option-value-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\ConfigurableProduct\Api\Data\ConfigurableItemOptionValueInterface
  downloadable-data-downloadable-option-interface:
    type: object
    description: Downloadable Option
    properties:
      downloadable_links:
        type: array
        description: The list of downloadable links
        items:
          type: integer
    required:
      - downloadable_links
  bundle-data-bundle-option-interface:
    type: object
    description: Interface BundleOptionInterface
    properties:
      option_id:
        type: integer
        description: Bundle option id.
      option_qty:
        type: integer
        description: Bundle option quantity.
      option_selections:
        type: array
        description: Bundle option selection ids.
        items:
          type: integer
      extension_attributes:
        $ref: '#/definitions/bundle-data-bundle-option-extension-interface'
    required:
      - option_id
      - option_qty
      - option_selections
  bundle-data-bundle-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Bundle\Api\Data\BundleOptionInterface
  grouped-product-data-grouped-options-interface:
    type: object
    description: >
      Represents `product item id with qty` of
      a grouped product.
    properties:
      id:
        type: integer
        description: Associated product id
      qty:
        type: integer
        description: Associated product qty
      extension_attributes:
        $ref: '#/definitions/grouped-product-data-grouped-options-extension-interface'
  grouped-product-data-grouped-options-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\GroupedProduct\Api\Data\GroupedOptionsInterface
  quote-data-cart-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\CartItemInterface
    properties:
      discounts:
        type: array
        items:
          $ref: '#/definitions/sales-rule-data-rule-discount-interface'
      product_image:
        type: string
      price_uah:
        type: string
      final_price_uah:
        type: string
      seller_id:
        type: string
      seller_name:
        type: string
      status:
        type: string
  quote-data-address-interface:
    type: object
    description: Interface AddressInterface
    properties:
      id:
        type: integer
        description: Id
      region:
        type: string
        description: Region name
      region_id:
        type: integer
        description: Region id
      region_code:
        type: string
        description: Region code
      country_id:
        type: string
        description: Country id
      street:
        type: array
        description: Street
        items:
          type: string
      company:
        type: string
        description: Company
      telephone:
        type: string
        description: Telephone number
      fax:
        type: string
        description: Fax number
      postcode:
        type: string
        description: Postcode
      city:
        type: string
        description: City name
      firstname:
        type: string
        description: First name
      lastname:
        type: string
        description: Last name
      middlename:
        type: string
        description: Middle name
      prefix:
        type: string
        description: Prefix
      suffix:
        type: string
        description: Suffix
      vat_id:
        type: string
        description: Vat id
      customer_id:
        type: integer
        description: Customer id
      email:
        type: string
        description: Billing/shipping email
      same_as_billing:
        type: integer
        description: Same as billing flag
      customer_address_id:
        type: integer
        description: Customer address id
      save_in_address_book:
        type: integer
        description: Save in address book flag
      extension_attributes:
        $ref: '#/definitions/quote-data-address-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - region
      - region_id
      - region_code
      - country_id
      - street
      - telephone
      - postcode
      - city
      - firstname
      - lastname
      - email
  quote-data-address-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\AddressInterface
    properties:
      pickup_location_code:
        type: string
      discounts:
        type: array
        items:
          $ref: '#/definitions/sales-rule-data-rule-discount-interface'
      advanced_conditions:
        $ref: '#/definitions/amasty-conditions-data-address-interface'
      sending_without_call:
        type: string
      flat:
        type: string
      house:
        type: string
      point:
        type: string
      city:
        type: string
      comments:
        type: string
      shipping_method:
        type: string
      flatrate_code:
        type: string
      payment:
        type: string
      city_ref:
        type: string
      street_ref:
        type: string
      warehouse_ref:
        type: string
      city_ukrposhta:
        type: string
      city_country:
        type: string
      city_postcode:
        type: string
      shipping_errors:
        type: string
  amasty-conditions-data-address-interface:
    type: object
    description: ""
    properties:
      payment_method:
        type: string
        description: Payment method
      shipping_address_line:
        type: array
        description: Address line
        items:
          type: string
      custom_attributes:
        type: string
        description: Custom attributes
      city:
        type: string
        description: City
      billing_address_country:
        type: string
        description: Billing address country
      currency:
        type: string
    required:
      - payment_method
      - shipping_address_line
      - custom_attributes
      - city
      - billing_address_country
      - currency
  quote-data-currency-interface:
    type: object
    description: Interface CurrencyInterface
    properties:
      global_currency_code:
        type: string
        description: Global currency code
      base_currency_code:
        type: string
        description: Base currency code
      store_currency_code:
        type: string
        description: Store currency code
      quote_currency_code:
        type: string
        description: Quote currency code
      store_to_base_rate:
        type: number
        description: Store currency to base currency rate
      store_to_quote_rate:
        type: number
        description: Store currency to quote currency rate
      base_to_global_rate:
        type: number
        description: Base currency to global currency rate
      base_to_quote_rate:
        type: number
        description: Base currency to quote currency rate
      extension_attributes:
        $ref: '#/definitions/quote-data-currency-extension-interface'
  quote-data-currency-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\CurrencyInterface
  quote-data-cart-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\CartInterface
    properties:
      shipping_assignments:
        type: array
        items:
          $ref: '#/definitions/quote-data-shipping-assignment-interface'
      am_acart_quote_email:
        $ref: '#/definitions/amasty-acart-data-quote-email-interface'
      is_reorder:
        type: integer
      seller_items:
        type: array
        items:
          $ref: '#/definitions/biotus-sales-data-seller-items-interface'
      min_amount_notification:
        type: string
  quote-data-shipping-assignment-interface:
    type: object
    description: Interface ShippingAssignmentInterface
    properties:
      shipping:
        $ref: '#/definitions/quote-data-shipping-interface'
      items:
        type: array
        items:
          $ref: '#/definitions/quote-data-cart-item-interface'
      extension_attributes:
        $ref: '#/definitions/quote-data-shipping-assignment-extension-interface'
    required:
      - shipping
      - items
  quote-data-shipping-interface:
    type: object
    description: Interface ShippingInterface
    properties:
      address:
        $ref: '#/definitions/quote-data-address-interface'
      method:
        type: string
        description: Shipping method
      extension_attributes:
        $ref: '#/definitions/quote-data-shipping-extension-interface'
    required:
      - address
      - method
  quote-data-shipping-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\ShippingInterface
  quote-data-shipping-assignment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\ShippingAssignmentInterface
  amasty-acart-data-quote-email-interface:
    type: object
    description: ""
    properties:
      quote_email_id:
        type: integer
      quote_id:
        type: integer
      customer_email:
        type: string
      extension_attributes:
        $ref: '#/definitions/amasty-acart-data-quote-email-extension-interface'
  amasty-acart-data-quote-email-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Amasty\Acart\Api\Data\QuoteEmailInterface
  biotus-sales-data-seller-items-interface:
    type: object
    description: ""
    properties:
      seller_name:
        type: string
      seller_id:
        type: integer
      seller_items:
        type: array
        items:
          type: string
    required:
      - seller_name
      - seller_id
      - seller_items
  quote-data-cart-search-results-interface:
    type: object
    description: Interface CartSearchResultsInterface
    properties:
      items:
        type: array
        description: Carts list.
        items:
          $ref: '#/definitions/quote-data-cart-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  quote-data-payment-interface:
    type: object
    description: Interface PaymentInterface
    properties:
      po_number:
        type: string
        description: Purchase order number
      method:
        type: string
        description: Payment method code
      additional_data:
        type: array
        description: Payment additional details
        items:
          type: string
      extension_attributes:
        $ref: '#/definitions/quote-data-payment-extension-interface'
    required:
      - method
  quote-data-payment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\PaymentInterface
    properties:
      agreement_ids:
        type: array
        items:
          type: string
  quote-data-shipping-method-interface:
    type: object
    description: Interface ShippingMethodInterface
    properties:
      carrier_code:
        type: string
        description: Shipping carrier code.
      method_code:
        type: string
        description: Shipping method code.
      carrier_title:
        type: string
        description: Shipping carrier title. Otherwise, null.
      method_title:
        type: string
        description: Shipping method title. Otherwise, null.
      amount:
        type: number
        description: Shipping amount in store currency.
      base_amount:
        type: number
        description: Shipping amount in base currency.
      available:
        type: boolean
        description: >
          The value of the availability flag for
          the current shipping method.
      extension_attributes:
        $ref: '#/definitions/quote-data-shipping-method-extension-interface'
      error_message:
        type: string
        description: Shipping Error message.
      price_excl_tax:
        type: number
        description: Shipping price excl tax.
      price_incl_tax:
        type: number
        description: Shipping price incl tax.
    required:
      - carrier_code
      - method_code
      - amount
      - base_amount
      - available
      - error_message
      - price_excl_tax
      - price_incl_tax
  quote-data-shipping-method-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\ShippingMethodInterface
    properties:
      free_price:
        type: string
      shipping_content:
        type: string
      shipping_note:
        type: string
      shipping_message:
        type: string
      calc_price:
        type: string
      sale_sticker:
        type: boolean
      comments:
        type: string
      map_shipping:
        type: string
  quote-data-payment-method-interface:
    type: object
    description: Interface PaymentMethodInterface
    properties:
      code:
        type: string
        description: Payment method code
      title:
        type: string
        description: Payment method title
    required:
      - code
      - title
  quote-data-totals-interface:
    type: object
    description: Interface TotalsInterface
    properties:
      grand_total:
        type: number
        description: Grand total in quote currency
      base_grand_total:
        type: number
        description: Grand total in base currency
      subtotal:
        type: number
        description: Subtotal in quote currency
      base_subtotal:
        type: number
        description: Subtotal in base currency
      discount_amount:
        type: number
        description: Discount amount in quote currency
      base_discount_amount:
        type: number
        description: Discount amount in base currency
      subtotal_with_discount:
        type: number
        description: >
          Subtotal in quote currency with applied
          discount
      base_subtotal_with_discount:
        type: number
        description: >
          Subtotal in base currency with applied
          discount
      shipping_amount:
        type: number
        description: Shipping amount in quote currency
      base_shipping_amount:
        type: number
        description: Shipping amount in base currency
      shipping_discount_amount:
        type: number
        description: >
          Shipping discount amount in quote
          currency
      base_shipping_discount_amount:
        type: number
        description: >
          Shipping discount amount in base
          currency
      tax_amount:
        type: number
        description: Tax amount in quote currency
      base_tax_amount:
        type: number
        description: Tax amount in base currency
      weee_tax_applied_amount:
        type: number
        description: >
          Item weee tax applied amount in quote
          currency.
      shipping_tax_amount:
        type: number
        description: Shipping tax amount in quote currency
      base_shipping_tax_amount:
        type: number
        description: Shipping tax amount in base currency
      subtotal_incl_tax:
        type: number
        description: Subtotal including tax in quote currency
      base_subtotal_incl_tax:
        type: number
        description: Subtotal including tax in base currency
      shipping_incl_tax:
        type: number
        description: Shipping including tax in quote currency
      base_shipping_incl_tax:
        type: number
        description: Shipping including tax in base currency
      base_currency_code:
        type: string
        description: Base currency code
      quote_currency_code:
        type: string
        description: Quote currency code
      coupon_code:
        type: string
        description: Applied coupon code
      items_qty:
        type: integer
        description: Items qty
      items:
        type: array
        description: Totals by items
        items:
          $ref: '#/definitions/quote-data-totals-item-interface'
      total_segments:
        type: array
        description: Dynamically calculated totals
        items:
          $ref: '#/definitions/quote-data-total-segment-interface'
      extension_attributes:
        $ref: '#/definitions/quote-data-totals-extension-interface'
    required:
      - weee_tax_applied_amount
      - total_segments
  quote-data-totals-item-interface:
    type: object
    description: Interface TotalsItemInterface
    properties:
      item_id:
        type: integer
        description: Item id
      price:
        type: number
        description: Item price in quote currency.
      base_price:
        type: number
        description: Item price in base currency.
      qty:
        type: number
        description: Item quantity.
      row_total:
        type: number
        description: Row total in quote currency.
      base_row_total:
        type: number
        description: Row total in base currency.
      row_total_with_discount:
        type: number
        description: >
          Row total with discount in quote
          currency. Otherwise, null.
      tax_amount:
        type: number
        description: >
          Tax amount in quote currency. Otherwise,
          null.
      base_tax_amount:
        type: number
        description: >
          Tax amount in base currency. Otherwise,
          null.
      tax_percent:
        type: number
        description: Tax percent. Otherwise, null.
      discount_amount:
        type: number
        description: >
          Discount amount in quote currency.
          Otherwise, null.
      base_discount_amount:
        type: number
        description: >
          Discount amount in base currency.
          Otherwise, null.
      discount_percent:
        type: number
        description: Discount percent. Otherwise, null.
      price_incl_tax:
        type: number
        description: >
          Price including tax in quote currency.
          Otherwise, null.
      base_price_incl_tax:
        type: number
        description: >
          Price including tax in base currency.
          Otherwise, null.
      row_total_incl_tax:
        type: number
        description: >
          Row total including tax in quote
          currency. Otherwise, null.
      base_row_total_incl_tax:
        type: number
        description: >
          Row total including tax in base
          currency. Otherwise, null.
      options:
        type: string
        description: Item price in quote currency.
      weee_tax_applied_amount:
        type: number
        description: >
          Item weee tax applied amount in quote
          currency.
      weee_tax_applied:
        type: string
        description: Item weee tax applied in quote currency.
      extension_attributes:
        $ref: '#/definitions/quote-data-totals-item-extension-interface'
      name:
        type: string
        description: Product name. Otherwise, null.
    required:
      - item_id
      - price
      - base_price
      - qty
      - row_total
      - base_row_total
      - options
      - weee_tax_applied_amount
      - weee_tax_applied
  quote-data-totals-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\TotalsItemInterface
    properties:
      amasty_promo:
        $ref: '#/definitions/amasty-promo-data-totals-item-image-interface'
      status:
        type: string
      promotion_id:
        type: integer
      seller_id:
        type: integer
      stock_qty:
        type: integer
  amasty-promo-data-totals-item-image-interface:
    type: object
    description: ""
    properties:
      image_src:
        type: string
      image_alt:
        type: string
      image_width:
        type: string
      image_height:
        type: string
    required:
      - image_src
      - image_alt
      - image_width
      - image_height
  quote-data-total-segment-interface:
    type: object
    description: Interface TotalsInterface
    properties:
      code:
        type: string
        description: Code
      title:
        type: string
        description: Total title
      value:
        type: number
        description: Total value
      area:
        type: string
        description: Display area code.
      extension_attributes:
        $ref: '#/definitions/quote-data-total-segment-extension-interface'
    required:
      - code
      - value
  quote-data-total-segment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\TotalSegmentInterface
    properties:
      tax_grandtotal_details:
        type: array
        items:
          $ref: '#/definitions/tax-data-grand-total-details-interface'
      is_free_shipping_rule:
        type: string
  tax-data-grand-total-details-interface:
    type: object
    description: Interface GrandTotalDetailsInterface
    properties:
      amount:
        type: number
        description: Tax amount value
      rates:
        type: array
        description: Tax rates info
        items:
          $ref: '#/definitions/tax-data-grand-total-rates-interface'
      group_id:
        type: integer
        description: Group identifier
    required:
      - amount
      - rates
      - group_id
  tax-data-grand-total-rates-interface:
    type: object
    description: Interface GrandTotalRatesInterface
    properties:
      percent:
        type: string
        description: Tax percentage value
      title:
        type: string
        description: Rate title
    required:
      - percent
      - title
  quote-data-totals-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\TotalsInterface
    properties:
      coupon_label:
        type: string
      amcoupon_discount_breakdown:
        type: array
        items:
          $ref: '#/definitions/amasty-coupons-data-discount-breakdown-line-interface'
      amcoupon_codes_string:
        type: string
      amasty_rewards_highlight:
        $ref: '#/definitions/amasty-rewards-data-highlight-interface'
      amrule_discount_breakdown:
        type: array
        items:
          $ref: '#/definitions/amasty-rules-data-discount-breakdown-line-interface'
  amasty-coupons-data-discount-breakdown-line-interface:
    type: object
    description: ""
    properties:
      rule_name:
        type: string
      rule_amount:
        type: string
    required:
      - rule_amount
  amasty-rewards-data-highlight-interface:
    type: object
    description: ""
    properties:
      visible:
        type: boolean
      caption_color:
        type: string
      caption_text:
        type: string
      registration_link:
        type: string
      need_to_change_message:
        type: integer
    required:
      - visible
      - need_to_change_message
  amasty-rules-data-discount-breakdown-line-interface:
    type: object
    description: ""
    properties:
      rule_name:
        type: string
      rule_amount:
        type: string
    required:
      - rule_amount
  quote-data-totals-additional-data-interface:
    type: object
    description: Additional data for totals collection.
    properties:
      extension_attributes:
        $ref: '#/definitions/quote-data-totals-additional-data-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
  quote-data-totals-additional-data-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Quote\Api\Data\TotalsAdditionalDataInterface
    properties:
      gift_messages:
        type: array
        items:
          $ref: '#/definitions/gift-message-data-message-interface'
  gift-message-data-message-interface:
    type: object
    description: Interface MessageInterface
    properties:
      gift_message_id:
        type: integer
        description: Gift message ID. Otherwise, null.
      customer_id:
        type: integer
        description: Customer ID. Otherwise, null.
      sender:
        type: string
        description: Sender name.
      recipient:
        type: string
        description: Recipient name.
      message:
        type: string
        description: Message text.
      extension_attributes:
        $ref: '#/definitions/gift-message-data-message-extension-interface'
    required:
      - sender
      - recipient
      - message
  gift-message-data-message-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\GiftMessage\Api\Data\MessageInterface
    properties:
      entity_id:
        type: string
      entity_type:
        type: string
  two-factor-auth-provider-interface:
    type: object
    description: 2FA provider interface
    properties:
      enabled:
        type: boolean
        description: >
          True if this provider has been enabled
          by admin
      engine:
        $ref: '#/definitions/two-factor-auth-engine-interface'
      code:
        type: string
        description: Provider code
      name:
        type: string
        description: Provider name
      icon:
        type: string
        description: Icon
      reset_allowed:
        type: boolean
        description: >
          True if this provider configuration can
          be reset
      configure_action:
        type: string
        description: Configure action
      auth_action:
        type: string
        description: Auth action
      extra_actions:
        type: array
        description: Allowed extra actions
        items:
          type: string
    required:
      - enabled
      - engine
      - code
      - name
      - icon
      - reset_allowed
      - configure_action
      - auth_action
      - extra_actions
  two-factor-auth-engine-interface:
    type: object
    description: 2FA engine interface
    properties:
      enabled:
        type: boolean
        description: >
          True if this provider has been enabled
          by admin
    required:
      - enabled
  two-factor-auth-data-google-configure-interface:
    type: object
    description: Google configuration data interface
    properties:
      qr_code_base64:
        type: string
        description: Value for QR code base 64
      secret_code:
        type: string
        description: Value for secret code
      extension_attributes:
        $ref: '#/definitions/two-factor-auth-data-google-configure-extension-interface'
    required:
      - qr_code_base64
      - secret_code
  two-factor-auth-data-google-configure-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\TwoFactorAuth\Api\Data\GoogleConfigureInterface
  two-factor-auth-data-authy-device-interface:
    type: object
    description: Authy device data interface
    properties:
      country:
        type: string
        description: The country
      phone_number:
        type: string
        description: The phone number
      method:
        type: string
        description: The method to authenticate with
      extension_attributes:
        $ref: '#/definitions/two-factor-auth-data-authy-device-extension-interface'
    required:
      - country
      - phone_number
      - method
  two-factor-auth-data-authy-device-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\TwoFactorAuth\Api\Data\AuthyDeviceInterface
  two-factor-auth-data-authy-registration-prompt-response-interface:
    type: object
    description: Response for device registration prompt
    properties:
      message:
        type: string
        description: The message
      expiration_seconds:
        type: string
        description: The seconds to expire
      extension_attributes:
        $ref: '#/definitions/two-factor-auth-data-authy-registration-prompt-response-extension-interface'
    required:
      - message
      - expiration_seconds
  two-factor-auth-data-authy-registration-prompt-response-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\TwoFactorAuth\Api\Data\AuthyRegistrationPromptResponseInterface
  two-factor-auth-data-u2f-web-authn-request-interface:
    type: object
    description: Represents a WebAuthn dataset
    properties:
      credential_request_options_json:
        type: string
        description: >
          The needed data to initiate a WebAuthn
          registration ceremony
      extension_attributes:
        $ref: '#/definitions/two-factor-auth-data-u2f-web-authn-request-extension-interface'
    required:
      - credential_request_options_json
  two-factor-auth-data-u2f-web-authn-request-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\TwoFactorAuth\Api\Data\U2fWebAuthnRequestInterface
  two-factor-auth-data-duo-data-interface:
    type: object
    description: Represents the data needed to use duo
    properties:
      signature:
        type: string
        description: The signature
      api_hostname:
        type: string
        description: The api hostname
      extension_attributes:
        $ref: '#/definitions/two-factor-auth-data-duo-data-extension-interface'
    required:
      - signature
      - api_hostname
  two-factor-auth-data-duo-data-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\TwoFactorAuth\Api\Data\DuoDataInterface
  sales-data-order-interface:
    type: object
    description: >
      Order interface. An order is a document
      that a web store issues to a customer.
      Magento generates a sales order that
      lists the product items, billing and
      shipping addresses, and shipping and
      payment methods. A corresponding
      external document, known as a purchase
      order, is emailed to the customer.
    properties:
      adjustment_negative:
        type: number
        description: Negative adjustment value.
      adjustment_positive:
        type: number
        description: Positive adjustment value.
      applied_rule_ids:
        type: string
        description: Applied rule IDs.
      base_adjustment_negative:
        type: number
        description: Base negative adjustment value.
      base_adjustment_positive:
        type: number
        description: Base positive adjustment value.
      base_currency_code:
        type: string
        description: Base currency code.
      base_discount_amount:
        type: number
        description: Base discount amount.
      base_discount_canceled:
        type: number
        description: Base discount canceled.
      base_discount_invoiced:
        type: number
        description: Base discount invoiced.
      base_discount_refunded:
        type: number
        description: Base discount refunded.
      base_grand_total:
        type: number
        description: Base grand total.
      base_discount_tax_compensation_amount:
        type: number
        description: Base discount tax compensation amount.
      base_discount_tax_compensation_invoiced:
        type: number
        description: Base discount tax compensation invoiced.
      base_discount_tax_compensation_refunded:
        type: number
        description: Base discount tax compensation refunded.
      base_shipping_amount:
        type: number
        description: Base shipping amount.
      base_shipping_canceled:
        type: number
        description: Base shipping canceled.
      base_shipping_discount_amount:
        type: number
        description: Base shipping discount amount.
      base_shipping_discount_tax_compensation_amnt:
        type: number
        description: >
          Base shipping discount tax compensation
          amount.
      base_shipping_incl_tax:
        type: number
        description: Base shipping including tax.
      base_shipping_invoiced:
        type: number
        description: Base shipping invoiced.
      base_shipping_refunded:
        type: number
        description: Base shipping refunded.
      base_shipping_tax_amount:
        type: number
        description: Base shipping tax amount.
      base_shipping_tax_refunded:
        type: number
        description: Base shipping tax refunded.
      base_subtotal:
        type: number
        description: Base subtotal.
      base_subtotal_canceled:
        type: number
        description: Base subtotal canceled.
      base_subtotal_incl_tax:
        type: number
        description: Base subtotal including tax.
      base_subtotal_invoiced:
        type: number
        description: Base subtotal invoiced.
      base_subtotal_refunded:
        type: number
        description: Base subtotal refunded.
      base_tax_amount:
        type: number
        description: Base tax amount.
      base_tax_canceled:
        type: number
        description: Base tax canceled.
      base_tax_invoiced:
        type: number
        description: Base tax invoiced.
      base_tax_refunded:
        type: number
        description: Base tax refunded.
      base_total_canceled:
        type: number
        description: Base total canceled.
      base_total_due:
        type: number
        description: Base total due.
      base_total_invoiced:
        type: number
        description: Base total invoiced.
      base_total_invoiced_cost:
        type: number
        description: Base total invoiced cost.
      base_total_offline_refunded:
        type: number
        description: Base total offline refunded.
      base_total_online_refunded:
        type: number
        description: Base total online refunded.
      base_total_paid:
        type: number
        description: Base total paid.
      base_total_qty_ordered:
        type: number
        description: Base total quantity ordered.
      base_total_refunded:
        type: number
        description: Base total refunded.
      base_to_global_rate:
        type: number
        description: Base-to-global rate.
      base_to_order_rate:
        type: number
        description: Base-to-order rate.
      billing_address_id:
        type: integer
        description: Billing address ID.
      can_ship_partially:
        type: integer
        description: Can-ship-partially flag value.
      can_ship_partially_item:
        type: integer
        description: Can-ship-partially-item flag value.
      coupon_code:
        type: string
        description: Coupon code.
      created_at:
        type: string
        description: Created-at timestamp.
      customer_dob:
        type: string
        description: >
          In keeping with current security and
          privacy best practices, be sure you are
          aware of any potential legal and
          security risks associated with the
          storage of customers’ full date of
          birth (month, day, year) along with
          other personal identifiers (e.g., full
          name) before collecting or processing
          such data.
      customer_email:
        type: string
        description: Customer email address.
      customer_firstname:
        type: string
        description: Customer first name.
      customer_gender:
        type: integer
        description: Customer gender.
      customer_group_id:
        type: integer
        description: Customer group ID.
      customer_id:
        type: integer
        description: Customer ID.
      customer_is_guest:
        type: integer
        description: Customer-is-guest flag value.
      customer_lastname:
        type: string
        description: Customer last name.
      customer_middlename:
        type: string
        description: Customer middle name.
      customer_note:
        type: string
        description: Customer note.
      customer_note_notify:
        type: integer
        description: Customer-note-notify flag value.
      customer_prefix:
        type: string
        description: Customer prefix.
      customer_suffix:
        type: string
        description: Customer suffix.
      customer_taxvat:
        type: string
        description: Customer value-added tax (VAT).
      discount_amount:
        type: number
        description: Discount amount.
      discount_canceled:
        type: number
        description: Discount canceled.
      discount_description:
        type: string
        description: Discount description.
      discount_invoiced:
        type: number
        description: Discount invoiced.
      discount_refunded:
        type: number
        description: Discount refunded amount.
      edit_increment:
        type: integer
        description: Edit increment value.
      email_sent:
        type: integer
        description: Email-sent flag value.
      entity_id:
        type: integer
        description: Order ID.
      ext_customer_id:
        type: string
        description: External customer ID.
      ext_order_id:
        type: string
        description: External order ID.
      forced_shipment_with_invoice:
        type: integer
        description: Forced-shipment-with-invoice flag value.
      global_currency_code:
        type: string
        description: Global currency code.
      grand_total:
        type: number
        description: Grand total.
      discount_tax_compensation_amount:
        type: number
        description: Discount tax compensation amount.
      discount_tax_compensation_invoiced:
        type: number
        description: >
          Discount tax compensation invoiced
          amount.
      discount_tax_compensation_refunded:
        type: number
        description: >
          Discount tax compensation refunded
          amount.
      hold_before_state:
        type: string
        description: Hold before state.
      hold_before_status:
        type: string
        description: Hold before status.
      increment_id:
        type: string
        description: Increment ID.
      is_virtual:
        type: integer
        description: Is-virtual flag value.
      order_currency_code:
        type: string
        description: Order currency code.
      original_increment_id:
        type: string
        description: Original increment ID.
      payment_authorization_amount:
        type: number
        description: Payment authorization amount.
      payment_auth_expiration:
        type: integer
        description: Payment authorization expiration date.
      protect_code:
        type: string
        description: Protect code.
      quote_address_id:
        type: integer
        description: Quote address ID.
      quote_id:
        type: integer
        description: Quote ID.
      relation_child_id:
        type: string
        description: Relation child ID.
      relation_child_real_id:
        type: string
        description: Relation child real ID.
      relation_parent_id:
        type: string
        description: Relation parent ID.
      relation_parent_real_id:
        type: string
        description: Relation parent real ID.
      remote_ip:
        type: string
        description: Remote IP address.
      shipping_amount:
        type: number
        description: Shipping amount.
      shipping_canceled:
        type: number
        description: Shipping canceled amount.
      shipping_description:
        type: string
        description: Shipping description.
      shipping_discount_amount:
        type: number
        description: Shipping discount amount.
      shipping_discount_tax_compensation_amount:
        type: number
        description: >
          Shipping discount tax compensation
          amount.
      shipping_incl_tax:
        type: number
        description: Shipping including tax amount.
      shipping_invoiced:
        type: number
        description: Shipping invoiced amount.
      shipping_refunded:
        type: number
        description: Shipping refunded amount.
      shipping_tax_amount:
        type: number
        description: Shipping tax amount.
      shipping_tax_refunded:
        type: number
        description: Shipping tax refunded amount.
      state:
        type: string
        description: State.
      status:
        type: string
        description: Status.
      store_currency_code:
        type: string
        description: Store currency code.
      store_id:
        type: integer
        description: Store ID.
      store_name:
        type: string
        description: Store name.
      store_to_base_rate:
        type: number
        description: Store-to-base rate.
      store_to_order_rate:
        type: number
        description: Store-to-order rate.
      subtotal:
        type: number
        description: Subtotal.
      subtotal_canceled:
        type: number
        description: Subtotal canceled amount.
      subtotal_incl_tax:
        type: number
        description: Subtotal including tax amount.
      subtotal_invoiced:
        type: number
        description: Subtotal invoiced amount.
      subtotal_refunded:
        type: number
        description: Subtotal refunded amount.
      tax_amount:
        type: number
        description: Tax amount.
      tax_canceled:
        type: number
        description: Tax canceled amount.
      tax_invoiced:
        type: number
        description: Tax invoiced amount.
      tax_refunded:
        type: number
        description: Tax refunded amount.
      total_canceled:
        type: number
        description: Total canceled.
      total_due:
        type: number
        description: Total due.
      total_invoiced:
        type: number
        description: Total invoiced amount.
      total_item_count:
        type: integer
        description: Total item count.
      total_offline_refunded:
        type: number
        description: Total offline refunded amount.
      total_online_refunded:
        type: number
        description: Total online refunded amount.
      total_paid:
        type: number
        description: Total paid.
      total_qty_ordered:
        type: number
        description: Total quantity ordered.
      total_refunded:
        type: number
        description: Total amount refunded.
      updated_at:
        type: string
        description: Updated-at timestamp.
      weight:
        type: number
        description: Weight.
      x_forwarded_for:
        type: string
        description: X-Forwarded-For field value.
      items:
        type: array
        description: Array of items.
        items:
          $ref: '#/definitions/sales-data-order-item-interface'
      billing_address:
        $ref: '#/definitions/sales-data-order-address-interface'
      payment:
        $ref: '#/definitions/sales-data-order-payment-interface'
      status_histories:
        type: array
        description: Array of status histories.
        items:
          $ref: '#/definitions/sales-data-order-status-history-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-order-extension-interface'
    required:
      - base_grand_total
      - customer_email
      - grand_total
      - items
  sales-data-order-item-interface:
    type: object
    description: >
      Order item interface. An order is a
      document that a web store issues to a
      customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
    properties:
      additional_data:
        type: string
        description: Additional data.
      amount_refunded:
        type: number
        description: Amount refunded.
      applied_rule_ids:
        type: string
        description: Applied rule IDs.
      base_amount_refunded:
        type: number
        description: Base amount refunded.
      base_cost:
        type: number
        description: Base cost.
      base_discount_amount:
        type: number
        description: Base discount amount.
      base_discount_invoiced:
        type: number
        description: Base discount invoiced.
      base_discount_refunded:
        type: number
        description: Base discount refunded.
      base_discount_tax_compensation_amount:
        type: number
        description: Base discount tax compensation amount.
      base_discount_tax_compensation_invoiced:
        type: number
        description: Base discount tax compensation invoiced.
      base_discount_tax_compensation_refunded:
        type: number
        description: Base discount tax compensation refunded.
      base_original_price:
        type: number
        description: Base original price.
      base_price:
        type: number
        description: Base price.
      base_price_incl_tax:
        type: number
        description: Base price including tax.
      base_row_invoiced:
        type: number
        description: Base row invoiced.
      base_row_total:
        type: number
        description: Base row total.
      base_row_total_incl_tax:
        type: number
        description: Base row total including tax.
      base_tax_amount:
        type: number
        description: Base tax amount.
      base_tax_before_discount:
        type: number
        description: Base tax before discount.
      base_tax_invoiced:
        type: number
        description: Base tax invoiced.
      base_tax_refunded:
        type: number
        description: Base tax refunded.
      base_weee_tax_applied_amount:
        type: number
        description: Base WEEE tax applied amount.
      base_weee_tax_applied_row_amnt:
        type: number
        description: Base WEEE tax applied row amount.
      base_weee_tax_disposition:
        type: number
        description: Base WEEE tax disposition.
      base_weee_tax_row_disposition:
        type: number
        description: Base WEEE tax row disposition.
      created_at:
        type: string
        description: Created-at timestamp.
      description:
        type: string
        description: Description.
      discount_amount:
        type: number
        description: Discount amount.
      discount_invoiced:
        type: number
        description: Discount invoiced.
      discount_percent:
        type: number
        description: Discount percent.
      discount_refunded:
        type: number
        description: Discount refunded.
      event_id:
        type: integer
        description: Event ID.
      ext_order_item_id:
        type: string
        description: External order item ID.
      free_shipping:
        type: integer
        description: Free-shipping flag value.
      gw_base_price:
        type: number
        description: GW base price.
      gw_base_price_invoiced:
        type: number
        description: GW base price invoiced.
      gw_base_price_refunded:
        type: number
        description: GW base price refunded.
      gw_base_tax_amount:
        type: number
        description: GW base tax amount.
      gw_base_tax_amount_invoiced:
        type: number
        description: GW base tax amount invoiced.
      gw_base_tax_amount_refunded:
        type: number
        description: GW base tax amount refunded.
      gw_id:
        type: integer
        description: GW ID.
      gw_price:
        type: number
        description: GW price.
      gw_price_invoiced:
        type: number
        description: GW price invoiced.
      gw_price_refunded:
        type: number
        description: GW price refunded.
      gw_tax_amount:
        type: number
        description: GW tax amount.
      gw_tax_amount_invoiced:
        type: number
        description: GW tax amount invoiced.
      gw_tax_amount_refunded:
        type: number
        description: GW tax amount refunded.
      discount_tax_compensation_amount:
        type: number
        description: Discount tax compensation amount.
      discount_tax_compensation_canceled:
        type: number
        description: Discount tax compensation canceled.
      discount_tax_compensation_invoiced:
        type: number
        description: Discount tax compensation invoiced.
      discount_tax_compensation_refunded:
        type: number
        description: Discount tax compensation refunded.
      is_qty_decimal:
        type: integer
        description: Is-quantity-decimal flag value.
      is_virtual:
        type: integer
        description: Is-virtual flag value.
      item_id:
        type: integer
        description: Item ID.
      locked_do_invoice:
        type: integer
        description: Locked DO invoice flag value.
      locked_do_ship:
        type: integer
        description: Locked DO ship flag value.
      name:
        type: string
        description: Name.
      no_discount:
        type: integer
        description: No-discount flag value.
      order_id:
        type: integer
        description: Order ID.
      original_price:
        type: number
        description: Original price.
      parent_item_id:
        type: integer
        description: Parent item ID.
      price:
        type: number
        description: Price.
      price_incl_tax:
        type: number
        description: Price including tax.
      product_id:
        type: integer
        description: Product ID.
      product_type:
        type: string
        description: Product type.
      qty_backordered:
        type: number
        description: Quantity backordered.
      qty_canceled:
        type: number
        description: Quantity canceled.
      qty_invoiced:
        type: number
        description: Quantity invoiced.
      qty_ordered:
        type: number
        description: Quantity ordered.
      qty_refunded:
        type: number
        description: Quantity refunded.
      qty_returned:
        type: number
        description: Quantity returned.
      qty_shipped:
        type: number
        description: Quantity shipped.
      quote_item_id:
        type: integer
        description: Quote item ID.
      row_invoiced:
        type: number
        description: Row invoiced.
      row_total:
        type: number
        description: Row total.
      row_total_incl_tax:
        type: number
        description: Row total including tax.
      row_weight:
        type: number
        description: Row weight.
      sku:
        type: string
        description: SKU.
      store_id:
        type: integer
        description: Store ID.
      tax_amount:
        type: number
        description: Tax amount.
      tax_before_discount:
        type: number
        description: Tax before discount.
      tax_canceled:
        type: number
        description: Tax canceled.
      tax_invoiced:
        type: number
        description: Tax invoiced.
      tax_percent:
        type: number
        description: Tax percent.
      tax_refunded:
        type: number
        description: Tax refunded.
      updated_at:
        type: string
        description: Updated-at timestamp.
      weee_tax_applied:
        type: string
        description: WEEE tax applied.
      weee_tax_applied_amount:
        type: number
        description: WEEE tax applied amount.
      weee_tax_applied_row_amount:
        type: number
        description: WEEE tax applied row amount.
      weee_tax_disposition:
        type: number
        description: WEEE tax disposition.
      weee_tax_row_disposition:
        type: number
        description: WEEE tax row disposition.
      weight:
        type: number
        description: Weight.
      parent_item:
        $ref: '#/definitions/sales-data-order-item-interface'
      product_option:
        $ref: '#/definitions/catalog-data-product-option-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-order-item-extension-interface'
    required:
      - sku
  catalog-data-product-option-interface:
    type: object
    description: Product option interface
    properties:
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-option-extension-interface'
  catalog-data-product-option-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Catalog\Api\Data\ProductOptionInterface
    properties:
      custom_options:
        type: array
        items:
          $ref: '#/definitions/catalog-data-custom-option-interface'
      configurable_item_options:
        type: array
        items:
          $ref: '#/definitions/configurable-product-data-configurable-item-option-value-interface'
      downloadable_option:
        $ref: '#/definitions/downloadable-data-downloadable-option-interface'
      bundle_options:
        type: array
        items:
          $ref: '#/definitions/bundle-data-bundle-option-interface'
  sales-data-order-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\OrderItemInterface
    properties:
      gift_message:
        $ref: '#/definitions/gift-message-data-message-interface'
      itemized_taxes:
        type: array
        items:
          $ref: '#/definitions/tax-data-order-tax-item-interface'
  tax-data-order-tax-item-interface:
    type: object
    description: ""
    properties:
      tax_item_id:
        type: integer
        description: Tax item ID
      tax_id:
        type: integer
        description: Tax ID
      item_id:
        type: integer
        description: Order item ID
      tax_code:
        type: string
        description: Tax code
      tax_percent:
        type: number
        description: Tax percent
      amount:
        type: number
        description: Tax amount
      base_amount:
        type: number
        description: Tax amount in base currency
      real_amount:
        type: number
        description: Real tax amount
      real_base_amount:
        type: number
        description: Real tax amount in base currency
      associated_item_id:
        type: integer
        description: Associated order item ID
      taxable_item_type:
        type: string
        description: >
          shipping, product, weee, quote_gw,
          etc...
      extension_attributes:
        $ref: '#/definitions/tax-data-order-tax-item-extension-interface'
    required:
      - tax_percent
      - amount
      - base_amount
      - real_amount
      - real_base_amount
  tax-data-order-tax-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\OrderTaxItemInterface
  sales-data-order-address-interface:
    type: object
    description: >
      Order address interface. An order is a
      document that a web store issues to a
      customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
    properties:
      address_type:
        type: string
        description: Address type.
      city:
        type: string
        description: City.
      company:
        type: string
        description: Company.
      country_id:
        type: string
        description: Country ID.
      customer_address_id:
        type: integer
        description: Country address ID.
      customer_id:
        type: integer
        description: Customer ID.
      email:
        type: string
        description: Email address.
      entity_id:
        type: integer
        description: Order address ID.
      fax:
        type: string
        description: Fax number.
      firstname:
        type: string
        description: First name.
      lastname:
        type: string
        description: Last name.
      middlename:
        type: string
        description: Middle name.
      parent_id:
        type: integer
        description: Parent ID.
      postcode:
        type: string
        description: Postal code.
      prefix:
        type: string
        description: Prefix.
      region:
        type: string
        description: Region.
      region_code:
        type: string
        description: Region code.
      region_id:
        type: integer
        description: Region ID.
      street:
        type: array
        description: >
          Array of any street values. Otherwise,
          null.
        items:
          type: string
      suffix:
        type: string
        description: Suffix.
      telephone:
        type: string
        description: Telephone number.
      vat_id:
        type: string
        description: VAT ID.
      vat_is_valid:
        type: integer
        description: VAT-is-valid flag value.
      vat_request_date:
        type: string
        description: VAT request date.
      vat_request_id:
        type: string
        description: VAT request ID.
      vat_request_success:
        type: integer
        description: VAT-request-success flag value.
      extension_attributes:
        $ref: '#/definitions/sales-data-order-address-extension-interface'
    required:
      - address_type
      - city
      - country_id
      - firstname
      - lastname
      - postcode
      - telephone
  sales-data-order-address-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\OrderAddressInterface
    properties:
      flat:
        type: string
      house:
        type: string
      point:
        type: string
      comments:
        type: string
      flatrate_code:
        type: string
      payment:
        type: string
      city_ref:
        type: string
      street_ref:
        type: string
      warehouse_ref:
        type: string
      city_ukrposhta:
        type: string
      city_country:
        type: string
      city_postcode:
        type: string
      shipping_errors:
        type: string
  sales-data-order-payment-interface:
    type: object
    description: >
      Order payment interface. An order is a
      document that a web store issues to a
      customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
    properties:
      account_status:
        type: string
        description: Account status.
      additional_data:
        type: string
        description: Additional data.
      additional_information:
        type: array
        description: Array of additional information.
        items:
          type: string
      address_status:
        type: string
        description: Address status.
      amount_authorized:
        type: number
        description: Amount authorized.
      amount_canceled:
        type: number
        description: Amount canceled.
      amount_ordered:
        type: number
        description: Amount ordered.
      amount_paid:
        type: number
        description: Amount paid.
      amount_refunded:
        type: number
        description: Amount refunded.
      anet_trans_method:
        type: string
        description: Anet transaction method.
      base_amount_authorized:
        type: number
        description: Base amount authorized.
      base_amount_canceled:
        type: number
        description: Base amount canceled.
      base_amount_ordered:
        type: number
        description: Base amount ordered.
      base_amount_paid:
        type: number
        description: Base amount paid.
      base_amount_paid_online:
        type: number
        description: Base amount paid online.
      base_amount_refunded:
        type: number
        description: Base amount refunded.
      base_amount_refunded_online:
        type: number
        description: Base amount refunded online.
      base_shipping_amount:
        type: number
        description: Base shipping amount.
      base_shipping_captured:
        type: number
        description: Base shipping captured amount.
      base_shipping_refunded:
        type: number
        description: Base shipping refunded amount.
      cc_approval:
        type: string
        description: Credit card approval.
      cc_avs_status:
        type: string
        description: Credit card avs status.
      cc_cid_status:
        type: string
        description: Credit card CID status.
      cc_debug_request_body:
        type: string
        description: Credit card debug request body.
      cc_debug_response_body:
        type: string
        description: Credit card debug response body.
      cc_debug_response_serialized:
        type: string
        description: Credit card debug response serialized.
      cc_exp_month:
        type: string
        description: Credit card expiration month.
      cc_exp_year:
        type: string
        description: Credit card expiration year.
      cc_last4:
        type: string
        description: Last four digits of the credit card.
      cc_number_enc:
        type: string
        description: Encrypted credit card number.
      cc_owner:
        type: string
        description: Credit card number.
      cc_secure_verify:
        type: string
        description: Credit card secure verify.
      cc_ss_issue:
        type: string
        description: Credit card SS issue.
      cc_ss_start_month:
        type: string
        description: Credit card SS start month.
      cc_ss_start_year:
        type: string
        description: Credit card SS start year.
      cc_status:
        type: string
        description: Credit card status.
      cc_status_description:
        type: string
        description: Credit card status description.
      cc_trans_id:
        type: string
        description: Credit card transaction ID.
      cc_type:
        type: string
        description: Credit card type.
      echeck_account_name:
        type: string
        description: eCheck account name.
      echeck_account_type:
        type: string
        description: eCheck account type.
      echeck_bank_name:
        type: string
        description: eCheck bank name.
      echeck_routing_number:
        type: string
        description: eCheck routing number.
      echeck_type:
        type: string
        description: eCheck type.
      entity_id:
        type: integer
        description: Entity ID.
      last_trans_id:
        type: string
        description: Last transaction ID.
      method:
        type: string
        description: Method.
      parent_id:
        type: integer
        description: Parent ID.
      po_number:
        type: string
        description: PO number.
      protection_eligibility:
        type: string
        description: Protection eligibility.
      quote_payment_id:
        type: integer
        description: Quote payment ID.
      shipping_amount:
        type: number
        description: Shipping amount.
      shipping_captured:
        type: number
        description: Shipping captured.
      shipping_refunded:
        type: number
        description: Shipping refunded.
      extension_attributes:
        $ref: '#/definitions/sales-data-order-payment-extension-interface'
    required:
      - account_status
      - additional_information
      - cc_last4
      - method
  sales-data-order-payment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\OrderPaymentInterface
    properties:
      notification_message:
        type: string
  sales-data-order-status-history-interface:
    type: object
    description: >
      Order status history interface. An order
      is a document that a web store issues to
      a customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
    properties:
      comment:
        type: string
        description: Comment.
      created_at:
        type: string
        description: Created-at timestamp.
      entity_id:
        type: integer
        description: Order status history ID.
      entity_name:
        type: string
        description: Entity name.
      is_customer_notified:
        type: integer
        description: Is-customer-notified flag value.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
      parent_id:
        type: integer
        description: Parent ID.
      status:
        type: string
        description: Status.
      extension_attributes:
        $ref: '#/definitions/sales-data-order-status-history-extension-interface'
    required:
      - comment
      - is_customer_notified
      - is_visible_on_front
      - parent_id
  sales-data-order-status-history-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\OrderStatusHistoryInterface
  sales-data-order-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\OrderInterface
    properties:
      shipping_assignments:
        type: array
        items:
          $ref: '#/definitions/sales-data-shipping-assignment-interface'
      payment_additional_info:
        type: array
        items:
          $ref: '#/definitions/payment-data-payment-additional-info-interface'
      gift_message:
        $ref: '#/definitions/gift-message-data-message-interface'
      pickup_location_code:
        type: string
      notification_sent:
        type: integer
      send_notification:
        type: integer
      applied_taxes:
        type: array
        items:
          $ref: '#/definitions/tax-data-order-tax-details-applied-tax-interface'
      item_applied_taxes:
        type: array
        items:
          $ref: '#/definitions/tax-data-order-tax-details-item-interface'
      converting_from_quote:
        type: boolean
      taxes:
        type: array
        items:
          $ref: '#/definitions/tax-data-order-tax-interface'
      additional_itemized_taxes:
        type: array
        items:
          $ref: '#/definitions/tax-data-order-tax-item-interface'
      sources:
        type: array
        items:
          $ref: '#/definitions/inventory-source-selection-api-data-source-selection-item-interface'
      device_data:
        $ref: '#/definitions/mage-worx-orders-base-data-device-data-interface'
  sales-data-shipping-assignment-interface:
    type: object
    description: Interface ShippingAssignmentInterface
    properties:
      shipping:
        $ref: '#/definitions/sales-data-shipping-interface'
      items:
        type: array
        description: Order items of shipping assignment
        items:
          $ref: '#/definitions/sales-data-order-item-interface'
      stock_id:
        type: integer
        description: Stock id
      extension_attributes:
        $ref: '#/definitions/sales-data-shipping-assignment-extension-interface'
    required:
      - shipping
      - items
  sales-data-shipping-interface:
    type: object
    description: Interface ShippingInterface
    properties:
      address:
        $ref: '#/definitions/sales-data-order-address-interface'
      method:
        type: string
        description: Shipping method
      total:
        $ref: '#/definitions/sales-data-total-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-shipping-extension-interface'
  sales-data-total-interface:
    type: object
    description: Interface TotalInterface
    properties:
      base_shipping_amount:
        type: number
        description: Base shipping amount.
      base_shipping_canceled:
        type: number
        description: Base shipping canceled.
      base_shipping_discount_amount:
        type: number
        description: Base shipping discount amount.
      base_shipping_discount_tax_compensation_amnt:
        type: number
        description: >
          Base shipping discount tax compensation
          amount.
      base_shipping_incl_tax:
        type: number
        description: Base shipping including tax.
      base_shipping_invoiced:
        type: number
        description: Base shipping invoiced.
      base_shipping_refunded:
        type: number
        description: Base shipping refunded.
      base_shipping_tax_amount:
        type: number
        description: Base shipping tax amount.
      base_shipping_tax_refunded:
        type: number
        description: Base shipping tax refunded.
      shipping_amount:
        type: number
        description: Shipping amount.
      shipping_canceled:
        type: number
        description: Shipping canceled amount.
      shipping_discount_amount:
        type: number
        description: Shipping discount amount.
      shipping_discount_tax_compensation_amount:
        type: number
        description: >
          Shipping discount tax compensation
          amount.
      shipping_incl_tax:
        type: number
        description: Shipping including tax amount.
      shipping_invoiced:
        type: number
        description: Shipping invoiced amount.
      shipping_refunded:
        type: number
        description: Shipping refunded amount.
      shipping_tax_amount:
        type: number
        description: Shipping tax amount.
      shipping_tax_refunded:
        type: number
        description: Shipping tax refunded amount.
      extension_attributes:
        $ref: '#/definitions/sales-data-total-extension-interface'
  sales-data-total-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\TotalInterface
  sales-data-shipping-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShippingInterface
  sales-data-shipping-assignment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShippingAssignmentInterface
  payment-data-payment-additional-info-interface:
    type: object
    description: Payment additional info interface.
    properties:
      key:
        type: string
        description: Object key
      value:
        type: string
        description: Object value
    required:
      - key
      - value
  tax-data-order-tax-details-applied-tax-interface:
    type: object
    description: >
      Interface
      OrderTaxDetailsAppliedTaxInterface
    properties:
      code:
        type: string
        description: Code
      title:
        type: string
        description: Title
      percent:
        type: number
        description: Tax Percent
      amount:
        type: number
        description: Tax amount
      base_amount:
        type: number
        description: Tax amount in base currency
      extension_attributes:
        $ref: '#/definitions/tax-data-order-tax-details-applied-tax-extension-interface'
    required:
      - amount
      - base_amount
  tax-data-order-tax-details-applied-tax-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\OrderTaxDetailsAppliedTaxInterface
    properties:
      rates:
        type: array
        items:
          $ref: '#/definitions/tax-data-applied-tax-rate-interface'
  tax-data-applied-tax-rate-interface:
    type: object
    description: Applied tax rate interface.
    properties:
      code:
        type: string
        description: Code
      title:
        type: string
        description: Title
      percent:
        type: number
        description: Tax Percent
      extension_attributes:
        $ref: '#/definitions/tax-data-applied-tax-rate-extension-interface'
  tax-data-applied-tax-rate-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\AppliedTaxRateInterface
  tax-data-order-tax-details-item-interface:
    type: object
    description: Interface OrderTaxDetailsItemInterface
    properties:
      type:
        type: string
        description: >
          Type (shipping, product, weee, gift
          wrapping, etc)
      item_id:
        type: integer
        description: Item id if this item is a product
      associated_item_id:
        type: integer
        description: >
          Associated item id if this item is
          associated with another item, null
          otherwise
      applied_taxes:
        type: array
        description: Applied taxes
        items:
          $ref: '#/definitions/tax-data-order-tax-details-applied-tax-interface'
      extension_attributes:
        $ref: '#/definitions/tax-data-order-tax-details-item-extension-interface'
  tax-data-order-tax-details-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\OrderTaxDetailsItemInterface
  tax-data-order-tax-interface:
    type: object
    description: ""
    properties:
      tax_id:
        type: integer
        description: Tax ID
      order_id:
        type: integer
        description: Order ID
      code:
        type: string
        description: Code
      title:
        type: string
        description: Title
      percent:
        type: number
        description: Percent
      amount:
        type: number
        description: Amount
      base_amount:
        type: number
        description: Tax amount in base currency
      base_real_amount:
        type: number
        description: Real tax amount in base currency
      priority:
        type: integer
        description: Priority
      position:
        type: integer
        description: Position
      process:
        type: integer
        description: Process
      extension_attributes:
        $ref: '#/definitions/tax-data-order-tax-extension-interface'
    required:
      - percent
      - amount
      - base_amount
      - base_real_amount
      - priority
      - position
      - process
  tax-data-order-tax-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\OrderTaxInterface
  inventory-source-selection-api-data-source-selection-item-interface:
    type: object
    description: >
      Represents source selection result for
      the specific source and SKU
    properties:
      source_code:
        type: string
        description: Source code
      sku:
        type: string
        description: Item SKU
      qty_to_deduct:
        type: number
        description: >
          Quantity which will be deducted for this
          source
      qty_available:
        type: number
        description: Available quantity for this source
      extension_attributes:
        $ref: '#/definitions/inventory-source-selection-api-data-source-selection-item-extension-interface'
    required:
      - source_code
      - sku
      - qty_to_deduct
      - qty_available
  inventory-source-selection-api-data-source-selection-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySourceSelectionApi\Api\Data\SourceSelectionItemInterface
  mage-worx-orders-base-data-device-data-interface:
    type: object
    description: ""
    properties:
      entity_id:
        type: integer
      device_code:
        type: integer
        description: Device code (numeric)
      area_code:
        type: string
        description: >
          Area code from where the order was
          placed
      order_id:
        type: integer
        description: Linked order id
      value:
        type: string
        description: Value.
      device_name:
        type: string
        description: Human readable device name
      area_name:
        type: string
        description: >
          Human readable area name (from where
          order was placed)
    required:
      - entity_id
      - device_code
      - area_code
      - order_id
      - device_name
      - area_name
  sales-data-order-search-result-interface:
    type: object
    description: >
      Order search result interface. An order
      is a document that a web store issues to
      a customer. Magento generates a sales
      order that lists the product items,
      billing and shipping addresses, and
      shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-order-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-order-status-history-search-result-interface:
    type: object
    description: >
      Order status history search result
      interface. An order is a document that a
      web store issues to a customer. Magento
      generates a sales order that lists the
      product items, billing and shipping
      addresses, and shipping and payment
      methods. A corresponding external
      document, known as a purchase order, is
      emailed to the customer.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-order-status-history-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-order-item-search-result-interface:
    type: object
    description: >
      Order item search result interface. An
      order is a document that a web store
      issues to a customer. Magento generates
      a sales order that lists the product
      items, billing and shipping addresses,
      and shipping and payment methods. A
      corresponding external document, known
      as a purchase order, is emailed to the
      customer.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-order-item-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-invoice-interface:
    type: object
    description: >
      Invoice interface. An invoice is a
      record of the receipt of payment for an
      order.
    properties:
      base_currency_code:
        type: string
        description: Base currency code.
      base_discount_amount:
        type: number
        description: Base discount amount.
      base_grand_total:
        type: number
        description: Base grand total.
      base_discount_tax_compensation_amount:
        type: number
        description: Base discount tax compensation amount.
      base_shipping_amount:
        type: number
        description: Base shipping amount.
      base_shipping_discount_tax_compensation_amnt:
        type: number
        description: >
          Base shipping discount tax compensation
          amount.
      base_shipping_incl_tax:
        type: number
        description: Base shipping including tax.
      base_shipping_tax_amount:
        type: number
        description: Base shipping tax amount.
      base_subtotal:
        type: number
        description: Base subtotal.
      base_subtotal_incl_tax:
        type: number
        description: Base subtotal including tax.
      base_tax_amount:
        type: number
        description: Base tax amount.
      base_total_refunded:
        type: number
        description: Base total refunded.
      base_to_global_rate:
        type: number
        description: Base-to-global rate.
      base_to_order_rate:
        type: number
        description: Base-to-order rate.
      billing_address_id:
        type: integer
        description: Billing address ID.
      can_void_flag:
        type: integer
        description: Can void flag value.
      created_at:
        type: string
        description: Created-at timestamp.
      discount_amount:
        type: number
        description: Discount amount.
      discount_description:
        type: string
        description: Discount description.
      email_sent:
        type: integer
        description: Email-sent flag value.
      entity_id:
        type: integer
        description: Invoice ID.
      global_currency_code:
        type: string
        description: Global currency code.
      grand_total:
        type: number
        description: Grand total.
      discount_tax_compensation_amount:
        type: number
        description: Discount tax compensation amount.
      increment_id:
        type: string
        description: Increment ID.
      is_used_for_refund:
        type: integer
        description: Is-used-for-refund flag value.
      order_currency_code:
        type: string
        description: Order currency code.
      order_id:
        type: integer
        description: Order ID.
      shipping_address_id:
        type: integer
        description: Shipping address ID.
      shipping_amount:
        type: number
        description: Shipping amount.
      shipping_discount_tax_compensation_amount:
        type: number
        description: >
          Shipping discount tax compensation
          amount.
      shipping_incl_tax:
        type: number
        description: Shipping including tax.
      shipping_tax_amount:
        type: number
        description: Shipping tax amount.
      state:
        type: integer
        description: State.
      store_currency_code:
        type: string
        description: Store currency code.
      store_id:
        type: integer
        description: Store ID.
      store_to_base_rate:
        type: number
        description: Store-to-base rate.
      store_to_order_rate:
        type: number
        description: Store-to-order rate.
      subtotal:
        type: number
        description: Subtotal.
      subtotal_incl_tax:
        type: number
        description: Subtotal including tax.
      tax_amount:
        type: number
        description: Tax amount.
      total_qty:
        type: number
        description: Total quantity.
      transaction_id:
        type: string
        description: Transaction ID.
      updated_at:
        type: string
        description: Updated-at timestamp.
      items:
        type: array
        description: Array of invoice items.
        items:
          $ref: '#/definitions/sales-data-invoice-item-interface'
      comments:
        type: array
        description: >
          Array of any invoice comments.
          Otherwise, null.
        items:
          $ref: '#/definitions/sales-data-invoice-comment-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-invoice-extension-interface'
    required:
      - order_id
      - total_qty
      - items
  sales-data-invoice-item-interface:
    type: object
    description: >
      Invoice item interface. An invoice is a
      record of the receipt of payment for an
      order. An invoice item is a purchased
      item in an invoice.
    properties:
      additional_data:
        type: string
        description: Additional data.
      base_cost:
        type: number
        description: Base cost.
      base_discount_amount:
        type: number
        description: Base discount amount.
      base_discount_tax_compensation_amount:
        type: number
        description: Base discount tax compensation amount.
      base_price:
        type: number
        description: Base price.
      base_price_incl_tax:
        type: number
        description: Base price including tax.
      base_row_total:
        type: number
        description: Base row total.
      base_row_total_incl_tax:
        type: number
        description: Base row total including tax.
      base_tax_amount:
        type: number
        description: Base tax amount.
      description:
        type: string
        description: Description.
      discount_amount:
        type: number
        description: Discount amount.
      entity_id:
        type: integer
        description: Invoice item ID.
      discount_tax_compensation_amount:
        type: number
        description: Discount tax compensation amount.
      name:
        type: string
        description: Name.
      parent_id:
        type: integer
        description: Parent ID.
      price:
        type: number
        description: Price.
      price_incl_tax:
        type: number
        description: Price including tax.
      product_id:
        type: integer
        description: Product ID.
      row_total:
        type: number
        description: Row total.
      row_total_incl_tax:
        type: number
        description: Row total including tax.
      sku:
        type: string
        description: SKU.
      tax_amount:
        type: number
        description: Tax amount.
      extension_attributes:
        $ref: '#/definitions/sales-data-invoice-item-extension-interface'
      order_item_id:
        type: integer
        description: Order item ID.
      qty:
        type: number
        description: Quantity.
    required:
      - sku
      - order_item_id
      - qty
  sales-data-invoice-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\InvoiceItemInterface
  sales-data-invoice-comment-interface:
    type: object
    description: >
      Invoice comment interface. An invoice is
      a record of the receipt of payment for
      an order. An invoice can include
      comments that detail the invoice
      history.
    properties:
      is_customer_notified:
        type: integer
        description: Is-customer-notified flag value.
      parent_id:
        type: integer
        description: Parent ID.
      extension_attributes:
        $ref: '#/definitions/sales-data-invoice-comment-extension-interface'
      comment:
        type: string
        description: Comment.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
      created_at:
        type: string
        description: Created-at timestamp.
      entity_id:
        type: integer
        description: Invoice ID.
    required:
      - is_customer_notified
      - parent_id
      - comment
      - is_visible_on_front
  sales-data-invoice-comment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\InvoiceCommentInterface
  sales-data-invoice-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\InvoiceInterface
  sales-data-invoice-search-result-interface:
    type: object
    description: >
      Invoice search result interface. An
      invoice is a record of the receipt of
      payment for an order.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-invoice-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-invoice-comment-search-result-interface:
    type: object
    description: >
      Invoice comment search result interface.
      An invoice is a record of the receipt of
      payment for an order. An invoice can
      include comments that detail the invoice
      history.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-invoice-comment-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-creditmemo-item-creation-interface:
    type: object
    description: >
      Interface
      CreditmemoItemCreationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-creditmemo-item-creation-extension-interface'
      order_item_id:
        type: integer
        description: Order item ID.
      qty:
        type: number
        description: Quantity.
    required:
      - order_item_id
      - qty
  sales-data-creditmemo-item-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\CreditmemoItemCreationInterface
  sales-data-creditmemo-comment-creation-interface:
    type: object
    description: >
      Interface
      CreditmemoCommentCreationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-creditmemo-comment-creation-extension-interface'
      comment:
        type: string
        description: Comment.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
    required:
      - comment
      - is_visible_on_front
  sales-data-creditmemo-comment-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\CreditmemoCommentCreationInterface
  sales-data-creditmemo-creation-arguments-interface:
    type: object
    description: >
      Interface
      CreditmemoCreationArgumentsInterface
    properties:
      shipping_amount:
        type: number
        description: Credit memo shipping amount.
      adjustment_positive:
        type: number
        description: Credit memo positive adjustment.
      adjustment_negative:
        type: number
        description: Credit memo negative adjustment.
      extension_attributes:
        $ref: '#/definitions/sales-data-creditmemo-creation-arguments-extension-interface'
  sales-data-creditmemo-creation-arguments-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\CreditmemoCreationArgumentsInterface
    properties:
      return_to_stock_items:
        type: array
        items:
          type: integer
  sales-data-creditmemo-comment-search-result-interface:
    type: object
    description: >
      Credit memo comment search result
      interface. After a customer places and
      pays for an order and an invoice has
      been issued, the merchant can create a
      credit memo to refund all or part of the
      amount paid for any returned or
      undelivered items. The memo restores
      funds to the customer account so that
      the customer can make future purchases.
      A credit memo usually includes comments
      that detail why the credit memo amount
      was credited to the customer.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-creditmemo-comment-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-creditmemo-comment-interface:
    type: object
    description: >
      Credit memo comment interface. After a
      customer places and pays for an order
      and an invoice has been issued, the
      merchant can create a credit memo to
      refund all or part of the amount paid
      for any returned or undelivered items.
      The memo restores funds to the customer
      account so that the customer can make
      future purchases. A credit memo usually
      includes comments that detail why the
      credit memo amount was credited to the
      customer.
    properties:
      comment:
        type: string
        description: Comment.
      created_at:
        type: string
        description: Created-at timestamp.
      entity_id:
        type: integer
        description: Credit memo ID.
      is_customer_notified:
        type: integer
        description: Is-customer-notified flag value.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
      parent_id:
        type: integer
        description: Parent ID.
      extension_attributes:
        $ref: '#/definitions/sales-data-creditmemo-comment-extension-interface'
    required:
      - comment
      - is_customer_notified
      - is_visible_on_front
      - parent_id
  sales-data-creditmemo-comment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\CreditmemoCommentInterface
  sales-data-creditmemo-interface:
    type: object
    description: >
      Credit memo interface. After a customer
      places and pays for an order and an
      invoice has been issued, the merchant
      can create a credit memo to refund all
      or part of the amount paid for any
      returned or undelivered items. The memo
      restores funds to the customer account
      so that the customer can make future
      purchases.
    properties:
      adjustment:
        type: number
        description: Credit memo adjustment.
      adjustment_negative:
        type: number
        description: Credit memo negative adjustment.
      adjustment_positive:
        type: number
        description: Credit memo positive adjustment.
      base_adjustment:
        type: number
        description: Credit memo base adjustment.
      base_adjustment_negative:
        type: number
        description: Credit memo negative base adjustment.
      base_adjustment_positive:
        type: number
        description: Credit memo positive base adjustment.
      base_currency_code:
        type: string
        description: Credit memo base currency code.
      base_discount_amount:
        type: number
        description: Credit memo base discount amount.
      base_grand_total:
        type: number
        description: Credit memo base grand total.
      base_discount_tax_compensation_amount:
        type: number
        description: >
          Credit memo base discount tax
          compensation amount.
      base_shipping_amount:
        type: number
        description: Credit memo base shipping amount.
      base_shipping_discount_tax_compensation_amnt:
        type: number
        description: >
          Credit memo base shipping discount tax
          compensation amount.
      base_shipping_incl_tax:
        type: number
        description: Credit memo base shipping including tax.
      base_shipping_tax_amount:
        type: number
        description: Credit memo base shipping tax amount.
      base_subtotal:
        type: number
        description: Credit memo base subtotal.
      base_subtotal_incl_tax:
        type: number
        description: Credit memo base subtotal including tax.
      base_tax_amount:
        type: number
        description: Credit memo base tax amount.
      base_to_global_rate:
        type: number
        description: Credit memo base-to-global rate.
      base_to_order_rate:
        type: number
        description: Credit memo base-to-order rate.
      billing_address_id:
        type: integer
        description: Credit memo billing address ID.
      created_at:
        type: string
        description: Credit memo created-at timestamp.
      creditmemo_status:
        type: integer
        description: Credit memo status.
      discount_amount:
        type: number
        description: Credit memo discount amount.
      discount_description:
        type: string
        description: Credit memo discount description.
      email_sent:
        type: integer
        description: Credit memo email sent flag value.
      entity_id:
        type: integer
        description: Credit memo ID.
      global_currency_code:
        type: string
        description: Credit memo global currency code.
      grand_total:
        type: number
        description: Credit memo grand total.
      discount_tax_compensation_amount:
        type: number
        description: >
          Credit memo discount tax compensation
          amount.
      increment_id:
        type: string
        description: Credit memo increment ID.
      invoice_id:
        type: integer
        description: Credit memo invoice ID.
      order_currency_code:
        type: string
        description: Credit memo order currency code.
      order_id:
        type: integer
        description: Credit memo order ID.
      shipping_address_id:
        type: integer
        description: Credit memo shipping address ID.
      shipping_amount:
        type: number
        description: Credit memo shipping amount.
      shipping_discount_tax_compensation_amount:
        type: number
        description: >
          Credit memo shipping discount tax
          compensation amount.
      shipping_incl_tax:
        type: number
        description: Credit memo shipping including tax.
      shipping_tax_amount:
        type: number
        description: Credit memo shipping tax amount.
      state:
        type: integer
        description: Credit memo state.
      store_currency_code:
        type: string
        description: Credit memo store currency code.
      store_id:
        type: integer
        description: Credit memo store ID.
      store_to_base_rate:
        type: number
        description: Credit memo store-to-base rate.
      store_to_order_rate:
        type: number
        description: Credit memo store-to-order rate.
      subtotal:
        type: number
        description: Credit memo subtotal.
      subtotal_incl_tax:
        type: number
        description: Credit memo subtotal including tax.
      tax_amount:
        type: number
        description: Credit memo tax amount.
      transaction_id:
        type: string
        description: Credit memo transaction ID.
      updated_at:
        type: string
        description: Credit memo updated-at timestamp.
      items:
        type: array
        description: Array of credit memo items.
        items:
          $ref: '#/definitions/sales-data-creditmemo-item-interface'
      comments:
        type: array
        description: >
          Array of any credit memo comments.
          Otherwise, null.
        items:
          $ref: '#/definitions/sales-data-creditmemo-comment-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-creditmemo-extension-interface'
    required:
      - order_id
      - items
  sales-data-creditmemo-item-interface:
    type: object
    description: >
      Credit memo item interface. After a
      customer places and pays for an order
      and an invoice has been issued, the
      merchant can create a credit memo to
      refund all or part of the amount paid
      for any returned or undelivered items.
      The memo restores funds to the customer
      account so that the customer can make
      future purchases. A credit memo item is
      an invoiced item for which a merchant
      creates a credit memo.
    properties:
      additional_data:
        type: string
        description: Additional data.
      base_cost:
        type: number
        description: The base cost for a credit memo item.
      base_discount_amount:
        type: number
        description: >
          The base discount amount for a credit
          memo item.
      base_discount_tax_compensation_amount:
        type: number
        description: >
          The base discount tax compensation
          amount for a credit memo item.
      base_price:
        type: number
        description: The base price for a credit memo item.
      base_price_incl_tax:
        type: number
        description: Base price including tax.
      base_row_total:
        type: number
        description: Base row total.
      base_row_total_incl_tax:
        type: number
        description: Base row total including tax.
      base_tax_amount:
        type: number
        description: Base tax amount.
      base_weee_tax_applied_amount:
        type: number
        description: Base WEEE tax applied amount.
      base_weee_tax_applied_row_amnt:
        type: number
        description: Base WEEE tax applied row amount.
      base_weee_tax_disposition:
        type: number
        description: Base WEEE tax disposition.
      base_weee_tax_row_disposition:
        type: number
        description: Base WEEE tax row disposition.
      description:
        type: string
        description: Description.
      discount_amount:
        type: number
        description: Discount amount.
      entity_id:
        type: integer
        description: Credit memo item ID.
      discount_tax_compensation_amount:
        type: number
        description: Discount tax compensation amount.
      name:
        type: string
        description: Name.
      order_item_id:
        type: integer
        description: Order item ID.
      parent_id:
        type: integer
        description: Parent ID.
      price:
        type: number
        description: Price.
      price_incl_tax:
        type: number
        description: Price including tax.
      product_id:
        type: integer
        description: Product ID.
      qty:
        type: number
        description: Quantity.
      row_total:
        type: number
        description: Row total.
      row_total_incl_tax:
        type: number
        description: Row total including tax.
      sku:
        type: string
        description: SKU.
      tax_amount:
        type: number
        description: Tax amount.
      weee_tax_applied:
        type: string
        description: WEEE tax applied.
      weee_tax_applied_amount:
        type: number
        description: WEEE tax applied amount.
      weee_tax_applied_row_amount:
        type: number
        description: WEEE tax applied row amount.
      weee_tax_disposition:
        type: number
        description: WEEE tax disposition.
      weee_tax_row_disposition:
        type: number
        description: WEEE tax row disposition.
      extension_attributes:
        $ref: '#/definitions/sales-data-creditmemo-item-extension-interface'
    required:
      - base_cost
      - base_price
      - entity_id
      - order_item_id
      - qty
  sales-data-creditmemo-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\CreditmemoItemInterface
  sales-data-creditmemo-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\CreditmemoInterface
  sales-data-creditmemo-search-result-interface:
    type: object
    description: >
      Credit memo search result interface.
      After a customer places and pays for an
      order and an invoice has been issued,
      the merchant can create a credit memo to
      refund all or part of the amount paid
      for any returned or undelivered items.
      The memo restores funds to the customer
      account so that the customer can make
      future purchases.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-creditmemo-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-shipment-interface:
    type: object
    description: >
      Shipment interface. A shipment is a
      delivery package that contains products.
      A shipment document accompanies the
      shipment. This document lists the
      products and their quantities in the
      delivery package.
    properties:
      billing_address_id:
        type: integer
        description: Billing address ID.
      created_at:
        type: string
        description: Created-at timestamp.
      customer_id:
        type: integer
        description: Customer ID.
      email_sent:
        type: integer
        description: Email-sent flag value.
      entity_id:
        type: integer
        description: Shipment ID.
      increment_id:
        type: string
        description: Increment ID.
      order_id:
        type: integer
        description: Order ID.
      packages:
        type: array
        description: >
          Array of packages, if any. Otherwise,
          null.
        items:
          $ref: '#/definitions/sales-data-shipment-package-interface'
      shipment_status:
        type: integer
        description: Shipment status.
      shipping_address_id:
        type: integer
        description: Shipping address ID.
      shipping_label:
        type: string
        description: Shipping label.
      store_id:
        type: integer
        description: Store ID.
      total_qty:
        type: number
        description: Total quantity.
      total_weight:
        type: number
        description: Total weight.
      updated_at:
        type: string
        description: Updated-at timestamp.
      items:
        type: array
        description: Array of items.
        items:
          $ref: '#/definitions/sales-data-shipment-item-interface'
      tracks:
        type: array
        description: Array of tracks.
        items:
          $ref: '#/definitions/sales-data-shipment-track-interface'
      comments:
        type: array
        description: Array of comments.
        items:
          $ref: '#/definitions/sales-data-shipment-comment-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-extension-interface'
    required:
      - order_id
      - items
      - tracks
      - comments
  sales-data-shipment-package-interface:
    type: object
    description: >
      Shipment package interface. A shipment
      is a delivery package that contains
      products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package.
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-package-extension-interface'
  sales-data-shipment-package-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentPackageInterface
  sales-data-shipment-item-interface:
    type: object
    description: >
      Shipment item interface. A shipment is a
      delivery package that contains products.
      A shipment document accompanies the
      shipment. This document lists the
      products and their quantities in the
      delivery package. A product is an item
      in a shipment.
    properties:
      additional_data:
        type: string
        description: Additional data.
      description:
        type: string
        description: Description.
      entity_id:
        type: integer
        description: Shipment item ID.
      name:
        type: string
        description: Name.
      parent_id:
        type: integer
        description: Parent ID.
      price:
        type: number
        description: Price.
      product_id:
        type: integer
        description: Product ID.
      row_total:
        type: number
        description: Row total.
      sku:
        type: string
        description: SKU.
      weight:
        type: number
        description: Weight.
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-item-extension-interface'
      order_item_id:
        type: integer
        description: Order item ID.
      qty:
        type: number
        description: Quantity.
    required:
      - order_item_id
      - qty
  sales-data-shipment-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentItemInterface
  sales-data-shipment-track-interface:
    type: object
    description: >
      Shipment track interface. A shipment is
      a delivery package that contains
      products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package. Merchants and
      customers can track shipments.
    properties:
      order_id:
        type: integer
        description: The order_id for the shipment package.
      created_at:
        type: string
        description: Created-at timestamp.
      entity_id:
        type: integer
        description: Shipment package ID.
      parent_id:
        type: integer
        description: Parent ID.
      updated_at:
        type: string
        description: Updated-at timestamp.
      weight:
        type: number
        description: Weight.
      qty:
        type: number
        description: Quantity.
      description:
        type: string
        description: Description.
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-track-extension-interface'
      track_number:
        type: string
        description: Track number.
      title:
        type: string
        description: Title.
      carrier_code:
        type: string
        description: Carrier code.
    required:
      - order_id
      - parent_id
      - weight
      - qty
      - description
      - track_number
      - title
      - carrier_code
  sales-data-shipment-track-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentTrackInterface
  sales-data-shipment-comment-interface:
    type: object
    description: >
      Shipment comment interface. A shipment
      is a delivery package that contains
      products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package. A shipment
      document can contain comments.
    properties:
      is_customer_notified:
        type: integer
        description: Is-customer-notified flag value.
      parent_id:
        type: integer
        description: Parent ID.
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-comment-extension-interface'
      comment:
        type: string
        description: Comment.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
      created_at:
        type: string
        description: Created-at timestamp.
      entity_id:
        type: integer
        description: Invoice ID.
    required:
      - is_customer_notified
      - parent_id
      - comment
      - is_visible_on_front
  sales-data-shipment-comment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentCommentInterface
  sales-data-shipment-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentInterface
    properties:
      source_code:
        type: string
  sales-data-shipment-search-result-interface:
    type: object
    description: >
      Shipment search result interface. A
      shipment is a delivery package that
      contains products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-shipment-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-shipment-comment-search-result-interface:
    type: object
    description: >
      Shipment comment search result
      interface. A shipment is a delivery
      package that contains products. A
      shipment document accompanies the
      shipment. This document lists the
      products and their quantities in the
      delivery package. A shipment document
      can contain comments.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-shipment-comment-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-shipment-item-creation-interface:
    type: object
    description: >
      Input argument for shipment item
      creation Interface
      ShipmentItemCreationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-item-creation-extension-interface'
      order_item_id:
        type: integer
        description: Order item ID.
      qty:
        type: number
        description: Quantity.
    required:
      - order_item_id
      - qty
  sales-data-shipment-item-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentItemCreationInterface
  sales-data-shipment-comment-creation-interface:
    type: object
    description: >
      Interface
      ShipmentCommentCreationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-comment-creation-extension-interface'
      comment:
        type: string
        description: Comment.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
    required:
      - comment
      - is_visible_on_front
  sales-data-shipment-comment-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentCommentCreationInterface
  sales-data-shipment-track-creation-interface:
    type: object
    description: Shipment Track Creation interface.
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-track-creation-extension-interface'
      track_number:
        type: string
        description: Track number.
      title:
        type: string
        description: Title.
      carrier_code:
        type: string
        description: Carrier code.
    required:
      - track_number
      - title
      - carrier_code
  sales-data-shipment-track-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentTrackCreationInterface
  sales-data-shipment-package-creation-interface:
    type: object
    description: >
      Shipment package interface. A shipment
      is a delivery package that contains
      products. A shipment document
      accompanies the shipment. This document
      lists the products and their quantities
      in the delivery package.
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-package-creation-extension-interface'
  sales-data-shipment-package-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentPackageCreationInterface
  sales-data-shipment-creation-arguments-interface:
    type: object
    description: >
      Interface for creation arguments for
      Shipment.
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-shipment-creation-arguments-extension-interface'
  sales-data-shipment-creation-arguments-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\ShipmentCreationArgumentsInterface
    properties:
      source_code:
        type: string
  sales-data-transaction-interface:
    type: object
    description: >
      Transaction interface. A transaction is
      an interaction between a merchant and a
      customer such as a purchase, a credit, a
      refund, and so on.
    properties:
      transaction_id:
        type: integer
        description: Transaction ID.
      parent_id:
        type: integer
        description: >
          The parent ID for the transaction.
          Otherwise, null.
      order_id:
        type: integer
        description: Order ID.
      payment_id:
        type: integer
        description: Payment ID.
      txn_id:
        type: string
        description: Transaction business ID.
      parent_txn_id:
        type: string
        description: Parent transaction business ID.
      txn_type:
        type: string
        description: Transaction type.
      is_closed:
        type: integer
        description: Is-closed flag value.
      additional_information:
        type: array
        description: >
          Array of additional information.
          Otherwise, null.
        items:
          type: string
      created_at:
        type: string
        description: Created-at timestamp.
      child_transactions:
        type: array
        description: Array of child transactions.
        items:
          $ref: '#/definitions/sales-data-transaction-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-transaction-extension-interface'
    required:
      - transaction_id
      - order_id
      - payment_id
      - txn_id
      - parent_txn_id
      - txn_type
      - is_closed
      - created_at
      - child_transactions
  sales-data-transaction-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\TransactionInterface
  sales-data-transaction-search-result-interface:
    type: object
    description: >
      Transaction search result interface. A
      transaction is an interaction between a
      merchant and a customer such as a
      purchase, a credit, a refund, and so on.
    properties:
      items:
        type: array
        description: Array of collection items.
        items:
          $ref: '#/definitions/sales-data-transaction-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-data-invoice-item-creation-interface:
    type: object
    description: >
      Input argument for invoice creation
      Interface InvoiceItemCreationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-invoice-item-creation-extension-interface'
      order_item_id:
        type: integer
        description: Order item ID.
      qty:
        type: number
        description: Quantity.
    required:
      - order_item_id
      - qty
  sales-data-invoice-item-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\InvoiceItemCreationInterface
  sales-data-invoice-comment-creation-interface:
    type: object
    description: >
      Interface
      InvoiceCommentCreationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-invoice-comment-creation-extension-interface'
      comment:
        type: string
        description: Comment.
      is_visible_on_front:
        type: integer
        description: Is-visible-on-storefront flag value.
    required:
      - comment
      - is_visible_on_front
  sales-data-invoice-comment-creation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\InvoiceCommentCreationInterface
  sales-data-invoice-creation-arguments-interface:
    type: object
    description: >
      Interface for creation arguments for
      Invoice.
    properties:
      extension_attributes:
        $ref: '#/definitions/sales-data-invoice-creation-arguments-extension-interface'
  sales-data-invoice-creation-arguments-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Sales\Api\Data\InvoiceCreationArgumentsInterface
  checkout-data-shipping-information-interface:
    type: object
    description: Interface ShippingInformationInterface
    properties:
      shipping_address:
        $ref: '#/definitions/quote-data-address-interface'
      billing_address:
        $ref: '#/definitions/quote-data-address-interface'
      shipping_method_code:
        type: string
        description: Shipping method code
      shipping_carrier_code:
        type: string
        description: Carrier code
      extension_attributes:
        $ref: '#/definitions/checkout-data-shipping-information-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - shipping_address
      - shipping_method_code
      - shipping_carrier_code
  checkout-data-shipping-information-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Checkout\Api\Data\ShippingInformationInterface
    properties:
      flat:
        type: string
      house:
        type: string
      point:
        type: string
      city:
        type: string
      comments:
        type: string
      payment:
        type: string
      city_ref:
        type: string
      street_ref:
        type: string
      warehouse_ref:
        type: string
      city_ukrposhta:
        type: string
      city_country:
        type: string
      city_postcode:
        type: string
      shipping_errors:
        type: string
  checkout-data-payment-details-interface:
    type: object
    description: Interface PaymentDetailsInterface
    properties:
      payment_methods:
        type: array
        items:
          $ref: '#/definitions/quote-data-payment-method-interface'
      totals:
        $ref: '#/definitions/quote-data-totals-interface'
      extension_attributes:
        $ref: '#/definitions/checkout-data-payment-details-extension-interface'
    required:
      - payment_methods
      - totals
  checkout-data-payment-details-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Checkout\Api\Data\PaymentDetailsInterface
    properties:
      ignore_payment_methods:
        type: array
        items:
          type: string
  checkout-data-totals-information-interface:
    type: object
    description: Interface TotalsInformationInterface
    properties:
      address:
        $ref: '#/definitions/quote-data-address-interface'
      shipping_method_code:
        type: string
        description: Shipping method code
      shipping_carrier_code:
        type: string
        description: Carrier code
      extension_attributes:
        $ref: '#/definitions/checkout-data-totals-information-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - address
  checkout-data-totals-information-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Checkout\Api\Data\TotalsInformationInterface
  analytics-data-link-interface:
    type: object
    description: >
      Represents link with collected data and
      initialized vector for decryption.
    properties:
      url:
        type: string
      initialization_vector:
        type: string
    required:
      - url
      - initialization_vector
  bundle-data-option-type-interface:
    type: object
    description: Interface OptionTypeInterface
    properties:
      label:
        type: string
        description: Type label
      code:
        type: string
        description: Type code
      extension_attributes:
        $ref: '#/definitions/bundle-data-option-type-extension-interface'
    required:
      - label
      - code
  bundle-data-option-type-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Bundle\Api\Data\OptionTypeInterface
  inventory-api-data-source-search-results-interface:
    type: object
    description: >
      Search results of Repository::getList
      method Used fully qualified namespaces
      in annotations for proper work of WebApi
      request parser
    properties:
      items:
        type: array
        description: Sources list
        items:
          $ref: '#/definitions/inventory-api-data-source-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  inventory-api-data-source-interface:
    type: object
    description: >
      Represents physical storage, i.e. brick
      and mortar store or warehouse Used fully
      qualified namespaces in annotations for
      proper work of WebApi request parser
    properties:
      source_code:
        type: string
        description: Source code
      name:
        type: string
        description: Source name
      email:
        type: string
        description: Source email
      contact_name:
        type: string
        description: Source contact name
      enabled:
        type: boolean
        description: >
          If source is enabled. For new entity can
          be null
      description:
        type: string
        description: Source description
      latitude:
        type: number
        description: Source latitude
      longitude:
        type: number
        description: Source longitude
      country_id:
        type: string
        description: Source country id
      region_id:
        type: integer
        description: >
          Region id if source has registered
          region.
      region:
        type: string
        description: Region title if source has custom region
      city:
        type: string
        description: Source city
      street:
        type: string
        description: Source street name
      postcode:
        type: string
        description: Source post code
      phone:
        type: string
        description: Source phone number
      fax:
        type: string
        description: Source fax
      use_default_carrier_config:
        type: boolean
        description: Is need to use default config
      carrier_links:
        type: array
        items:
          $ref: '#/definitions/inventory-api-data-source-carrier-link-interface'
      extension_attributes:
        $ref: '#/definitions/inventory-api-data-source-extension-interface'
  inventory-api-data-source-carrier-link-interface:
    type: object
    description: >
      Represents relation between some
      physical storage and shipping method
      Used fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
    properties:
      carrier_code:
        type: string
        description: Carrier code
      position:
        type: integer
        description: Position
      extension_attributes:
        $ref: '#/definitions/inventory-api-data-source-carrier-link-extension-interface'
  inventory-api-data-source-carrier-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryApi\Api\Data\SourceCarrierLinkInterface
  inventory-api-data-source-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryApi\Api\Data\SourceInterface
    properties:
      is_pickup_location_active:
        type: boolean
      frontend_name:
        type: string
      frontend_description:
        type: string
  inventory-api-data-stock-search-results-interface:
    type: object
    description: >
      Search results of Repository::getList
      method Used fully qualified namespaces
      in annotations for proper work of WebApi
      request parser
    properties:
      items:
        type: array
        description: Stocks list
        items:
          $ref: '#/definitions/inventory-api-data-stock-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  inventory-api-data-stock-interface:
    type: object
    description: >
      Represents product aggregation among
      some different physical storages (in
      technical words, it is an index) Used
      fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
    properties:
      stock_id:
        type: integer
        description: Stock id
      name:
        type: string
        description: Stock name
      extension_attributes:
        $ref: '#/definitions/inventory-api-data-stock-extension-interface'
  inventory-api-data-stock-extension-interface:
    type: object
    description: 'TODO: temporal fix of extension classes generation during installation ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\StockInterface'
    properties:
      sales_channels:
        type: array
        items:
          $ref: '#/definitions/inventory-sales-api-data-sales-channel-interface'
  inventory-sales-api-data-sales-channel-interface:
    type: object
    description: >
      Represents sales channels (which are a
      linkage between stocks and websites,
      customer groups, etc.) Used fully
      qualified namespaces in annotations for
      proper work of WebApi request parser
    properties:
      type:
        type: string
        description: Sales channel type
      code:
        type: string
        description: Sales channel code
      extension_attributes:
        $ref: '#/definitions/inventory-sales-api-data-sales-channel-extension-interface'
  inventory-sales-api-data-sales-channel-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySalesApi\Api\Data\SalesChannelInterface
  inventory-api-data-stock-source-link-search-results-interface:
    type: object
    description: >
      Search results of Repository::getList
      method Used fully qualified namespaces
      in annotations for proper work of WebApi
      request parser
    properties:
      items:
        type: array
        description: StockSourceLink list
        items:
          $ref: '#/definitions/inventory-api-data-stock-source-link-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  inventory-api-data-stock-source-link-interface:
    type: object
    description: >
      Represents relation between Stock and
      Source entities. Used fully qualified
      namespaces in annotations for proper
      work of WebApi request parser
    properties:
      stock_id:
        type: integer
        description: Stock id
      source_code:
        type: string
        description: Source code of the link
      priority:
        type: integer
        description: Priority of the link
      extension_attributes:
        $ref: '#/definitions/inventory-api-data-stock-source-link-extension-interface'
  inventory-api-data-stock-source-link-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryApi\Api\Data\StockSourceLinkInterface
    properties:
      source_name:
        type: string
  inventory-api-data-source-item-search-results-interface:
    type: object
    description: >
      Search results of Repository::getList
      method Used fully qualified namespaces
      in annotations for proper work of WebApi
      request parser
    properties:
      items:
        type: array
        description: Source items list
        items:
          $ref: '#/definitions/inventory-api-data-source-item-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  inventory-api-data-source-item-interface:
    type: object
    description: >
      Represents amount of product on physical
      storage Entity id getter is missed
      because entity identifies by compound
      identifier (sku and source_code) Used
      fully qualified namespaces in
      annotations for proper work of WebApi
      request parser
    properties:
      sku:
        type: string
        description: Source item sku
      source_code:
        type: string
        description: Source code
      quantity:
        type: number
        description: Source item quantity
      status:
        type: integer
        description: 'Source item status (One of self::STATUS_*)'
      extension_attributes:
        $ref: '#/definitions/inventory-api-data-source-item-extension-interface'
  inventory-api-data-source-item-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryApi\Api\Data\SourceItemInterface
  inventory-catalog-api-data-partial-inventory-transfer-item-interface:
    type: object
    description: >
      Specifies item and quantity for partial
      inventory transfer.
    properties:
      sku:
        type: string
      qty:
        type: number
    required:
      - sku
      - qty
  inventory-distance-based-source-selection-api-data-lat-lng-interface:
    type: object
    description: DTO for latitude and longitude request
    properties:
      lat:
        type: number
        description: Latitude
      lng:
        type: number
        description: Longitude
    required:
      - lat
      - lng
  inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface:
    type: object
    description: >
      Interface for
      ExportStockSalableQtySearchResult
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/framework-extensible-data-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  framework-extensible-data-interface:
    type: object
    description: >
      Interface for entities which can be
      extended with extension attributes.
  inventory-export-stock-api-data-product-stock-index-data-interface:
    type: object
    description: >
      Class
      ExportStockIndexDataResultInterface for
      result Inventory stock index dump export
    properties:
      sku:
        type: string
        description: Product SKU
      qty:
        type: number
        description: Product QTY
      is_salable:
        type: boolean
        description: Product is salable flag
    required:
      - sku
      - qty
      - is_salable
  inventory-sales-api-data-is-product-salable-result-interface:
    type: object
    description: >
      Represents "is product salable" result
      interface.
    properties:
      sku:
        type: string
        description: Product sku from result.
      stock_id:
        type: integer
        description: Stock id from result.
      salable:
        type: boolean
        description: Is salable result.
      extension_attributes:
        $ref: '#/definitions/inventory-sales-api-data-is-product-salable-result-extension-interface'
    required:
      - sku
      - stock_id
      - salable
  inventory-sales-api-data-is-product-salable-result-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySalesApi\Api\Data\IsProductSalableResultInterface
  inventory-sales-api-data-product-salable-result-interface:
    type: object
    description: >
      Represents result of service
      Magento\InventorySalesApi\Api\IsProductSalableForRequestedQtyInterface::execute
    properties:
      salable:
        type: boolean
      errors:
        type: array
        items:
          $ref: '#/definitions/inventory-sales-api-data-product-salability-error-interface'
      extension_attributes:
        $ref: '#/definitions/inventory-sales-api-data-product-salable-result-extension-interface'
    required:
      - salable
      - errors
  inventory-sales-api-data-product-salability-error-interface:
    type: object
    description: ""
    properties:
      code:
        type: string
      message:
        type: string
      extension_attributes:
        $ref: '#/definitions/inventory-sales-api-data-product-salability-error-extension-interface'
    required:
      - code
      - message
  inventory-sales-api-data-product-salability-error-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySalesApi\Api\Data\ProductSalabilityErrorInterface
  inventory-sales-api-data-product-salable-result-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySalesApi\Api\Data\ProductSalableResultInterface
  inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface:
    type: object
    description: >
      Represents "is product salable for
      requested quantity" result interface.
    properties:
      sku:
        type: string
        description: Product sku from result.
      stock_id:
        type: integer
        description: Stock id from result.
      salable:
        type: boolean
        description: Is salable result.
      errors:
        type: array
        description: Errors from result.
        items:
          $ref: '#/definitions/inventory-sales-api-data-product-salability-error-interface'
      extension_attributes:
        $ref: '#/definitions/inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface'
    required:
      - sku
      - stock_id
      - salable
      - errors
  inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySalesApi\Api\Data\IsProductSalableForRequestedQtyResultInterface
  inventory-in-store-pickup-api-data-search-result-interface:
    type: object
    description: >
      Search results for providing pickup
      locations.
    properties:
      items:
        type: array
        description: Items list.
        items:
          $ref: '#/definitions/inventory-in-store-pickup-api-data-pickup-location-interface'
      search_request:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_request
      - total_count
  inventory-in-store-pickup-api-data-pickup-location-interface:
    type: object
    description: >
      Represents sources projection on
      In-Store Pickup context. Realisation
      must follow immutable DTO concept.
      Partial immutability done according to
      restriction of current Extension
      Attributes implementation.
    properties:
      pickup_location_code:
        type: string
        description: Source code of Pickup Location.
      name:
        type: string
        description: Pickup Location name.
      email:
        type: string
        description: Pickup Location contact email.
      fax:
        type: string
        description: Fax contact info.
      contact_name:
        type: string
        description: Pickup Location contact name.
      description:
        type: string
        description: Pickup Location description.
      latitude:
        type: number
        description: Pickup Location latitude.
      longitude:
        type: number
        description: Pickup Location longitude.
      country_id:
        type: string
        description: Pickup Location country ID.
      region_id:
        type: integer
        description: Pickup Location region ID.
      region:
        type: string
        description: Pickup Location region.
      city:
        type: string
        description: Pickup Location city.
      street:
        type: string
        description: Pickup Location street.
      postcode:
        type: string
        description: Pickup Location postcode.
      phone:
        type: string
        description: Pickup Location phone.
      extension_attributes:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-pickup-location-extension-interface'
    required:
      - pickup_location_code
  inventory-in-store-pickup-api-data-pickup-location-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryInStorePickupApi\Api\Data\PickupLocationInterface
  inventory-in-store-pickup-api-data-search-request-interface:
    type: object
    description: 'Endpoint used to search Pickup Locations by different parameters: - by attribute filters fields @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequest\FiltersInterface - by distance to the address @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequest\AreaInterface Also, endpoint supports paging and sort orders.'
    properties:
      area:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-area-interface'
      filters:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filters-interface'
      page_size:
        type: integer
        description: Page size.
      current_page:
        type: integer
        description: Current page.
      scope_type:
        type: string
        description: Sales Channel Type.
      scope_code:
        type: string
        description: Sales Channel code.
      sort:
        type: array
        description: Sort Order.
        items:
          $ref: '#/definitions/framework-sort-order'
      extension_attributes:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-extension-interface'
    required:
      - current_page
      - scope_type
      - scope_code
  inventory-in-store-pickup-api-data-search-request-area-interface:
    type: object
    description: 'Filter by Distance to the Address. Pickup Locations will be filtered by distance according to the geo-position of the entered address. Required fields for the address are country and one of the field: region or city or postcode.'
    properties:
      radius:
        type: integer
        description: Search radius in KM.
      search_term:
        type: string
        description: Search term string.
    required:
      - radius
      - search_term
  inventory-in-store-pickup-api-data-search-request-filters-interface:
    type: object
    description: >
      Filter to filter by Fields. Each field
      may be filtered with different condition
      type. Supported condition types
      restricted by @see
      \Magento\Framework\Api\SearchCriteriaInterface
    properties:
      country:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      postcode:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      region:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      region_id:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      city:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      street:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      name:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
      pickup_location_code:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface'
  inventory-in-store-pickup-api-data-search-request-filter-interface:
    type: object
    description: Filter for Pickup Location search.
    properties:
      value:
        type: string
        description: Value.
      condition_type:
        type: string
        description: Condition Type.
    required:
      - value
      - condition_type
  inventory-in-store-pickup-api-data-search-request-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryInStorePickupApi\Api\Data\SearchRequestInterface
    properties:
      products_info:
        type: array
        items:
          $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-product-info-interface'
  inventory-in-store-pickup-api-data-search-request-product-info-interface:
    type: object
    description: Product Info Data Transfer Object.
    properties:
      sku:
        type: string
        description: Product SKU.
      extension_attributes:
        $ref: '#/definitions/inventory-in-store-pickup-api-data-search-request-product-info-extension-interface'
    required:
      - sku
  inventory-in-store-pickup-api-data-search-request-product-info-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryInStorePickupApi\Api\Data\SearchRequest\ProductInfoInterface
  inventory-source-selection-api-data-source-selection-algorithm-interface:
    type: object
    description: >
      Data Interface representing particular
      Source Selection Algorithm
    properties:
      code:
        type: string
      title:
        type: string
      description:
        type: string
      extension_attributes:
        $ref: '#/definitions/inventory-source-selection-api-data-source-selection-algorithm-extension-interface'
    required:
      - code
      - title
      - description
  inventory-source-selection-api-data-source-selection-algorithm-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySourceSelectionApi\Api\Data\SourceSelectionAlgorithmInterface
  inventory-source-selection-api-data-inventory-request-interface:
    type: object
    description: >
      Request products in a given Qty and
      StockId
    properties:
      stock_id:
        type: integer
        description: Stock Id
      items:
        type: array
        description: Items
        items:
          $ref: '#/definitions/inventory-source-selection-api-data-item-request-interface'
      extension_attributes:
        $ref: '#/definitions/inventory-source-selection-api-data-inventory-request-extension-interface'
    required:
      - stock_id
      - items
  inventory-source-selection-api-data-item-request-interface:
    type: object
    description: >
      Represents requested quantity for
      particular product
    properties:
      sku:
        type: string
        description: SKU
      qty:
        type: number
        description: Product Quantity
      extension_attributes:
        $ref: '#/definitions/inventory-source-selection-api-data-item-request-extension-interface'
    required:
      - sku
      - qty
  inventory-source-selection-api-data-item-request-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySourceSelectionApi\Api\Data\ItemRequestInterface
  inventory-source-selection-api-data-inventory-request-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySourceSelectionApi\Api\Data\InventoryRequestInterface
    properties:
      destination_address:
        $ref: '#/definitions/inventory-source-selection-api-data-address-interface'
  inventory-source-selection-api-data-address-interface:
    type: object
    description: >
      Data interface for shipping source or
      shipping destination
    properties:
      country:
        type: string
        description: Shipping country
      postcode:
        type: string
        description: Shipping postcode
      street:
        type: string
        description: Shipping street address
      region:
        type: string
        description: Shipping region
      city:
        type: string
        description: Shipping city
    required:
      - country
      - postcode
      - street
      - region
      - city
  inventory-source-selection-api-data-source-selection-result-interface:
    type: object
    description: >
      Result of how we will deduct product qty
      from different Sources
    properties:
      source_selection_items:
        type: array
        items:
          $ref: '#/definitions/inventory-source-selection-api-data-source-selection-item-interface'
      shippable:
        type: boolean
      extension_attributes:
        $ref: '#/definitions/inventory-source-selection-api-data-source-selection-result-extension-interface'
    required:
      - source_selection_items
      - shippable
  inventory-source-selection-api-data-source-selection-result-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventorySourceSelectionApi\Api\Data\SourceSelectionResultInterface
  inventory-in-store-pickup-sales-api-data-result-interface:
    type: object
    description: >
      Operation result object that contains
      status of the operation.
    properties:
      successful:
        type: boolean
        description: Operation result successful.
      errors:
        type: array
        description: Error information for failed operations.
        items:
          type: string
      extension_attributes:
        $ref: '#/definitions/inventory-in-store-pickup-sales-api-data-result-extension-interface'
    required:
      - successful
      - errors
  inventory-in-store-pickup-sales-api-data-result-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryInStorePickupSalesApi\Api\Data\ResultInterface
  inventory-low-quantity-notification-api-data-source-item-configuration-interface:
    type: object
    description: >
      Represents a Source Item Configuration
      object Used fully qualified namespaces
      in annotations for proper work of WebApi
      request parser
    properties:
      source_code:
        type: string
        description: Source code
      notify_stock_qty:
        type: number
        description: Notify stock qty
      sku:
        type: string
        description: SKU
      extension_attributes:
        $ref: '#/definitions/inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface'
  inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\InventoryLowQuantityNotificationApi\Api\Data\SourceItemConfigurationInterface
  sales-rule-data-rule-interface:
    type: object
    description: Interface RuleInterface
    properties:
      rule_id:
        type: integer
        description: Rule id
      name:
        type: string
        description: Rule name
      store_labels:
        type: array
        description: Display label
        items:
          $ref: '#/definitions/sales-rule-data-rule-label-interface'
      description:
        type: string
        description: Description
      website_ids:
        type: array
        description: A list of websites the rule applies to
        items:
          type: integer
      customer_group_ids:
        type: array
        description: >
          Ids of customer groups that the rule
          applies to
        items:
          type: integer
      from_date:
        type: string
        description: The start date when the coupon is active
      to_date:
        type: string
        description: The end date when the coupon is active
      uses_per_customer:
        type: integer
        description: Number of uses per customer
      is_active:
        type: boolean
        description: The coupon is active
      condition:
        $ref: '#/definitions/sales-rule-data-condition-interface'
      action_condition:
        $ref: '#/definitions/sales-rule-data-condition-interface'
      stop_rules_processing:
        type: boolean
        description: To stop rule processing
      is_advanced:
        type: boolean
        description: Is this field needed
      product_ids:
        type: array
        description: Product ids
        items:
          type: integer
      sort_order:
        type: integer
        description: Sort order
      simple_action:
        type: string
        description: Simple action of the rule
      discount_amount:
        type: number
        description: Discount amount
      discount_qty:
        type: number
        description: Maximum qty discount is applied
      discount_step:
        type: integer
        description: Discount step
      apply_to_shipping:
        type: boolean
        description: The rule applies to shipping
      times_used:
        type: integer
        description: How many times the rule has been used
      is_rss:
        type: boolean
        description: Whether the rule is in RSS
      coupon_type:
        type: string
        description: Coupon type
      use_auto_generation:
        type: boolean
        description: To auto generate coupon
      uses_per_coupon:
        type: integer
        description: Limit of uses per coupon
      simple_free_shipping:
        type: string
        description: To grant free shipping
      extension_attributes:
        $ref: '#/definitions/sales-rule-data-rule-extension-interface'
    required:
      - website_ids
      - customer_group_ids
      - uses_per_customer
      - is_active
      - stop_rules_processing
      - is_advanced
      - sort_order
      - discount_amount
      - discount_step
      - apply_to_shipping
      - times_used
      - is_rss
      - coupon_type
      - use_auto_generation
      - uses_per_coupon
  sales-rule-data-rule-label-interface:
    type: object
    description: Interface RuleLabelInterface
    properties:
      store_id:
        type: integer
        description: StoreId
      store_label:
        type: string
        description: The label for the store
      extension_attributes:
        $ref: '#/definitions/sales-rule-data-rule-label-extension-interface'
    required:
      - store_id
      - store_label
  sales-rule-data-rule-label-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\SalesRule\Api\Data\RuleLabelInterface
  sales-rule-data-condition-interface:
    type: object
    description: Interface ConditionInterface
    properties:
      condition_type:
        type: string
        description: Condition type
      conditions:
        type: array
        description: List of conditions
        items:
          $ref: '#/definitions/sales-rule-data-condition-interface'
      aggregator_type:
        type: string
        description: The aggregator type
      operator:
        type: string
        description: The operator of the condition
      attribute_name:
        type: string
        description: The attribute name of the condition
      value:
        type: string
        description: The value of the condition
      extension_attributes:
        $ref: '#/definitions/sales-rule-data-condition-extension-interface'
    required:
      - condition_type
      - operator
      - value
  sales-rule-data-condition-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\SalesRule\Api\Data\ConditionInterface
    properties:
      attribute_scope:
        type: string
  sales-rule-data-rule-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\SalesRule\Api\Data\RuleInterface
    properties:
      promo_banners_lite:
        type: array
        items:
          $ref: '#/definitions/amasty-banners-lite-data-banner-interface'
      banner_product_sku:
        type: string
      banner_product_categories:
        type: string
      show_banner_for:
        type: integer
      amcoupons:
        $ref: '#/definitions/amasty-coupons-data-rule-interface'
      ampromo_rule:
        $ref: '#/definitions/amasty-promo-data-gift-rule-interface'
      amrules:
        $ref: '#/definitions/amasty-rules-data-rule-interface'
      limit:
        type: integer
      count:
        type: integer
  amasty-banners-lite-data-banner-interface:
    type: object
    description: ""
    properties:
      entity_id:
        type: integer
      salesrule_id:
        type: integer
      banner_type:
        type: string
      banner_image:
        type: string
      banner_alt:
        type: string
      banner_hover_text:
        type: string
      banner_link:
        type: string
    required:
      - entity_id
      - salesrule_id
  amasty-coupons-data-rule-interface:
    type: object
    description: Additional Sales Rule Data
    properties:
      entity_id:
        type: integer
      rule_id:
        type: integer
      allow_coupons_same_rule:
        type: boolean
      use_config_value:
        type: integer
    required:
      - entity_id
      - rule_id
      - allow_coupons_same_rule
      - use_config_value
  amasty-promo-data-gift-rule-interface:
    type: object
    description: ""
    properties:
      sku:
        type: string
      type:
        type: integer
      after_product_banner_show_gift_images:
        type: integer
      top_banner_show_gift_images:
        type: integer
      items_discount:
        type: string
      minimal_items_price:
        type: number
      apply_tax:
        type: integer
      apply_shipping:
        type: integer
    required:
      - sku
      - type
      - after_product_banner_show_gift_images
      - top_banner_show_gift_images
      - apply_tax
      - apply_shipping
  amasty-rules-data-rule-interface:
    type: object
    description: ""
    properties:
      promo_cats:
        type: string
      promo_skus:
        type: string
      apply_discount_to:
        type: string
      eachm:
        type: string
      priceselector:
        type: integer
      nqty:
        type: string
      max_discount:
        type: string
      enable_general_skip_settings:
        type: boolean
      skip_rule:
        type: string
      use_for:
        type: integer
    required:
      - priceselector
      - enable_general_skip_settings
      - use_for
  sales-rule-data-rule-search-result-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Rules.
        items:
          $ref: '#/definitions/sales-rule-data-rule-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-rule-data-coupon-interface:
    type: object
    description: Interface CouponInterface
    properties:
      coupon_id:
        type: integer
        description: Coupon id
      rule_id:
        type: integer
        description: >
          The id of the rule associated with the
          coupon
      code:
        type: string
        description: Coupon code
      usage_limit:
        type: integer
        description: Usage limit
      usage_per_customer:
        type: integer
        description: Usage limit per customer
      times_used:
        type: integer
        description: >
          The number of times the coupon has been
          used
      expiration_date:
        type: string
        description: Expiration date
      is_primary:
        type: boolean
        description: "The coupon is primary coupon for the rule that it's associated with"
      created_at:
        type: string
        description: When the coupon is created
      type:
        type: integer
        description: Of coupon
      extension_attributes:
        $ref: '#/definitions/sales-rule-data-coupon-extension-interface'
    required:
      - rule_id
      - times_used
      - is_primary
  sales-rule-data-coupon-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\SalesRule\Api\Data\CouponInterface
  sales-rule-data-coupon-search-result-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Rules.
        items:
          $ref: '#/definitions/sales-rule-data-coupon-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  sales-rule-data-coupon-generation-spec-interface:
    type: object
    description: CouponGenerationSpecInterface
    properties:
      rule_id:
        type: integer
        description: >
          The id of the rule associated with the
          coupon
      format:
        type: string
        description: Format of generated coupon code
      quantity:
        type: integer
        description: Of coupons to generate
      length:
        type: integer
        description: Length of coupon code
      prefix:
        type: string
        description: The prefix
      suffix:
        type: string
        description: The suffix
      delimiter_at_every:
        type: integer
        description: >
          The spacing where the delimiter should
          exist
      delimiter:
        type: string
        description: The delimiter
      extension_attributes:
        $ref: '#/definitions/sales-rule-data-coupon-generation-spec-extension-interface'
    required:
      - rule_id
      - format
      - quantity
      - length
  sales-rule-data-coupon-generation-spec-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\SalesRule\Api\Data\CouponGenerationSpecInterface
  sales-rule-data-coupon-mass-delete-result-interface:
    type: object
    description: Coupon mass delete results interface.
    properties:
      failed_items:
        type: array
        description: List of failed items.
        items:
          type: string
      missing_items:
        type: array
        description: List of missing items.
        items:
          type: string
    required:
      - failed_items
      - missing_items
  checkout-agreements-data-agreement-interface:
    type: object
    description: Interface AgreementInterface
    properties:
      agreement_id:
        type: integer
        description: Agreement ID.
      name:
        type: string
        description: Agreement name.
      content:
        type: string
        description: Agreement content.
      content_height:
        type: string
        description: >
          Agreement content height. Otherwise,
          null.
      checkbox_text:
        type: string
        description: Agreement checkbox text.
      is_active:
        type: boolean
        description: Agreement status.
      is_html:
        type: boolean
        description: '* true - HTML. * false - plain text.'
      mode:
        type: integer
        description: The agreement applied mode.
      extension_attributes:
        $ref: '#/definitions/checkout-agreements-data-agreement-extension-interface'
    required:
      - agreement_id
      - name
      - content
      - checkbox_text
      - is_active
      - is_html
      - mode
  checkout-agreements-data-agreement-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\CheckoutAgreements\Api\Data\AgreementInterface
  tax-data-tax-rate-interface:
    type: object
    description: Tax rate interface.
    properties:
      id:
        type: integer
        description: Id
      tax_country_id:
        type: string
        description: Country id
      tax_region_id:
        type: integer
        description: Region id
      region_name:
        type: string
        description: Region name
      tax_postcode:
        type: string
        description: Postcode
      zip_is_range:
        type: integer
        description: Zip is range
      zip_from:
        type: integer
        description: Zip range from
      zip_to:
        type: integer
        description: Zip range to
      rate:
        type: number
        description: Tax rate in percentage
      code:
        type: string
        description: Tax rate code
      titles:
        type: array
        description: Tax rate titles
        items:
          $ref: '#/definitions/tax-data-tax-rate-title-interface'
      extension_attributes:
        $ref: '#/definitions/tax-data-tax-rate-extension-interface'
    required:
      - tax_country_id
      - rate
      - code
  tax-data-tax-rate-title-interface:
    type: object
    description: Tax rate title interface.
    properties:
      store_id:
        type: string
        description: Store id
      value:
        type: string
        description: Title value
      extension_attributes:
        $ref: '#/definitions/tax-data-tax-rate-title-extension-interface'
    required:
      - store_id
      - value
  tax-data-tax-rate-title-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\TaxRateTitleInterface
  tax-data-tax-rate-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\TaxRateInterface
  tax-data-tax-rate-search-results-interface:
    type: object
    description: Interface for tax rate search results.
    properties:
      items:
        type: array
        description: Items
        items:
          $ref: '#/definitions/tax-data-tax-rate-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  tax-data-tax-rule-interface:
    type: object
    description: Tax rule interface.
    properties:
      id:
        type: integer
        description: Id
      code:
        type: string
        description: Tax rule code
      priority:
        type: integer
        description: Priority
      position:
        type: integer
        description: Sort order.
      customer_tax_class_ids:
        type: array
        description: Customer tax class id
        items:
          type: integer
      product_tax_class_ids:
        type: array
        description: Product tax class id
        items:
          type: integer
      tax_rate_ids:
        type: array
        description: Tax rate ids
        items:
          type: integer
      calculate_subtotal:
        type: boolean
        description: Calculate subtotal.
      extension_attributes:
        $ref: '#/definitions/tax-data-tax-rule-extension-interface'
    required:
      - code
      - priority
      - position
      - customer_tax_class_ids
      - product_tax_class_ids
      - tax_rate_ids
  tax-data-tax-rule-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\TaxRuleInterface
  tax-data-tax-rule-search-results-interface:
    type: object
    description: Interface for tax rule search results.
    properties:
      items:
        type: array
        description: Items
        items:
          $ref: '#/definitions/tax-data-tax-rule-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  tax-data-tax-class-interface:
    type: object
    description: Tax class interface.
    properties:
      class_id:
        type: integer
        description: Tax class ID.
      class_name:
        type: string
        description: Tax class name.
      class_type:
        type: string
        description: Tax class type.
      extension_attributes:
        $ref: '#/definitions/tax-data-tax-class-extension-interface'
    required:
      - class_name
      - class_type
  tax-data-tax-class-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\Tax\Api\Data\TaxClassInterface
  tax-data-tax-class-search-results-interface:
    type: object
    description: Interface for tax class search results.
    properties:
      items:
        type: array
        description: Items
        items:
          $ref: '#/definitions/tax-data-tax-class-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  asynchronous-operations-data-detailed-bulk-operations-status-interface:
    type: object
    description: >
      Interface BulkStatusInterface Bulk
      summary data with list of operations
      items full data.
    properties:
      operations_list:
        type: array
        description: Operations list.
        items:
          $ref: '#/definitions/asynchronous-operations-data-operation-interface'
      extension_attributes:
        $ref: '#/definitions/asynchronous-operations-data-bulk-summary-extension-interface'
      user_type:
        type: integer
        description: User type
      bulk_id:
        type: string
        description: Bulk uuid
      description:
        type: string
        description: Bulk description
      start_time:
        type: string
        description: Bulk scheduled time
      user_id:
        type: integer
        description: User id
      operation_count:
        type: integer
        description: >
          Total number of operations scheduled in
          scope of this bulk
    required:
      - operations_list
      - user_type
      - bulk_id
      - description
      - start_time
      - user_id
      - operation_count
  asynchronous-operations-data-operation-interface:
    type: object
    description: Class OperationInterface
    properties:
      extension_attributes:
        $ref: '#/definitions/asynchronous-operations-data-operation-extension-interface'
      id:
        type: integer
        description: Id
      bulk_uuid:
        type: string
        description: Bulk uuid
      topic_name:
        type: string
        description: Queue Topic
      serialized_data:
        type: string
        description: Data
      result_serialized_data:
        type: string
        description: Serialized Data
      status:
        type: integer
        description: Operation status
      result_message:
        type: string
        description: Result message
      error_code:
        type: integer
        description: Error code
    required:
      - id
      - bulk_uuid
      - topic_name
      - serialized_data
      - result_serialized_data
      - status
      - result_message
      - error_code
  asynchronous-operations-data-operation-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\AsynchronousOperations\Api\Data\OperationInterface
    properties:
      start_time:
        type: string
  asynchronous-operations-data-bulk-summary-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Magento\AsynchronousOperations\Api\Data\BulkSummaryInterface
  asynchronous-operations-data-bulk-operations-status-interface:
    type: object
    description: >
      Interface BulkStatusInterface Bulk
      summary data with list of operations
      items summary data.
    properties:
      operations_list:
        type: array
        description: >
          List of operation with statuses (short
          data).
        items:
          $ref: '#/definitions/asynchronous-operations-data-summary-operation-status-interface'
      extension_attributes:
        $ref: '#/definitions/asynchronous-operations-data-bulk-summary-extension-interface'
      user_type:
        type: integer
        description: User type
      bulk_id:
        type: string
        description: Bulk uuid
      description:
        type: string
        description: Bulk description
      start_time:
        type: string
        description: Bulk scheduled time
      user_id:
        type: integer
        description: User id
      operation_count:
        type: integer
        description: >
          Total number of operations scheduled in
          scope of this bulk
    required:
      - operations_list
      - user_type
      - bulk_id
      - description
      - start_time
      - user_id
      - operation_count
  asynchronous-operations-data-summary-operation-status-interface:
    type: object
    description: "Getter Class OperationsStatusInterface Instead of OperationInterface this class don't provide all operation data and not responsive to set any data, just to get operation data without serialized_data and result_serialized_data"
    properties:
      id:
        type: integer
        description: Id
      status:
        type: integer
        description: Operation status
      result_message:
        type: string
        description: Result message
      error_code:
        type: integer
        description: Error code
    required:
      - id
      - status
      - result_message
      - error_code
  asynchronous-operations-data-operation-search-results-interface:
    type: object
    description: >
      Bulk operation search result interface.
      An bulk is a group of queue messages. An
      bulk operation item is a queue message.
    properties:
      items:
        type: array
        description: List of operations.
        items:
          $ref: '#/definitions/asynchronous-operations-data-operation-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-acart-data-blacklist-interface:
    type: object
    description: ""
    properties:
      blacklist_id:
        type: integer
      customer_email:
        type: string
      extension_attributes:
        $ref: '#/definitions/amasty-acart-data-blacklist-extension-interface'
  amasty-acart-data-blacklist-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Amasty\Acart\Api\Data\BlacklistInterface
  amasty-acart-data-blacklist-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Blacklist list
        items:
          $ref: '#/definitions/amasty-acart-data-blacklist-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-openai-core-data-ai-response-interface:
    type: object
    description: ""
    properties:
      status_code:
        type: integer
      message:
        type: string
      text:
        type: string
    required:
      - status_code
      - message
      - text
  amasty-banners-lite-data-file-content-interface:
    type: object
    description: ""
    properties:
      base64_encoded_data:
        type: string
      name_with_extension:
        type: string
    required:
      - base64_encoded_data
      - name_with_extension
  amasty-coupons-data-coupon-apply-result-interface:
    type: object
    description: ""
    properties:
      applied:
        type: boolean
        description: Coupon valid and applied to quote.
      code:
        type: string
        description: Code.
    required:
      - applied
      - code
  amasty-coupons-data-coupon-apply-result-list-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/amasty-coupons-data-coupon-apply-result-interface'
      is_quote_items_changed:
        type: boolean
    required:
      - items
      - is_quote_items_changed
  amasty-xsearch-data-search-result-interface:
    type: object
    description: ""
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/amasty-xsearch-data-product-render-interface'
      product_total_count:
        type: integer
      product_last_page:
        type: integer
    required:
      - products
      - product_total_count
      - product_last_page
  amasty-xsearch-data-product-render-interface:
    type: object
    description: ""
    properties:
      sku:
        type: string
      add_to_cart_button:
        $ref: '#/definitions/catalog-data-product-render-button-interface'
      add_to_compare_button:
        $ref: '#/definitions/catalog-data-product-render-button-interface'
      price_info:
        $ref: '#/definitions/catalog-data-product-render-price-info-interface'
      images:
        type: array
        description: >
          Enough information, that needed to
          render image on front
        items:
          $ref: '#/definitions/catalog-data-product-render-image-interface'
      url:
        type: string
        description: Product url
      id:
        type: integer
        description: Product identifier
      name:
        type: string
        description: Product name
      type:
        type: string
        description: >
          Product type. Such as bundle, grouped,
          simple, etc...
      is_salable:
        type: string
        description: >
          Information about product saleability
          (In Stock)
      store_id:
        type: integer
        description: >
          Information about current store id or
          requested store id
      currency_code:
        type: string
        description: >
          Current or desired currency code to
          product
      extension_attributes:
        $ref: '#/definitions/catalog-data-product-render-extension-interface'
    required:
      - sku
      - add_to_cart_button
      - add_to_compare_button
      - price_info
      - images
      - url
      - id
      - name
      - type
      - is_salable
      - store_id
      - currency_code
      - extension_attributes
  amasty-import-export-core-profile-run-profile-response-interface:
    type: object
    description: ""
    properties:
      status_code:
        type: integer
      identity:
        type: string
      message:
        type: string
    required:
      - identity
      - message
  amasty-faq-data-question-interface:
    type: object
    description: ""
    properties:
      question_id:
        type: integer
      title:
        type: string
      answer:
        type: string
      relative_url:
        type: string
      short_answer:
        type: string
      visibility:
        type: integer
      status:
        type: integer
      name:
        type: string
      email:
        type: string
      position:
        type: integer
      url_key:
        type: string
      positive_rating:
        type: integer
      negative_rating:
        type: integer
      total_rating:
        type: integer
      average_rating:
        type: number
      average_total:
        type: integer
      meta_title:
        type: string
      meta_description:
        type: string
      meta_robots:
        type: string
      created_at:
        type: string
      stores:
        type: string
      categories:
        type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/amasty-faq-data-tag-interface'
      visit_count:
        type: integer
      exclude_sitemap:
        type: boolean
      updated_at:
        type: string
      canonical_url:
        type: string
      noindex:
        type: boolean
      nofollow:
        type: boolean
      show_full_answer:
        type: boolean
      product_ids:
        type: string
      asked_from_store:
        type: integer
      customer_groups:
        type: string
    required:
      - question_id
      - title
      - answer
      - relative_url
      - short_answer
      - visibility
      - status
      - email
      - position
      - average_rating
      - average_total
      - created_at
      - tags
      - visit_count
      - exclude_sitemap
      - updated_at
      - canonical_url
      - noindex
      - nofollow
      - show_full_answer
  amasty-faq-data-tag-interface:
    type: object
    description: ""
    properties:
      tag_id:
        type: integer
      title:
        type: string
    required:
      - tag_id
      - title
  amasty-faq-data-question-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: FAQ questions list
        items:
          $ref: '#/definitions/amasty-faq-data-question-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-faq-data-category-interface:
    type: object
    description: ""
    properties:
      category_id:
        type: integer
      title:
        type: string
      page_title:
        type: string
      relative_url:
        type: string
      position:
        type: integer
      url_key:
        type: string
      status:
        type: integer
      meta_title:
        type: string
      meta_description:
        type: string
      visit_count:
        type: integer
      exclude_sitemap:
        type: boolean
      created_at:
        type: string
      updated_at:
        type: string
      canonical_url:
        type: string
      noindex:
        type: boolean
      nofollow:
        type: boolean
      description:
        type: string
      icon:
        type: string
      stores:
        type: string
      questions:
        type: string
      customer_groups:
        type: string
    required:
      - category_id
      - title
      - relative_url
      - url_key
      - status
      - meta_description
      - visit_count
      - exclude_sitemap
      - created_at
      - updated_at
      - canonical_url
      - noindex
      - nofollow
      - description
      - icon
      - stores
      - questions
      - customer_groups
  amasty-faq-data-category-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: FAQ categories list
        items:
          $ref: '#/definitions/amasty-faq-data-category-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-faq-data-tag-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: FAQ tags list
        items:
          $ref: '#/definitions/amasty-faq-data-tag-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-shopby-base-data-filter-setting-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/amasty-shopby-base-data-filter-setting-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-mwishlist-data-wishlist-interface:
    type: object
    description: ""
    properties:
      wishlist_id:
        type: integer
      customer_id:
        type: integer
      shared:
        type: integer
      sharing_code:
        type: string
      updated_at:
        type: string
      name:
        type: string
      type:
        type: integer
      wishlist_items:
        type: array
        items:
          $ref: '#/definitions/amasty-mwishlist-data-wishlist-item-interface'
    required:
      - wishlist_id
      - customer_id
      - shared
      - sharing_code
      - type
      - wishlist_items
  amasty-mwishlist-data-wishlist-item-interface:
    type: object
    description: ""
    properties:
      wishlist_item_id:
        type: integer
      wishlist_id:
        type: integer
      product_id:
        type: integer
      store_id:
        type: integer
      added_at:
        type: string
      description:
        type: string
      qty:
        type: integer
      product_price:
        type: string
    required:
      - wishlist_item_id
      - wishlist_id
      - product_id
      - store_id
      - added_at
      - description
      - qty
      - product_price
  amasty-mwishlist-data-wishlist-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/amasty-mwishlist-data-wishlist-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-mwishlist-data-wishlist-item-data-interface:
    type: object
    description: ""
    properties:
      qty:
        type: number
      sku:
        type: string
      description:
        type: string
    required:
      - qty
      - sku
      - description
  amasty-orderarchive-data-archive-affected-ids-interface:
    type: object
    description: >
      Interface ArchiveAffectedIdsInterface
      Contains result of Archive Actions, like
      affected Order Ids, Invoice Ids etc.
    properties:
      order_ids:
        type: array
        items:
          type: integer
      invoice_ids:
        type: array
        items:
          type: integer
      creditmemo_ids:
        type: array
        items:
          type: integer
      shipment_ids:
        type: array
        items:
          type: integer
    required:
      - order_ids
      - invoice_ids
      - creditmemo_ids
      - shipment_ids
  amasty-reports-data-rule-interface:
    type: object
    description: ""
    properties:
      entity_id:
        type: integer
      title:
        type: string
      status:
        type: integer
      updated_at:
        type: string
      serialized_conditions:
        type: string
      condition_empty:
        type: boolean
      pin:
        type: integer
    required:
      - entity_id
      - title
      - status
      - condition_empty
      - pin
  framework-search-results-interface:
    type: object
    description: Search results interface.
    properties:
      items:
        type: array
        description: Items list.
        items:
          $ref: '#/definitions/framework-extensible-data-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  amasty-rewards-data-rewards-interface:
    type: object
    description: ""
    properties:
      id:
        type: string
      action_date:
        type: string
      amount:
        type: number
      comment:
        type: string
      action:
        type: string
      points_left:
        type: number
      customer_id:
        type: integer
      visible_for_customer:
        type: boolean
      admin_name:
        type: string
      expiration_date:
        type: string
      expiring_amount:
        type: number
    required:
      - id
      - action_date
      - amount
      - action
      - points_left
      - customer_id
      - visible_for_customer
      - expiration_date
      - expiring_amount
  amasty-rewards-data-rule-interface:
    type: object
    description: ""
    properties:
      rule_id:
        type: integer
      is_active:
        type: integer
      name:
        type: string
      conditions_serialized:
        type: string
      action:
        type: string
      amount:
        type: number
      spent_amount:
        type: number
      inactive_days:
        type: integer
      recurring:
        type: integer
      expiration_behavior:
        type: integer
      expiration_period:
        type: integer
      skip_discounted_products:
        type: boolean
      grant_points_for_specific_products:
        type: boolean
      action_for_earning:
        type: integer
      products_sku:
        type: string
      products_skus_array:
        type: string
      categories_array:
        type: string
      categories:
        type: string
      extension_attributes:
        $ref: '#/definitions/amasty-rewards-data-rule-extension-interface'
    required:
      - rule_id
      - is_active
      - amount
      - spent_amount
      - inactive_days
      - recurring
      - expiration_behavior
      - expiration_period
      - skip_discounted_products
      - grant_points_for_specific_products
      - action_for_earning
      - products_sku
      - products_skus_array
      - categories_array
      - categories
      - extension_attributes
  amasty-rewards-data-rule-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Amasty\Rewards\Api\Data\RuleInterface
  amasty-shopby-page-data-page-interface:
    type: object
    description: ""
    properties:
      page_id:
        type: integer
      position:
        type: string
      url:
        type: string
      title:
        type: string
      description:
        type: string
      meta_title:
        type: string
      meta_keywords:
        type: string
      meta_description:
        type: string
      conditions:
        type: array
        items:
          type: string
      categories:
        type: array
        items:
          type: string
      stores:
        type: array
        items:
          type: string
      top_block_id:
        type: string
      bottom_block_id:
        type: string
      image:
        type: string
      tag_robots:
        type: string
    required:
      - page_id
      - position
      - url
      - title
      - description
      - meta_title
      - meta_keywords
      - meta_description
      - conditions
      - categories
      - stores
      - top_block_id
      - bottom_block_id
      - image
  amasty-shopby-page-data-page-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/amasty-shopby-page-data-page-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  biotus-shipping-data-product-shipping-interface:
    type: object
    description: Interface ProductShippingInterface
    properties:
      product_shipping_html:
        type: string
    required:
      - product_shipping_html
  lof-market-place-data-seller-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Id
      sale:
        type: string
        description: Sale
      commission_id:
        type: integer
        description: Commission_id
      page_layout:
        type: string
        description: Page_layout
      status:
        type: integer
        description: Status
      verify_status:
        type: integer
        description: Verify_status
      position:
        type: integer
        description: Position
      twitter_id:
        type: string
        description: Twitter_id
      facebook_id:
        type: string
        description: Facebook_id
      gplus_id:
        type: string
        description: Gplus_id
      youtube_id:
        type: string
        description: Youtube_id
      vimeo_id:
        type: string
        description: Vimeo_id
      instagram_id:
        type: string
        description: Instagram_id
      pinterest_id:
        type: string
        description: Pinterest_id
      linkedin_id:
        type: string
        description: Linkedin_id
      tw_active:
        type: string
        description: Tw_active
      fb_active:
        type: string
        description: Fb_active
      gplus_active:
        type: string
        description: Gplus_active
      vimeo_active:
        type: string
        description: Vimeo_active
      instagram_active:
        type: string
        description: Instagram_active
      pinterest_active:
        type: string
        description: Pinterest_active
      linkedin_active:
        type: string
        description: Linkedin_active
      banner_pic:
        type: string
        description: Banner_pic
      shop_url:
        type: string
        description: Shop_url
      logo_pic:
        type: string
        description: Logo_pic
      store_id:
        type: string
        description: Store_id
      seller_id:
        type: integer
        description: Seller_id
      contact_number:
        type: string
        description: Contact_number
      customer_id:
        type: string
        description: Customer_id
      name:
        type: string
        description: Name
      email:
        type: string
        description: Email
      shop_title:
        type: string
        description: Shop_title
      company_locality:
        type: string
        description: Company_locality
      company:
        type: string
        description: Company
      company_description:
        type: string
        description: Company_description
      return_policy:
        type: string
        description: Return_policy
      shipping_policy:
        type: string
        description: Shipping_policy
      address:
        type: string
        description: Address
      country:
        type: string
        description: Country
      image:
        type: string
        description: Image
      thumbnail:
        type: string
        description: Thumbnail
      region:
        type: string
        description: Region
      region_id:
        type: string
        description: Region_id
      city:
        type: string
        description: City
      group:
        type: string
        description: Group
      url:
        type: string
        description: Url
      group_id:
        type: integer
        description: Group_id
      product_count:
        type: integer
        description: Product_count
      postcode:
        type: string
        description: Postcode
      country_id:
        type: string
        description: Country_id
      company_url:
        type: string
        description: Company_url
      message:
        type: string
        description: Message
      url_key:
        type: string
        description: Url_key
      meta_keyword:
        type: string
        description: Meta_keyword
      meta_description:
        type: string
        description: Meta_description
      street:
        type: string
        description: Street
      duration_of_vendor:
        type: string
        description: Duration_of_vendor
      telephone:
        type: string
        description: Telephone
      total_sold:
        type: integer
        description: Total_sold
      is_searchable:
        type: integer
        description: Is_searchable
      attribute_set_id:
        type: integer
        description: Attribute_set_id
      latitude:
        type: number
        description: Latitude
      longitude:
        type: number
        description: Longitude
      opening_hours:
        type: string
        description: Opening_hours
      special_opening_hours:
        type: string
        description: Special_opening_hours
      taxvat:
        type: string
        description: Taxvat
      seller_rates:
        $ref: '#/definitions/lof-market-place-data-rating-search-results-interface'
      seller_reviews:
        $ref: '#/definitions/lof-market-place-data-review-search-results-interface'
      products:
        $ref: '#/definitions/lof-market-place-data-seller-product-search-results-interface'
      total_reviews:
        type: integer
        description: Total_reviews
      total_products:
        type: integer
        description: Total_products
      summary_rates:
        $ref: '#/definitions/lof-market-place-data-summary-rating-interface'
      total_sales:
        type: integer
        description: TotalSales
      vacation:
        $ref: '#/definitions/lof-market-place-data-seller-vacation-interface'
      extension_attributes:
        $ref: '#/definitions/lof-market-place-data-seller-extension-interface'
      custom_attributes:
        type: array
        description: Custom attributes values.
        items:
          $ref: '#/definitions/framework-attribute-interface'
    required:
      - total_reviews
      - total_products
      - total_sales
  lof-market-place-data-rating-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller rating list.
        items:
          $ref: '#/definitions/lof-market-place-data-rating-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-rating-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Id
      rating_id:
        type: integer
        description: Rating_id
      seller_id:
        type: integer
        description: Seller_id
      customer_id:
        type: integer
        description: Customer_id
      rate1:
        type: integer
        description: Rate1
      rate2:
        type: integer
        description: Rate2
      rate3:
        type: integer
        description: Rate3
      rating:
        type: integer
        description: Rating
      status:
        type: string
        description: Status
      title:
        type: string
        description: Title
      detail:
        type: string
        description: Detail
      nickname:
        type: string
        description: Nickname
      created_at:
        type: string
        description: Created_at
      verified_buyer:
        type: integer
        description: Verified_buyer
      is_recommended:
        type: boolean
        description: Is_recommended
      answer:
        type: string
        description: Answer
      admin_note:
        type: string
        description: Admin_note
      like_about:
        type: string
        description: Like_about
      not_like_about:
        type: string
        description: Not_like_about
      guest_email:
        type: string
        description: Guest_email
      email:
        type: string
        description: Email
      plus_review:
        type: integer
        description: Plus_review
      minus_review:
        type: integer
        description: Minus_review
      report_abuse:
        type: integer
        description: Report_abuse
      updated_at:
        type: string
        description: Updated_at
    required:
      - verified_buyer
      - is_recommended
      - answer
      - admin_note
      - like_about
      - not_like_about
      - plus_review
      - minus_review
  lof-market-place-data-review-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller rating list.
        items:
          $ref: '#/definitions/lof-market-place-data-review-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-review-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Id
      reviewseller_id:
        type: integer
        description: Reviewseller_id
      type:
        type: integer
        description: Type
      seller_id:
        type: integer
        description: Seller_id
      customer_id:
        type: integer
        description: Customer_id
      review_id:
        type: integer
        description: Review_id
      product_id:
        type: integer
        description: Product_id
      order_id:
        type: integer
        description: Order_id
      is_public:
        type: integer
        description: Is_public
      rating:
        type: integer
        description: Rating
      status:
        type: integer
        description: Status
      title:
        type: string
        description: Title
      detail:
        type: string
        description: Detail
      nickname:
        type: string
        description: Nickname
      created_at:
        type: string
        description: Created_at
  lof-market-place-data-seller-product-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller list.
        items:
          $ref: '#/definitions/lof-market-place-data-product-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-product-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: ID
      entity_id:
        type: integer
        description: ID
      qty:
        type: integer
        description: ID
      type_id:
        type: integer
        description: Type_id
      sku:
        type: string
        description: SKU
      has_options:
        type: string
        description: Has_options
      required_options:
        type: string
        description: Required_options
      created_at:
        type: string
        description: Created_at
      updated_at:
        type: string
        description: Updated_at
      seller_id:
        type: string
        description: Seller_id
      approval:
        type: string
        description: Approval
      name:
        type: string
        description: Name
      price:
        type: number
        description: Price
      attribute_set_id:
        type: integer
        description: Price
      product_id:
        type: integer
        description: Product_id
      is_in_stock:
        type: integer
        description: Is_in_stock
    required:
      - qty
      - attribute_set_id
      - is_in_stock
  lof-market-place-data-summary-rating-interface:
    type: object
    description: ""
    properties:
      total_count:
        type: integer
        description: Total_count
      count:
        type: integer
        description: Count
      total_rate:
        type: number
        description: Total_rate
      average:
        type: number
        description: Average
      per_rate:
        type: number
        description: PerRate
      rate_one:
        type: number
        description: RateOne
      rate_two:
        type: number
        description: RateTwo
      rate_three:
        type: number
        description: RateThree
      rate_four:
        type: number
        description: RateFour
      rate_five:
        type: number
        description: RateFive
      extension_attributes:
        $ref: '#/definitions/lof-market-place-data-summary-rating-extension-interface'
  lof-market-place-data-summary-rating-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Lof\MarketPlace\Api\Data\SummaryRatingInterface
  lof-market-place-data-seller-vacation-interface:
    type: object
    description: ""
    properties:
      seller_id:
        type: string
        description: Seller_id
      created_at:
        type: string
        description: Created_at
      updated_at:
        type: string
        description: Updated_at
      vacation_id:
        type: string
        description: Vacation_id
      status:
        type: string
        description: Status
      vacation_message:
        type: string
        description: Vacation_message
      from_date:
        type: string
        description: From_date
      to_date:
        type: string
        description: Text add cart
      text_add_cart:
        type: string
        description: Text add cart
  lof-market-place-data-seller-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Lof\MarketPlace\Api\Data\SellerInterface
  lof-market-place-data-register-seller-interface:
    type: object
    description: ""
    properties:
      shop_url:
        type: string
        description: Shop_url
      contact_number:
        type: string
        description: Contact_number
      company:
        type: string
        description: Company
      address:
        type: string
        description: Address
      region:
        type: string
        description: Region
      region_id:
        type: integer
        description: Region_id
      city:
        type: string
        description: City
      group_id:
        type: integer
        description: Group_id
      postcode:
        type: string
        description: Postcode
      country_id:
        type: string
        description: Country_id
      telephone:
        type: string
        description: Telephone
      extension_attributes:
        $ref: '#/definitions/lof-market-place-data-register-seller-extension-interface'
  lof-market-place-data-register-seller-extension-interface:
    type: object
    description: >
      ExtensionInterface class for @see
      \Lof\MarketPlace\Api\Data\RegisterSellerInterface
  lof-market-place-data-message-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller message list.
        items:
          $ref: '#/definitions/lof-market-place-data-message-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-message-interface:
    type: object
    description: ""
    properties:
      message_id:
        type: integer
        description: Message_id
      description:
        type: string
        description: Description
      subject:
        type: string
        description: Subject
      sender_email:
        type: string
        description: Sender_email
      sender_name:
        type: string
        description: Sender_name
      created_at:
        type: string
        description: Created_at
      status:
        type: integer
        description: Status
      is_read:
        type: integer
        description: Is_read
      sender_id:
        type: string
        description: Sender_id
      owner_id:
        type: integer
        description: Owner_id
      receiver_id:
        type: integer
        description: Receiver_id
      seller_send:
        type: integer
        description: Seller_send
  lof-market-place-data-message-detail-interface:
    type: object
    description: ""
    properties:
      detail_id:
        type: integer
        description: Detail_id
      message_id:
        type: integer
        description: Message_id
      seller_send:
        type: string
        description: Seller_send
      sender_id:
        type: integer
        description: Sender_id
      sender_email:
        type: string
        description: Sender_email
      sender_name:
        type: string
        description: Sender_name
      receiver_id:
        type: integer
        description: Receiver_id
      receiver_email:
        type: string
        description: Receiver_email
      receiver_name:
        type: string
        description: Receiver_name
      content:
        type: string
        description: Content
      is_read:
        type: integer
        description: Is_read
      created_at:
        type: string
        description: Created_at
      message_admin:
        type: integer
        description: Message_admin
  lof-market-place-data-admin-message-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller message list.
        items:
          $ref: '#/definitions/lof-market-place-data-admin-message-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-admin-message-interface:
    type: object
    description: ""
    properties:
      message_id:
        type: integer
        description: Message_id
      description:
        type: string
        description: Description
      subject:
        type: string
        description: Subject
      admin_email:
        type: string
        description: Admin_email
      admin_name:
        type: string
        description: Admin_name
      seller_email:
        type: string
        description: Seller_email
      seller_name:
        type: string
        description: Seller_name
      created_at:
        type: string
        description: Created_at
      status:
        type: integer
        description: Status
      is_read:
        type: integer
        description: Is_read
      admin_id:
        type: integer
        description: Admin_id
      owner_id:
        type: integer
        description: Owner_id
      seller_id:
        type: integer
        description: Seller_id
      receiver_id:
        type: integer
        description: Receiver_id
      seller_send:
        type: integer
        description: Seller_send
  lof-market-place-data-message-detail-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller message list.
        items:
          $ref: '#/definitions/lof-market-place-data-message-detail-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-setting-interface:
    type: object
    description: ""
    properties:
      setting_id:
        type: integer
        description: Setting_id
      seller_id:
        type: integer
        description: Seller_id
      group:
        type: string
        description: Group
      key:
        type: string
        description: Key
      value:
        type: string
        description: Value
      scope:
        type: string
        description: Scope
      scope_id:
        type: integer
        description: Scope_id
      path:
        type: string
        description: Path
      updated_at:
        type: string
        description: Updated_at
  lof-market-place-data-setting-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Setting list.
        items:
          $ref: '#/definitions/lof-market-place-data-setting-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-amount-transaction-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: AmountTransaction list.
        items:
          $ref: '#/definitions/lof-market-place-data-amount-transaction-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-amount-transaction-interface:
    type: object
    description: ""
    properties:
      transaction_id:
        type: integer
        description: Transaction_id
      customer_id:
        type: string
        description: Transaction_id
      seller_id:
        type: integer
        description: Seller_id
      type:
        type: string
        description: Type
      amount:
        type: number
        description: Amount
      balance:
        type: number
        description: Balance
      description:
        type: string
        description: Description
      additional_info:
        type: string
        description: Additional_info
      created_at:
        type: string
        description: Created_at
  lof-market-place-data-group-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller group list.
        items:
          $ref: '#/definitions/lof-market-place-data-group-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-group-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Id
      group_id:
        type: integer
        description: Group_id
      url_key:
        type: string
        description: Url_key
      name:
        type: string
        description: Name
      position:
        type: integer
        description: Position
      status:
        type: integer
        description: Status
      show_in_sidebar:
        type: integer
        description: Show_in_sidebar
      limit_product:
        type: integer
        description: Limit_product
      can_add_product:
        type: integer
        description: Can_add_product
      can_use_shiping:
        type: integer
        description: Can_use_shipping
      can_use_message:
        type: integer
        description: Can_use_message
      can_use_vacation:
        type: integer
        description: Can_use_vacation
      can_use_withdrawal:
        type: integer
        description: Can_use_withdrawal
  lof-market-place-data-sellers-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Seller list.
        items:
          $ref: '#/definitions/lof-market-place-data-seller-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-withdrawal-interface:
    type: object
    description: ""
    properties:
      withdrawal_id:
        type: string
        description: Withdrawal_id
      seller_id:
        type: string
        description: Seller_id
      payment_id:
        type: string
        description: Payment_id
      email:
        type: string
        description: Email
      fee:
        type: string
        description: Fee
      amount:
        type: string
        description: Amount
      net_amount:
        type: string
        description: Net_amount
      comment:
        type: string
        description: Comment
      admin_message:
        type: string
        description: Admin_message
      status:
        type: string
        description: Status
      created_at:
        type: string
        description: Created_at
      updated_at:
        type: string
        description: Updated_at
  lof-market-place-data-withdrawal-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Withdrawal list.
        items:
          $ref: '#/definitions/lof-market-place-data-withdrawal-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-payment-interface:
    type: object
    description: ""
    properties:
      payment_id:
        type: string
        description: Payment_id
      name:
        type: string
        description: Name
      fee:
        type: string
        description: Fee
      min_amount:
        type: string
        description: Min_amount
      max_amount:
        type: string
        description: Max_amount
      order:
        type: string
        description: Order
      description:
        type: string
        description: Description
      message:
        type: string
        description: Message
      email_account:
        type: string
        description: Email_account
      additional:
        type: string
        description: Additional
      status:
        type: string
        description: Status
      created_at:
        type: string
        description: Created_at
      updated_at:
        type: string
        description: Updated_at
      fee_by:
        type: string
        description: Fee_by
      fee_percent:
        type: string
        description: Fee_percent
  lof-market-place-data-payment-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        description: Payment list.
        items:
          $ref: '#/definitions/lof-market-place-data-payment-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  lof-market-place-data-submit-seller-review-interface:
    type: object
    description: ""
    properties:
      rate1:
        type: integer
        description: Rate1
      rate2:
        type: integer
        description: Rate2
      rate3:
        type: integer
        description: Rate3
      title:
        type: string
        description: Title
      detail:
        type: string
        description: Detail
      nickname:
        type: string
        description: Nickname
      email:
        type: string
        description: Email
      like_about:
        type: string
        description: Like_about
      not_like_about:
        type: string
        description: Not_like_about
      is_recommended:
        type: boolean
        description: Is_recommended
    required:
      - like_about
      - not_like_about
      - is_recommended
  biotus-marketplace-split-order-data-totals-interface:
    type: object
    description: Interface TotalsInterface
    properties:
      totals:
        $ref: '#/definitions/quote-data-totals-interface'
      total_price:
        type: string
      shipping_methods:
        type: string
    required:
      - totals
      - total_price
      - shipping_methods
  biotus-order-sync-data-order-interface:
    type: object
    description: Interface OrderInterface
    properties:
      shipping_method:
        type: string
        description: Status.
      sending_without_call:
        type: string
      was_created:
        type: string
      address_type_billing:
        type: string
      address_type_shipping:
        type: string
      adjustment_negative:
        type: number
        description: Negative adjustment value.
      adjustment_positive:
        type: number
        description: Positive adjustment value.
      applied_rule_ids:
        type: string
        description: Applied rule IDs.
      base_adjustment_negative:
        type: number
        description: Base negative adjustment value.
      base_adjustment_positive:
        type: number
        description: Base positive adjustment value.
      base_currency_code:
        type: string
        description: Base currency code.
      base_discount_amount:
        type: number
        description: Base discount amount.
      base_discount_canceled:
        type: number
        description: Base discount canceled.
      base_discount_invoiced:
        type: number
        description: Base discount invoiced.
      base_discount_refunded:
        type: number
        description: Base discount refunded.
      base_grand_total:
        type: number
        description: Base grand total.
      base_discount_tax_compensation_amount:
        type: number
        description: Base discount tax compensation amount.
      base_discount_tax_compensation_invoiced:
        type: number
        description: Base discount tax compensation invoiced.
      base_discount_tax_compensation_refunded:
        type: number
        description: Base discount tax compensation refunded.
      base_shipping_amount:
        type: number
        description: Base shipping amount.
      base_shipping_canceled:
        type: number
        description: Base shipping canceled.
      base_shipping_discount_amount:
        type: number
        description: Base shipping discount amount.
      base_shipping_discount_tax_compensation_amnt:
        type: number
        description: >
          Base shipping discount tax compensation
          amount.
      base_shipping_incl_tax:
        type: number
        description: Base shipping including tax.
      base_shipping_invoiced:
        type: number
        description: Base shipping invoiced.
      base_shipping_refunded:
        type: number
        description: Base shipping refunded.
      base_shipping_tax_amount:
        type: number
        description: Base shipping tax amount.
      base_shipping_tax_refunded:
        type: number
        description: Base shipping tax refunded.
      base_subtotal:
        type: number
        description: Base subtotal.
      base_subtotal_canceled:
        type: number
        description: Base subtotal canceled.
      base_subtotal_incl_tax:
        type: number
        description: Base subtotal including tax.
      base_subtotal_invoiced:
        type: number
        description: Base subtotal invoiced.
      base_subtotal_refunded:
        type: number
        description: Base subtotal refunded.
      base_tax_amount:
        type: number
        description: Base tax amount.
      base_tax_canceled:
        type: number
        description: Base tax canceled.
      base_tax_invoiced:
        type: number
        description: Base tax invoiced.
      base_tax_refunded:
        type: number
        description: Base tax refunded.
      base_total_canceled:
        type: number
        description: Base total canceled.
      base_total_due:
        type: number
        description: Base total due.
      base_total_invoiced:
        type: number
        description: Base total invoiced.
      base_total_invoiced_cost:
        type: number
        description: Base total invoiced cost.
      base_total_offline_refunded:
        type: number
        description: Base total offline refunded.
      base_total_online_refunded:
        type: number
        description: Base total online refunded.
      base_total_paid:
        type: number
        description: Base total paid.
      base_total_qty_ordered:
        type: number
        description: Base total quantity ordered.
      base_total_refunded:
        type: number
        description: Base total refunded.
      base_to_global_rate:
        type: number
        description: Base-to-global rate.
      base_to_order_rate:
        type: number
        description: Base-to-order rate.
      billing_address_id:
        type: integer
        description: Billing address ID.
      can_ship_partially:
        type: integer
        description: Can-ship-partially flag value.
      can_ship_partially_item:
        type: integer
        description: Can-ship-partially-item flag value.
      coupon_code:
        type: string
        description: Coupon code.
      created_at:
        type: string
        description: Created-at timestamp.
      customer_dob:
        type: string
        description: >
          In keeping with current security and
          privacy best practices, be sure you are
          aware of any potential legal and
          security risks associated with the
          storage of customers’ full date of
          birth (month, day, year) along with
          other personal identifiers (e.g., full
          name) before collecting or processing
          such data.
      customer_email:
        type: string
        description: Customer email address.
      customer_firstname:
        type: string
        description: Customer first name.
      customer_gender:
        type: integer
        description: Customer gender.
      customer_group_id:
        type: integer
        description: Customer group ID.
      customer_id:
        type: integer
        description: Customer ID.
      customer_is_guest:
        type: integer
        description: Customer-is-guest flag value.
      customer_lastname:
        type: string
        description: Customer last name.
      customer_middlename:
        type: string
        description: Customer middle name.
      customer_note:
        type: string
        description: Customer note.
      customer_note_notify:
        type: integer
        description: Customer-note-notify flag value.
      customer_prefix:
        type: string
        description: Customer prefix.
      customer_suffix:
        type: string
        description: Customer suffix.
      customer_taxvat:
        type: string
        description: Customer value-added tax (VAT).
      discount_amount:
        type: number
        description: Discount amount.
      discount_canceled:
        type: number
        description: Discount canceled.
      discount_description:
        type: string
        description: Discount description.
      discount_invoiced:
        type: number
        description: Discount invoiced.
      discount_refunded:
        type: number
        description: Discount refunded amount.
      edit_increment:
        type: integer
        description: Edit increment value.
      email_sent:
        type: integer
        description: Email-sent flag value.
      entity_id:
        type: integer
        description: Order ID.
      ext_customer_id:
        type: string
        description: External customer ID.
      ext_order_id:
        type: string
        description: External order ID.
      forced_shipment_with_invoice:
        type: integer
        description: Forced-shipment-with-invoice flag value.
      global_currency_code:
        type: string
        description: Global currency code.
      grand_total:
        type: number
        description: Grand total.
      discount_tax_compensation_amount:
        type: number
        description: Discount tax compensation amount.
      discount_tax_compensation_invoiced:
        type: number
        description: >
          Discount tax compensation invoiced
          amount.
      discount_tax_compensation_refunded:
        type: number
        description: >
          Discount tax compensation refunded
          amount.
      hold_before_state:
        type: string
        description: Hold before state.
      hold_before_status:
        type: string
        description: Hold before status.
      increment_id:
        type: string
        description: Increment ID.
      is_virtual:
        type: integer
        description: Is-virtual flag value.
      order_currency_code:
        type: string
        description: Order currency code.
      original_increment_id:
        type: string
        description: Original increment ID.
      payment_authorization_amount:
        type: number
        description: Payment authorization amount.
      payment_auth_expiration:
        type: integer
        description: Payment authorization expiration date.
      protect_code:
        type: string
        description: Protect code.
      quote_address_id:
        type: integer
        description: Quote address ID.
      quote_id:
        type: integer
        description: Quote ID.
      relation_child_id:
        type: string
        description: Relation child ID.
      relation_child_real_id:
        type: string
        description: Relation child real ID.
      relation_parent_id:
        type: string
        description: Relation parent ID.
      relation_parent_real_id:
        type: string
        description: Relation parent real ID.
      remote_ip:
        type: string
        description: Remote IP address.
      shipping_amount:
        type: number
        description: Shipping amount.
      shipping_canceled:
        type: number
        description: Shipping canceled amount.
      shipping_description:
        type: string
        description: Shipping description.
      shipping_discount_amount:
        type: number
        description: Shipping discount amount.
      shipping_discount_tax_compensation_amount:
        type: number
        description: >
          Shipping discount tax compensation
          amount.
      shipping_incl_tax:
        type: number
        description: Shipping including tax amount.
      shipping_invoiced:
        type: number
        description: Shipping invoiced amount.
      shipping_refunded:
        type: number
        description: Shipping refunded amount.
      shipping_tax_amount:
        type: number
        description: Shipping tax amount.
      shipping_tax_refunded:
        type: number
        description: Shipping tax refunded amount.
      state:
        type: string
        description: State.
      status:
        type: string
        description: Status.
      store_currency_code:
        type: string
        description: Store currency code.
      store_id:
        type: integer
        description: Store ID.
      store_name:
        type: string
        description: Store name.
      store_to_base_rate:
        type: number
        description: Store-to-base rate.
      store_to_order_rate:
        type: number
        description: Store-to-order rate.
      subtotal:
        type: number
        description: Subtotal.
      subtotal_canceled:
        type: number
        description: Subtotal canceled amount.
      subtotal_incl_tax:
        type: number
        description: Subtotal including tax amount.
      subtotal_invoiced:
        type: number
        description: Subtotal invoiced amount.
      subtotal_refunded:
        type: number
        description: Subtotal refunded amount.
      tax_amount:
        type: number
        description: Tax amount.
      tax_canceled:
        type: number
        description: Tax canceled amount.
      tax_invoiced:
        type: number
        description: Tax invoiced amount.
      tax_refunded:
        type: number
        description: Tax refunded amount.
      total_canceled:
        type: number
        description: Total canceled.
      total_due:
        type: number
        description: Total due.
      total_invoiced:
        type: number
        description: Total invoiced amount.
      total_item_count:
        type: integer
        description: Total item count.
      total_offline_refunded:
        type: number
        description: Total offline refunded amount.
      total_online_refunded:
        type: number
        description: Total online refunded amount.
      total_paid:
        type: number
        description: Total paid.
      total_qty_ordered:
        type: number
        description: Total quantity ordered.
      total_refunded:
        type: number
        description: Total amount refunded.
      updated_at:
        type: string
        description: Updated-at timestamp.
      weight:
        type: number
        description: Weight.
      x_forwarded_for:
        type: string
        description: X-Forwarded-For field value.
      items:
        type: array
        description: Array of items.
        items:
          $ref: '#/definitions/sales-data-order-item-interface'
      billing_address:
        $ref: '#/definitions/sales-data-order-address-interface'
      payment:
        $ref: '#/definitions/sales-data-order-payment-interface'
      status_histories:
        type: array
        description: Array of status histories.
        items:
          $ref: '#/definitions/sales-data-order-status-history-interface'
      extension_attributes:
        $ref: '#/definitions/sales-data-order-extension-interface'
    required:
      - sending_without_call
      - address_type_billing
      - address_type_shipping
      - base_grand_total
      - customer_email
      - grand_total
      - items
  biotus-customer-data-subscription-options-interface:
    type: object
    description: ""
    properties:
      news:
        type: string
      promotions:
        type: string
      discounts:
        type: string
      viber:
        type: string
      email:
        type: string
      sms:
        type: string
      browser:
        type: string
      subscriber_types:
        type: string
    required:
      - news
      - promotions
      - discounts
      - viber
      - email
      - sms
      - browser
      - subscriber_types
  biotus-reviews-data-videos-interface:
    type: object
    description: Interface VideosInterface
    properties:
      id:
        type: integer
        description: Id field
      review_id:
        type: integer
        description: Review id field
      link:
        type: string
        description: Video link
  biotus-telegram-data-telegram-promo-interface:
    type: object
    description: ""
    properties:
      rule_id:
        type: integer
      name:
        type: string
      from_date:
        type: string
      to_date:
        type: string
      coupon_code:
        type: string
      description:
        type: string
    required:
      - rule_id
      - name
      - from_date
      - to_date
      - coupon_code
      - description
  biotus-telegram-data-telegram-product-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
      sku:
        type: string
      name:
        type: string
      description:
        type: string
      img:
        type: string
      price:
        type: number
    required:
      - id
      - sku
      - name
      - description
      - img
      - price
  biotus-telegram-data-telegram-product-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/biotus-telegram-data-telegram-product-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  biotus-telegram-data-telegram-address-interface:
    type: object
    description: ""
    properties:
      address_id:
        type: integer
      customer_id:
        type: integer
      firstname:
        type: string
      lastname:
        type: string
      postcode:
        type: string
      city:
        type: string
      street:
        type: string
      house:
        type: string
      flat:
        type: string
      telephone:
        type: string
      comments:
        type: string
    required:
      - address_id
      - customer_id
      - firstname
      - lastname
      - postcode
      - city
      - street
      - house
      - flat
      - telephone
      - comments
  biotus-telegram-data-telegram-reward-balance-interface:
    type: object
    description: ""
    properties:
      reward_balance:
        type: number
    required:
      - reward_balance
  biotus-telegram-data-telegram-order-interface:
    type: object
    description: ""
    properties:
      order_number:
        type: string
      order_date:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      payment:
        type: string
      delivery:
        type: string
      status:
        type: string
    required:
      - order_number
      - order_date
      - firstname
      - lastname
      - payment
      - delivery
      - status
  biotus-telegram-data-telegram-order-search-results-interface:
    type: object
    description: ""
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/biotus-telegram-data-telegram-order-interface'
      search_criteria:
        $ref: '#/definitions/framework-search-criteria-interface'
      total_count:
        type: integer
        description: Total count.
    required:
      - items
      - search_criteria
      - total_count
  biotus-v2checkout-data-additional-fields-interface:
    type: object
    description: ""
    properties:
      id:
        type: integer
        description: Id
      quote_id:
        type: string
        description: Quote_id
      comment:
        type: string
        description: Comment
      sending_without_call:
        type: integer
        description: Sending_without_call
    required:
      - id
      - sending_without_call
  hyva-order-cancellation-webapi-data-order-cancellation-success-interface:
    type: object
    description: ""
    properties:
      increment_id:
        type: string
      status:
        type: string
    required:
      - status
